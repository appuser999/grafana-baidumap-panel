{"version":3,"sources":["../src/map_renderer.js"],"names":["link","scope","elem","attrs","ctrl","events","on","render","renderingCompleted","data","map","mapContainer","find","id","indexOf","MP","panel","ak","then","console","log","elementId","BMap","Map","enableMapClick","centerAndZoom","Point","lng","lat","parseInt","initialZoom","enableScrollWheelZoom","setMapStyle","style","theme","navigationSwitch","NavigationControl","scaleSwitch","ScaleControl","navigation","addControl","scale","addEventListener","center","getCenter","event","clickHandler","length","forEach","handler","distanceTool","BMapLib","DistanceTool","rectangleZoomTool","RectangleZoom","followText","autoClose","trafficSwitch","TrafficControl","showPanel","setOffset","Size","traffic","menu","ContextMenu","txtMenuItem","text","callback","open","panToCenterPoint","reset","menuIndex","addItem","MenuItem","addContextMenu","addNode"],"mappings":"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","file":"map_renderer.js","sourcesContent":["/* eslint-disable no-plusplus */\nimport './css/leaflet.css!';\nimport {MP} from './libs/baidumap.js';\n\n\nexport default function link(scope, elem, attrs, ctrl) {\n    ctrl.events.on('render', () => {\n        render();\n        ctrl.renderingCompleted();\n    });\n\n    function render() {\n        if (!ctrl.data && ctrl.map) return;\n\n        const mapContainer = elem.find('.mapcontainer');\n\n        if (mapContainer[0].id.indexOf('{{') > -1) {\n            return;\n        }\n\n        if (!ctrl.map) {\n            MP(ctrl.panel.ak)\n                .then(BMap => {\n                    console.log('start');\n                    const elementId = 'mapid_' + ctrl.panel.id;\n                    ctrl.BMap = BMap;\n                    ctrl.map = new BMap.Map(elementId, {\n                        enableMapClick: ctrl.panel.enableMapClick\n                    });\n                    ctrl.map.centerAndZoom(new BMap.Point(ctrl.panel.lng, ctrl.panel.lat), parseInt(ctrl.panel.initialZoom, 10));\n                    ctrl.map.enableScrollWheelZoom();\n                    ctrl.map.setMapStyle({style: ctrl.panel.theme});\n\n                    ctrl.navigationSwitch = new BMap.NavigationControl();\n                    ctrl.scaleSwitch = new BMap.ScaleControl();\n                    // ctrl.overviewMapSwitch = new BMap.OverviewMapControl({\n                    //     isOpen: true,\n                    //     anchor: BMAP_ANCHOR_BOTTOM_RIGHT\n                    // });\n                    // ctrl.mapTypeSwitch = new BMap.MapTypeControl();\n\n                    if (ctrl.panel.navigation === true) ctrl.map.addControl(ctrl.navigationSwitch);\n                    if (ctrl.panel.scale === true) ctrl.map.addControl(ctrl.scaleSwitch);\n                    // if (ctrl.panel.overviewMap === true) ctrl.map.addControl(ctrl.overviewMapSwitch);\n                    // if (ctrl.panel.mapType === true) ctrl.map.addControl(ctrl.mapTypeSwitch);\n\n                    ctrl.map.addEventListener('dragend', function () {\n                        const center = ctrl.map.getCenter();\n                        ctrl.panel.lat = center.lat;\n                        ctrl.panel.lng = center.lng;\n                    });\n\n                    ctrl.map.addEventListener('click', function (event) {\n                        if (ctrl.clickHandler && ctrl.clickHandler.length > 0) {\n                            ctrl.clickHandler.forEach(handler => handler(event));\n                        }\n                    }, true);\n\n                    // eslint-disable-next-line no-unused-expressions\n                    ctrl.distanceTool = new BMapLib.DistanceTool(ctrl.map);\n                    ctrl.rectangleZoomTool = new BMapLib.RectangleZoom(ctrl.map, {\n                        followText: '拖拽鼠标进行操作',\n                        autoClose: true\n                    });\n\n                    ctrl.trafficSwitch = new BMapLib.TrafficControl({\n                        showPanel: false, // 是否显示路况提示面板\n                    });\n                    ctrl.trafficSwitch.setOffset(new BMap.Size(10, 40));\n                    // ctrl.trafficSwitch.setAnchor(BMAP_ANCHOR_BOTTOM_RIGHT);\n                    if (ctrl.panel.traffic === true) {\n                        ctrl.map.addControl(ctrl.trafficSwitch);\n                    }\n\n                    const menu = new BMap.ContextMenu();\n                    const txtMenuItem = [\n                        {\n                            text: '测距',\n                            callback: function () {\n                                ctrl.distanceTool.open();\n                            }\n                        },\n                        {\n                            text: '拉框放大',\n                            callback: function () {\n                                ctrl.rectangleZoomTool.open();\n                            }\n                        }, {\n                            text: '移到中心点',\n                            callback: function callback() {\n                                ctrl.panToCenterPoint();\n                            }\n                        }, {\n                            text: '重置地图',\n                            callback: function callback() {\n                                ctrl.map.reset();\n                            }\n                        },\n                    ];\n\n                    for (let menuIndex = 0; menuIndex < txtMenuItem.length; menuIndex++) {\n                        menu.addItem(new BMap.MenuItem(txtMenuItem[menuIndex].text, txtMenuItem[menuIndex].callback, 100));\n                    }\n                    ctrl.map.addContextMenu(menu);\n                    ctrl.addNode(BMap);\n                });\n        }\n    }\n}\n"]}