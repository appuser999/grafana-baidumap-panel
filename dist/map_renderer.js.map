{"version":3,"sources":["../src/map_renderer.js"],"names":["link","scope","elem","attrs","ctrl","events","on","render","renderingCompleted","data","map","mapContainer","find","id","indexOf","MP","panel","ak","then","console","log","elementId","BMap","Map","centerAndZoom","Point","lng","lat","parseInt","initialZoom","enableScrollWheelZoom","setMapStyle","style","theme","navigationSwitch","NavigationControl","scaleSwitch","ScaleControl","overviewMapSwitch","OverviewMapControl","isOpen","anchor","BMAP_ANCHOR_BOTTOM_RIGHT","mapTypeSwitch","MapTypeControl","addTileLayer","PanoramaCoverageLayer","stCtrl","PanoramaControl","setOffset","Size","addControl","navigation","scale","overviewMap","mapType","addEventListener","center","getCenter","addNode"],"mappings":"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","file":"map_renderer.js","sourcesContent":["import './css/leaflet.css!';\nimport { MP } from \"./libs/baidumap.js\";\n\n\nexport default function link(scope, elem, attrs, ctrl) {\n  ctrl.events.on('render', () => {\n    render();\n    ctrl.renderingCompleted();\n  });\n\n  function render() {\n    if (!ctrl.data && ctrl.map) return;\n\n    const mapContainer = elem.find('.mapcontainer');\n\n    if (mapContainer[0].id.indexOf('{{') > -1) {\n      return;\n    }\n\n    if (!ctrl.map) {\n      MP(ctrl.panel.ak).then(BMap => {\n        console.log('start');\n        const elementId = \"mapid_\" + ctrl.panel.id;\n        ctrl.BMap = BMap;\n        ctrl.map = new BMap.Map(elementId);\n        ctrl.map.centerAndZoom(new BMap.Point(ctrl.panel.lng, ctrl.panel.lat), parseInt(ctrl.panel.initialZoom, 10));\n        ctrl.map.enableScrollWheelZoom();\n        ctrl.map.setMapStyle({ style: ctrl.panel.theme });\n\n        ctrl.navigationSwitch = new BMap.NavigationControl();\n        ctrl.scaleSwitch = new BMap.ScaleControl();\n        ctrl.overviewMapSwitch = new BMap.OverviewMapControl({isOpen:true, anchor: BMAP_ANCHOR_BOTTOM_RIGHT});\n        ctrl.mapTypeSwitch = new BMap.MapTypeControl();\n\n\n        // 覆盖区域图层测试\n        ctrl.map.addTileLayer(new BMap.PanoramaCoverageLayer());\n\n        var stCtrl = new BMap.PanoramaControl(); //构造全景控件\n        stCtrl.setOffset(new BMap.Size(20, 60));\n        ctrl.map.addControl(stCtrl);//添加全景控件\n\n        if(ctrl.panel.navigation === true)ctrl.map.addControl(ctrl.navigationSwitch);\n        if(ctrl.panel.scale === true)ctrl.map.addControl(ctrl.scaleSwitch);\n        if(ctrl.panel.overviewMap === true)ctrl.map.addControl(ctrl.overviewMapSwitch);\n        if(ctrl.panel.mapType === true)ctrl.map.addControl(ctrl.mapTypeSwitch);\n\n        ctrl.map.addEventListener(\"dragend\", function() {\n          const center = ctrl.map.getCenter();\n          ctrl.panel.lat = center.lat;\n          ctrl.panel.lng = center.lng;\n        });\n\n        ctrl.addNode(BMap);\n      });\n    }\n\n    //ctrl.map.resize();\n\n    //if (ctrl.mapCenterMoved) ctrl.map.panToMapCenter();\n\n    //if (!ctrl.map.legend && ctrl.panel.showLegend) ctrl.map.createLegend();\n\n    //ctrl.map.drawCircles();\n  }\n}\n"]}