{"version":3,"sources":["../src/map_renderer.js"],"names":["link","scope","elem","attrs","ctrl","events","on","render","renderingCompleted","mapContainer","find","id","indexOf","map","MP","panel","ak","then","console","log","elementId","BMap","Map","centerAndZoom","Point","lng","lat","parseInt","initialZoom","enableScrollWheelZoom","setMapStyle","style","theme","navigationSwitch","NavigationControl","scaleSwitch","ScaleControl","overviewMapSwitch","OverviewMapControl","isOpen","anchor","BMAP_ANCHOR_BOTTOM_RIGHT","mapTypeSwitch","MapTypeControl","navigation","addControl","scale","overviewMap","mapType","addEventListener","center","getCenter","addNode"],"mappings":";;;;;;AAIe,WAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACrDA,SAAKC,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7BC;AACAH,WAAKI,kBAAL;AACD,KAHD;;AAKA,aAASD,MAAT,GAAkB;AAChB;;AAEA,UAAME,eAAeP,KAAKQ,IAAL,CAAU,eAAV,CAArB;;AAEA,UAAID,aAAa,CAAb,EAAgBE,EAAhB,CAAmBC,OAAnB,CAA2B,IAA3B,IAAmC,CAAC,CAAxC,EAA2C;AACzC;AACD;;AAED,UAAI,CAACR,KAAKS,GAAV,EAAe;AACbC,WAAGV,KAAKW,KAAL,CAAWC,EAAd,EAAkBC,IAAlB,CAAuB,gBAAQ;AAC7BC,kBAAQC,GAAR,CAAY,OAAZ;AACA,cAAMC,YAAY,WAAWhB,KAAKW,KAAL,CAAWJ,EAAxC;AACAP,eAAKiB,IAAL,GAAYA,IAAZ;AACAjB,eAAKS,GAAL,GAAW,IAAIQ,KAAKC,GAAT,CAAaF,SAAb,CAAX;AACAhB,eAAKS,GAAL,CAASU,aAAT,CAAuB,IAAIF,KAAKG,KAAT,CAAepB,KAAKW,KAAL,CAAWU,GAA1B,EAA+BrB,KAAKW,KAAL,CAAWW,GAA1C,CAAvB,EAAuEC,SAASvB,KAAKW,KAAL,CAAWa,WAApB,EAAiC,EAAjC,CAAvE;AACAxB,eAAKS,GAAL,CAASgB,qBAAT;AACAzB,eAAKS,GAAL,CAASiB,WAAT,CAAqB,EAAEC,OAAO3B,KAAKW,KAAL,CAAWiB,KAApB,EAArB;;AAEA5B,eAAK6B,gBAAL,GAAwB,IAAIZ,KAAKa,iBAAT,EAAxB;AACA9B,eAAK+B,WAAL,GAAmB,IAAId,KAAKe,YAAT,EAAnB;AACAhC,eAAKiC,iBAAL,GAAyB,IAAIhB,KAAKiB,kBAAT,CAA4B,EAACC,QAAO,IAAR,EAAcC,QAAQC,wBAAtB,EAA5B,CAAzB;AACArC,eAAKsC,aAAL,GAAqB,IAAIrB,KAAKsB,cAAT,EAArB;;AAEA,cAAGvC,KAAKW,KAAL,CAAW6B,UAAX,KAA0B,IAA7B,EAAkCxC,KAAKS,GAAL,CAASgC,UAAT,CAAoBzC,KAAK6B,gBAAzB;AAClC,cAAG7B,KAAKW,KAAL,CAAW+B,KAAX,KAAqB,IAAxB,EAA6B1C,KAAKS,GAAL,CAASgC,UAAT,CAAoBzC,KAAK+B,WAAzB;AAC7B,cAAG/B,KAAKW,KAAL,CAAWgC,WAAX,KAA2B,IAA9B,EAAmC3C,KAAKS,GAAL,CAASgC,UAAT,CAAoBzC,KAAKiC,iBAAzB;AACnC,cAAGjC,KAAKW,KAAL,CAAWiC,OAAX,KAAuB,IAA1B,EAA+B5C,KAAKS,GAAL,CAASgC,UAAT,CAAoBzC,KAAKsC,aAAzB;;AAE/BtC,eAAKS,GAAL,CAASoC,gBAAT,CAA0B,SAA1B,EAAqC,YAAW;AAC9C,gBAAMC,SAAS9C,KAAKS,GAAL,CAASsC,SAAT,EAAf;AACA/C,iBAAKW,KAAL,CAAWW,GAAX,GAAiBwB,OAAOxB,GAAxB;AACAtB,iBAAKW,KAAL,CAAWU,GAAX,GAAiByB,OAAOzB,GAAxB;AACD,WAJD;;AAMArB,eAAKgD,OAAL,CAAa/B,IAAb;AACD,SA1BD;AA2BD;;AAED;;AAEA;;AAEA;;AAEA;AACD;AACF;;qBArDuBrB,I;;;;AAHfc,Q,mBAAAA,E","file":"map_renderer.js","sourcesContent":["import './css/leaflet.css!';\nimport { MP } from \"./libs/baidumap.js\";  \n\n\nexport default function link(scope, elem, attrs, ctrl) {\n  ctrl.events.on('render', () => {\n    render();\n    ctrl.renderingCompleted();\n  });\n\n  function render() {\n    //if (!ctrl.data) return;\n  \n    const mapContainer = elem.find('.mapcontainer');\n\n    if (mapContainer[0].id.indexOf('{{') > -1) {\n      return;\n    }\n    \n    if (!ctrl.map) {\n      MP(ctrl.panel.ak).then(BMap => {\n        console.log('start');\n        const elementId = \"mapid_\" + ctrl.panel.id;\n        ctrl.BMap = BMap;\n        ctrl.map = new BMap.Map(elementId);\n        ctrl.map.centerAndZoom(new BMap.Point(ctrl.panel.lng, ctrl.panel.lat), parseInt(ctrl.panel.initialZoom, 10));\n        ctrl.map.enableScrollWheelZoom();\n        ctrl.map.setMapStyle({ style: ctrl.panel.theme });\n\n        ctrl.navigationSwitch = new BMap.NavigationControl();\n        ctrl.scaleSwitch = new BMap.ScaleControl();\n        ctrl.overviewMapSwitch = new BMap.OverviewMapControl({isOpen:true, anchor: BMAP_ANCHOR_BOTTOM_RIGHT});\n        ctrl.mapTypeSwitch = new BMap.MapTypeControl();   \n        \n        if(ctrl.panel.navigation === true)ctrl.map.addControl(ctrl.navigationSwitch);\n        if(ctrl.panel.scale === true)ctrl.map.addControl(ctrl.scaleSwitch);\n        if(ctrl.panel.overviewMap === true)ctrl.map.addControl(ctrl.overviewMapSwitch);\n        if(ctrl.panel.mapType === true)ctrl.map.addControl(ctrl.mapTypeSwitch);\n\n        ctrl.map.addEventListener(\"dragend\", function() {\n          const center = ctrl.map.getCenter();\n          ctrl.panel.lat = center.lat;\n          ctrl.panel.lng = center.lng;\n        });\n            \n        ctrl.addNode(BMap);\n      });\n    }\n    \n    //ctrl.map.resize();\n\n    //if (ctrl.mapCenterMoved) ctrl.map.panToMapCenter();\n\n    //if (!ctrl.map.legend && ctrl.panel.showLegend) ctrl.map.createLegend();\n\n    //ctrl.map.drawCircles();\n  }\n}\n"]}