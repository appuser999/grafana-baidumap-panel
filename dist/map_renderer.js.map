{"version":3,"sources":["../src/map_renderer.js"],"names":["link","scope","elem","attrs","ctrl","events","on","render","renderingCompleted","data","mapContainer","find","id","indexOf","map","MP","panel","ak","then","console","log","elementId","BMap","Map","centerAndZoom","Point","lng","lat","parseInt","initialZoom","enableScrollWheelZoom","setMapStyle","style","theme","navigationSwitch","NavigationControl","scaleSwitch","ScaleControl","overviewMapSwitch","OverviewMapControl","isOpen","anchor","BMAP_ANCHOR_BOTTOM_RIGHT","mapTypeSwitch","MapTypeControl","navigation","addControl","scale","overviewMap","mapType","addEventListener","center","getCenter"],"mappings":";;;;;;AAIe,WAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACrDA,SAAKC,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7BC;AACAH,WAAKI,kBAAL;AACD,KAHD;;AAKA,aAASD,MAAT,GAAkB;AAChB,UAAI,CAACH,KAAKK,IAAV,EAAgB;;AAEhB,UAAMC,eAAeR,KAAKS,IAAL,CAAU,eAAV,CAArB;;AAEA,UAAID,aAAa,CAAb,EAAgBE,EAAhB,CAAmBC,OAAnB,CAA2B,IAA3B,IAAmC,CAAC,CAAxC,EAA2C;AACzC;AACD;;AAED,UAAI,CAACT,KAAKU,GAAV,EAAe;AACbC,WAAGX,KAAKY,KAAL,CAAWC,EAAd,EAAkBC,IAAlB,CAAuB,gBAAQ;AAC7BC,kBAAQC,GAAR,CAAYhB,KAAKY,KAAjB;AACA,cAAMK,YAAY,WAAWjB,KAAKY,KAAL,CAAWJ,EAAxC;AACAR,eAAKU,GAAL,GAAW,IAAIQ,KAAKC,GAAT,CAAaF,SAAb,CAAX;AACAjB,eAAKU,GAAL,CAASU,aAAT,CAAuB,IAAIF,KAAKG,KAAT,CAAerB,KAAKY,KAAL,CAAWU,GAA1B,EAA+BtB,KAAKY,KAAL,CAAWW,GAA1C,CAAvB,EAAuEC,SAASxB,KAAKY,KAAL,CAAWa,WAApB,EAAiC,EAAjC,CAAvE;AACAzB,eAAKU,GAAL,CAASgB,qBAAT;AACA1B,eAAKU,GAAL,CAASiB,WAAT,CAAqB,EAAEC,OAAO5B,KAAKY,KAAL,CAAWiB,KAApB,EAArB;;AAEA7B,eAAK8B,gBAAL,GAAwB,IAAIZ,KAAKa,iBAAT,EAAxB;AACA/B,eAAKgC,WAAL,GAAmB,IAAId,KAAKe,YAAT,EAAnB;AACAjC,eAAKkC,iBAAL,GAAyB,IAAIhB,KAAKiB,kBAAT,CAA4B,EAACC,QAAO,IAAR,EAAcC,QAAQC,wBAAtB,EAA5B,CAAzB;AACAtC,eAAKuC,aAAL,GAAqB,IAAIrB,KAAKsB,cAAT,EAArB;;AAEA,cAAGxC,KAAKY,KAAL,CAAW6B,UAAX,KAA0B,IAA7B,EAAkCzC,KAAKU,GAAL,CAASgC,UAAT,CAAoB1C,KAAK8B,gBAAzB;AAClC,cAAG9B,KAAKY,KAAL,CAAW+B,KAAX,KAAqB,IAAxB,EAA6B3C,KAAKU,GAAL,CAASgC,UAAT,CAAoB1C,KAAKgC,WAAzB;AAC7B,cAAGhC,KAAKY,KAAL,CAAWgC,WAAX,KAA2B,IAA9B,EAAmC5C,KAAKU,GAAL,CAASgC,UAAT,CAAoB1C,KAAKkC,iBAAzB;AACnC,cAAGlC,KAAKY,KAAL,CAAWiC,OAAX,KAAuB,IAA1B,EAA+B7C,KAAKU,GAAL,CAASgC,UAAT,CAAoB1C,KAAKuC,aAAzB;;AAE/BvC,eAAKU,GAAL,CAASoC,gBAAT,CAA0B,SAA1B,EAAqC,YAAW;AAC9C,gBAAIC,SAAS/C,KAAKU,GAAL,CAASsC,SAAT,EAAb;AACAhD,iBAAKY,KAAL,CAAWW,GAAX,GAAiBwB,OAAOxB,GAAxB;AACAvB,iBAAKY,KAAL,CAAWU,GAAX,GAAiByB,OAAOzB,GAAxB;AACD,WAJD;AAKD,SAvBD;AAwBD;AACD;;AAEA;;AAEA;;AAEA;AACD;AACF;;qBAjDuB1B,I;;;;AAHfe,Q,mBAAAA,E","file":"map_renderer.js","sourcesContent":["import './css/leaflet.css!';\nimport { MP } from \"./libs/baidumap.js\";  \n\n\nexport default function link(scope, elem, attrs, ctrl) {\n  ctrl.events.on('render', () => {\n    render();\n    ctrl.renderingCompleted();\n  });\n\n  function render() {\n    if (!ctrl.data) return;\n  \n    const mapContainer = elem.find('.mapcontainer');\n\n    if (mapContainer[0].id.indexOf('{{') > -1) {\n      return;\n    }\n\n    if (!ctrl.map) {\n      MP(ctrl.panel.ak).then(BMap => {\n        console.log(ctrl.panel);\n        const elementId = \"mapid_\" + ctrl.panel.id;\n        ctrl.map = new BMap.Map(elementId);\n        ctrl.map.centerAndZoom(new BMap.Point(ctrl.panel.lng, ctrl.panel.lat), parseInt(ctrl.panel.initialZoom, 10));\n        ctrl.map.enableScrollWheelZoom();\n        ctrl.map.setMapStyle({ style: ctrl.panel.theme });\n\n        ctrl.navigationSwitch = new BMap.NavigationControl();\n        ctrl.scaleSwitch = new BMap.ScaleControl();\n        ctrl.overviewMapSwitch = new BMap.OverviewMapControl({isOpen:true, anchor: BMAP_ANCHOR_BOTTOM_RIGHT});\n        ctrl.mapTypeSwitch = new BMap.MapTypeControl();     \n        \n        if(ctrl.panel.navigation === true)ctrl.map.addControl(ctrl.navigationSwitch);\n        if(ctrl.panel.scale === true)ctrl.map.addControl(ctrl.scaleSwitch);\n        if(ctrl.panel.overviewMap === true)ctrl.map.addControl(ctrl.overviewMapSwitch);\n        if(ctrl.panel.mapType === true)ctrl.map.addControl(ctrl.mapTypeSwitch);\n\n        ctrl.map.addEventListener(\"dragend\", function() {\n          var center = ctrl.map.getCenter();\n          ctrl.panel.lat = center.lat;\n          ctrl.panel.lng = center.lng;\n        });\n      });\n    }\n    //ctrl.map.resize();\n\n    //if (ctrl.mapCenterMoved) ctrl.map.panToMapCenter();\n\n    //if (!ctrl.map.legend && ctrl.panel.showLegend) ctrl.map.createLegend();\n\n    //ctrl.map.drawCircles();\n  }\n}\n"]}