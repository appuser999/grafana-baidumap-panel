{"version":3,"sources":["../src/baidumap.js"],"names":["_","L","MP","tileServers","url","attribution","subdomains","WorldMap","ctrl","mapContainer","circles","console","log","createMap","panel","ak","then","that","elementId","id","map","BMap","Map","centerAndZoom","Point","initialZoom","enableScrollWheelZoom","addControl","NavigationControl","ScaleControl","OverviewMapControl","MapTypeControl","menu","ContextMenu","txtMenuItem","text","callback","zoomIn","zoomOut","i","length","addItem","MenuItem","addContextMenu","legend","window","control","position","onAdd","_div","DomUtil","create","update","thresholds","data","legendHtml","colors","index","innerHTML","addTo","locations","sort","dataPoints","isEqual","filter","o","hideEmpty","isNil","value","hideZero","circlesLayer","clearLayers","removeCircles","filterEmptyAndZeroValues","needToRedrawCircles","clearCircles","createCircles","updateCircles","forEach","dataPoint","locationName","push","createCircle","addCircles","circle","find","cir","options","location","key","setRadius","calcCircleSize","setStyle","color","getColor","fillColor","fillOpacity","unbindPopup","createPopup","valueRounded","circleMarker","locationLatitude","locationLongitude","radius","dataPointValue","circleMinSize","parseInt","circleMaxSize","valueRange","dataFactor","lowestValue","circleSizeRange","unit","unitSingular","unitPlural","label","trim","bindPopup","point","stickyLabels","on","onMouseOver","evt","layer","target","bringToFront","openPopup","onMouseOut","closePopup","onClick","$","parseJSON","href","first","invalidateSize","panTo","parseFloat","lat","lng","mapCenterMoved","removeFrom","layerGroup","removeLayer","zoomFactor","setZoom","removeLegend","remove"],"mappings":"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","file":"baidumap.js","sourcesContent":["/* eslint-disable no-plusplus */\nimport _ from 'lodash';\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\nimport {MP} from './libs/baidumap.js';\n\nconst tileServers = {\n    'CartoDB Positron': {\n        url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png',\n        attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n        subdomains: 'abcd'\n    },\n    'CartoDB Dark': {\n        url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png',\n        attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n        subdomains: 'abcd'\n    }\n};\n\nexport default class WorldMap {\n    constructor(ctrl, mapContainer) {\n        this.ctrl = ctrl;\n        this.mapContainer = mapContainer;\n        this.circles = [];\n        console.log(ctrl);\n        return this.createMap();\n    }\n\n    createMap() {\n        MP(this.ctrl.panel.ak)\n            .then(BMap => {\n                const that = this;\n                const elementId = 'mapid_' + this.ctrl.panel.id;\n                this.map = new BMap.Map(elementId);\n                this.map.centerAndZoom(new BMap.Point(116.404, 39.915), this.ctrl.panel.initialZoom);\n                this.map.enableScrollWheelZoom();\n                this.map.addControl(new BMap.NavigationControl()); // 添加平移缩放控件\n                this.map.addControl(new BMap.ScaleControl()); // 添加比例尺控件\n                this.map.addControl(new BMap.OverviewMapControl()); // 添加缩略地图控件\n                this.map.enableScrollWheelZoom(); // 启用滚轮放大缩小\n                this.map.addControl(new BMap.MapTypeControl()); // 添加地图类型控件\n\n                const menu = new BMap.ContextMenu();\n                const txtMenuItem = [\n                    {\n                        text: '放大',\n                        callback: function () {\n                            that.map.zoomIn();\n                        }\n                    },\n                    {\n                        text: '缩小',\n                        callback: function () {\n                            that.map.zoomOut();\n                        }\n                    }\n                ];\n\n                for (let i = 0; i < txtMenuItem.length; i++) {\n                    menu.addItem(new BMap.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback, 100));\n                }\n                that.map.addContextMenu(menu);\n\n            });\n    }\n\n    createLegend() {\n        this.legend = window.L.control({\n            position: 'bottomleft'\n        });\n        this.legend.onAdd = () => {\n            this.legend._div = window.L.DomUtil.create('div', 'info legend');\n            this.legend.update();\n            return this.legend._div;\n        };\n\n        this.legend.update = () => {\n            const thresholds = this.ctrl.data.thresholds;\n            let legendHtml = '';\n            legendHtml += '<div class=\"legend-item\"><i style=\"background:' + this.ctrl.panel.colors[0] + '\"></i> ' +\n                '&lt; ' + thresholds[0] + '</div>';\n            for (let index = 0; index < thresholds.length; index += 1) {\n                legendHtml += '<div class=\"legend-item\"><i style=\"background:' + this.ctrl.panel.colors[index + 1] + '\"></i> ' +\n                    thresholds[index] + (thresholds[index + 1] ? '&ndash;' + thresholds[index + 1] + '</div>' : '+');\n            }\n            this.legend._div.innerHTML = legendHtml;\n        };\n        this.legend.addTo(this.map);\n    }\n\n    needToRedrawCircles(data) {\n        if (this.circles.length === 0 && data.length > 0) return true;\n\n        if (this.circles.length !== data.length) return true;\n        const locations = _.map(_.map(this.circles, 'options'), 'location')\n            .sort();\n        const dataPoints = _.map(data, 'key')\n            .sort();\n        return !_.isEqual(locations, dataPoints);\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0);\n        });\n    }\n\n    clearCircles() {\n        if (this.circlesLayer) {\n            this.circlesLayer.clearLayers();\n            this.removeCircles(this.circlesLayer);\n            this.circles = [];\n        }\n    }\n\n    drawCircles() {\n        const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n        if (this.needToRedrawCircles(data)) {\n            this.clearCircles();\n            this.createCircles(data);\n        } else {\n            this.updateCircles(data);\n        }\n    }\n\n    createCircles(data) {\n        const circles = [];\n        data.forEach((dataPoint) => {\n            if (!dataPoint.locationName) return;\n            circles.push(this.createCircle(dataPoint));\n        });\n        this.circlesLayer = this.addCircles(circles);\n        this.circles = circles;\n    }\n\n    updateCircles(data) {\n        data.forEach((dataPoint) => {\n            if (!dataPoint.locationName) return;\n\n            const circle = _.find(this.circles, (cir) => {\n                return cir.options.location === dataPoint.key;\n            });\n\n            if (circle) {\n                circle.setRadius(this.calcCircleSize(dataPoint.value || 0));\n                circle.setStyle({\n                    color: this.getColor(dataPoint.value),\n                    fillColor: this.getColor(dataPoint.value),\n                    fillOpacity: 0.5,\n                    location: dataPoint.key,\n                });\n                circle.unbindPopup();\n                this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n            }\n        });\n    }\n\n    createCircle(dataPoint) {\n        const circle = window.L.circleMarker([dataPoint.locationLatitude, dataPoint.locationLongitude], {\n            radius: this.calcCircleSize(dataPoint.value || 0),\n            color: this.getColor(dataPoint.value),\n            fillColor: this.getColor(dataPoint.value),\n            fillOpacity: 0.5,\n            location: dataPoint.key\n        });\n\n        this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n        return circle;\n    }\n\n    calcCircleSize(dataPointValue) {\n        const circleMinSize = parseInt(this.ctrl.panel.circleMinSize, 10) || 2;\n        const circleMaxSize = parseInt(this.ctrl.panel.circleMaxSize, 10) || 30;\n\n        if (this.ctrl.data.valueRange === 0) {\n            return circleMaxSize;\n        }\n\n        const dataFactor = (dataPointValue - this.ctrl.data.lowestValue) / this.ctrl.data.valueRange;\n        const circleSizeRange = circleMaxSize - circleMinSize;\n\n        return (circleSizeRange * dataFactor) + circleMinSize;\n    }\n\n    createPopup(circle, locationName, value) {\n        const unit = value && value === 1 ? this.ctrl.panel.unitSingular : this.ctrl.panel.unitPlural;\n        const label = ('显示标签：：' + locationName + ': ' + value + ' ' + (unit || '')).trim();\n        circle.bindPopup(label, {\n            'offset': window.L.point(0, -2),\n            'className': 'worldmap-popup',\n            'closeButton': this.ctrl.panel.stickyLabels\n        });\n\n        circle.on('mouseover', function onMouseOver(evt) {\n            const layer = evt.target;\n            layer.bringToFront();\n            this.openPopup();\n        });\n\n        if (!this.ctrl.panel.stickyLabels) {\n            circle.on('mouseout', function onMouseOut() {\n                circle.closePopup();\n            });\n        }\n\n        circle.on('click', function onClick(evt) {\n            const layer = evt.target;\n            layer.bringToFront();\n            //this.openPopup();\n            // console.log(this);\n            console.log(locationName);\n            console.log($.parseJSON(locationName));\n            location.href = 'http://' + locationName;\n        });\n    }\n\n    getColor(value) {\n        for (let index = this.ctrl.data.thresholds.length; index > 0; index -= 1) {\n            if (value >= this.ctrl.data.thresholds[index - 1]) {\n                return this.ctrl.panel.colors[index];\n            }\n        }\n        return _.first(this.ctrl.panel.colors);\n    }\n\n    resize() {\n        this.map.invalidateSize();\n    }\n\n    panToMapCenter() {\n        this.map.panTo([parseFloat(this.ctrl.panel.lat), parseFloat(this.ctrl.panel.lng)]);\n        this.ctrl.mapCenterMoved = false;\n    }\n\n    removeLegend() {\n        this.legend.removeFrom(this.map);\n        this.legend = null;\n    }\n\n    addCircles(circles) {\n        return window.L.layerGroup(circles)\n            .addTo(this.map);\n    }\n\n    removeCircles() {\n        this.map.removeLayer(this.circlesLayer);\n    }\n\n    setZoom(zoomFactor) {\n        this.map.setZoom(parseInt(zoomFactor, 10));\n    }\n\n    remove() {\n        this.circles = [];\n        if (this.circlesLayer) this.removeCircles();\n        if (this.legend) this.removeLegend();\n        this.map.remove();\n    }\n}\n"]}