{"version":3,"sources":["../src/gps_helper.js"],"names":["PI","x_pi","delta","lat","lng","a","ee","dLat","transformLat","dLng","transformLng","radLat","magic","Math","sin","sqrtMagic","sqrt","cos","gpsToChina","wgsLat","wgsLng","outOfChina","d","Number","chinaToGps","gcjLat","gcjLng","chinaToGpsExact","initDelta","threshold","mLat","mLng","pLat","pLng","i","tmp","gcj_encrypt","abs","chinaToBaidu","x","y","z","theta","atan2","bdLng","bdLat","baiduToChina","baiduToGps","china","gpsToBaidu","gpsLat","gpsLng","gpsToMercator","log","tan","mercatorToGps","mercatorLat","mercatorLng","atan","exp","distance","latA","lngA","latB","lngB","earthR","s","alpha","acos","ret"],"mappings":"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","file":"gps_helper.js","sourcesContent":["/* eslint-disable no-mixed-operators,one-var,no-plusplus,id-length,new-cap */\n/**\n * 经纬度转换\n */\nexport default {\n    PI: 3.14159265358979324,\n    x_pi: (3.14159265358979324 * 3000.0) / 180.0,\n    delta: function (lat, lng) {\n        // Krasovsky 1940\n        //\n        // a = 6378245.0, 1/f = 298.3\n        // b = a * (1 - f)\n        // ee = (a^2 - b^2) / a^2;\n        const a = 6378245.0; //  a: 卫星椭球坐标投影到平面地图坐标系的投影因子。\n        const ee = 0.00669342162296594323; //  ee: 椭球的偏心率。\n        let dLat = this.transformLat(lng - 105.0, lat - 35.0);\n        let dLng = this.transformLng(lng - 105.0, lat - 35.0);\n        const radLat = (lat / 180.0) * this.PI;\n        let magic = Math.sin(radLat);\n        magic = 1 - ee * magic * magic;\n        const sqrtMagic = Math.sqrt(magic);\n        dLat = (dLat * 180.0) / (((a * (1 - ee)) / (magic * sqrtMagic)) * this.PI);\n        dLng = (dLng * 180.0) / ((a / sqrtMagic) * Math.cos(radLat) * this.PI);\n        return {lat: dLat, lng: dLng};\n    },\n    /**\n     * WGS-84 to GCJ-02 GPS坐标转中国坐标\n     * @param  {number} wgsLat GPS纬度\n     * @param  {number} wgsLng GPS经度\n     * @return {object}        返回中国坐标经纬度对象\n     */\n    gpsToChina: function (wgsLat, wgsLng) {\n        if (this.outOfChina(wgsLat, wgsLng)) return {lat: wgsLat, lng: wgsLng};\n        const d = this.delta(wgsLat, wgsLng);\n        return {lat: Number(wgsLat) + Number(d.lat), lng: Number(wgsLng) + Number(d.lng)};\n    },\n    /**\n     * GCJ-02 to WGS-84 中国标准坐标转GPS坐标\n     * @param  {number} gcjLat 中国标准坐标纬度\n     * @param  {number} gcjLng 中国标准坐标经度\n     * @return {object}        返回GPS经纬度对象\n     */\n    chinaToGps: function (gcjLat, gcjLng) {\n        if (this.outOfChina(gcjLat, gcjLng)) return {lat: gcjLat, lng: gcjLng};\n        const d = this.delta(gcjLat, gcjLng);\n        return {lat: Number(gcjLat) - Number(d.lat), lng: Number(gcjLng) - Number(d.lng)};\n    },\n    /**\n     * GCJ-02 to WGS-84 exactly 中国标准坐标转GPS坐标(精确)\n     * @param  {number} gcjLat  中国标准坐标纬度\n     * @param  {number} gcjLng  中国标准坐标经度\n     * @return {object}         返回GPS经纬度对象(精确)\n     */\n    chinaToGpsExact: function (gcjLat, gcjLng) {\n        const initDelta = 0.01;\n        const threshold = 0.000000001;\n        let dLat = initDelta,\n            dLng = initDelta;\n        let mLat = gcjLat - dLat,\n            mLng = gcjLng - dLng;\n        let pLat = gcjLat + dLat,\n            pLng = gcjLng + dLng;\n        let wgsLat,\n            wgsLng,\n            i = 0;\n        while (1) {\n            wgsLat = (mLat + pLat) / 2;\n            wgsLng = (mLng + pLng) / 2;\n            const tmp = this.gcj_encrypt(wgsLat, wgsLng);\n            dLat = tmp.lat - gcjLat;\n            dLng = tmp.lng - gcjLng;\n            if (Math.abs(dLat) < threshold && Math.abs(dLng) < threshold) break;\n\n            if (dLat > 0) {\n                pLat = wgsLat;\n            } else {\n                mLat = wgsLat;\n            }\n            if (dLng > 0) {\n                pLng = wgsLng;\n            } else {\n                mLng = wgsLng;\n            }\n\n            if (++i > 10000) break;\n        }\n        // console.log(i);\n        return {lat: wgsLat, lng: wgsLng};\n    },\n    /**\n     * GCJ-02 to BD-09 中国标准坐标转百度坐标(精确)\n     * @param  {number} gcjLat  中国标准坐标纬度\n     * @param  {number} gcjLng  中国标准坐标经度\n     * @return {object}         返回百度经纬度对象\n     */\n    chinaToBaidu: function (gcjLat, gcjLng) {\n        const x = gcjLng,\n            y = gcjLat;\n        const z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * this.x_pi);\n        const theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * this.x_pi);\n        const bdLng = z * Math.cos(theta) + 0.0065;\n        const bdLat = z * Math.sin(theta) + 0.006;\n        return {lat: bdLat, lng: bdLng};\n    },\n    /**\n     * BD-09 to GCJ-02 百度坐标转中国标准坐标\n     * @param  {number} bdLat  百度坐标纬度\n     * @param  {number} bdLng  百度坐标经度\n     * @return {object}        返回中国标准经纬度对象\n     */\n    baiduToChina: function (bdLat, bdLng) {\n        const x = bdLng - 0.0065,\n            y = bdLat - 0.006;\n        const z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * this.x_pi);\n        const theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * this.x_pi);\n        const gcjLng = z * Math.cos(theta);\n        const gcjLat = z * Math.sin(theta);\n        return {lat: gcjLat, lng: gcjLng};\n    },\n    /**\n     * BD-09 to GCJ-02 百度坐标转gps坐标\n     * @param  {number} bdLat  百度坐标纬度\n     * @param  {number} bdLng  百度坐标经度\n     * @return {object}        返回gps经纬度对象\n     */\n    baiduToGps: function (bdLat, bdLng) {\n        const china = this.baiduToChina(bdLat, bdLng);\n        return this.chinaToGps(china.lat, china.lng);\n    },\n    /**\n     * WGS-84 to to BD-09 GPS坐标转Baidu坐标\n     * @param  {number} gpsLat GPS纬度\n     * @param  {number} gpsLng GPS经度\n     * @return {object}        返回百度经纬度对象\n     */\n    gpsToBaidu: function (gpsLat, gpsLng) {\n        const china = this.gpsToChina(gpsLat, gpsLng);\n        return this.chinaToBaidu(china.lat, china.lng);\n    },\n    /**\n     * WGS-84 to Web mercator GPS坐标转墨卡托坐标\n     * @param  {number} wgsLat GPS纬度\n     * @param  {number} wgsLng GPS经度\n     * @return {object}        返回墨卡托经纬度对象\n     */\n    gpsToMercator: function (wgsLat, wgsLng) {\n        const x = (wgsLng * 20037508.34) / 180;\n        let y = Math.log(Math.tan(((90 + wgsLat) * this.PI) / 360)) / (this.PI / 180);\n        y = (y * 20037508.34) / 180;\n        return {lat: y, lng: x};\n        /*\n        if ((Math.abs(wgsLng) > 180 || Math.abs(wgsLat) > 90))\n            return null;\n        const x = 6378137.0 * wgsLng * 0.017453292519943295;\n        const a = wgsLat * 0.017453292519943295;\n        const y = 3189068.5 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a)));\n        return {'lat' : y, 'lng' : x};\n        //*/\n    },\n    /**\n     * Web mercator to WGS-84 墨卡托坐标转GPS坐标\n     * @param  {number} mercatorLat 墨卡托纬度\n     * @param  {number} mercatorLng 墨卡托经度\n     * @return {object}             返回GPS经纬度对象\n     */\n    mercatorToGps: function (mercatorLat, mercatorLng) {\n        const x = (mercatorLng / 20037508.34) * 180;\n        let y = (mercatorLat / 20037508.34) * 180;\n        y = (180 / this.PI) * (2 * Math.atan(Math.exp((y * this.PI) / 180)) - this.PI / 2);\n        return {lat: y, lng: x};\n        /*\n        if (Math.abs(mercatorLng) < 180 && Math.abs(mercatorLat) < 90)\n            return null;\n        if ((Math.abs(mercatorLng) > 20037508.3427892) || (Math.abs(mercatorLat) > 20037508.3427892))\n            return null;\n        const a = mercatorLng / 6378137.0 * 57.295779513082323;\n        const x = a - (Math.floor(((a + 180.0) / 360.0)) * 360.0);\n        const y = (1.5707963267948966 - (2.0 * Math.atan(Math.exp((-1.0 * mercatorLat) / 6378137.0)))) * 57.295779513082323;\n        return {'lat' : y, 'lng' : x};\n        //*/\n    },\n    /**\n     * 两点之间的距离\n     * @param  {number} latA 起点纬度\n     * @param  {number} lngA 起点经度\n     * @param  {number} latB 终点纬度\n     * @param  {number} lngB 终点经度\n     * @return {number}      返回距离(米)\n     */\n    distance: function (latA, lngA, latB, lngB) {\n        const earthR = 6371000;\n        const x = Math.cos((latA * this.PI) / 180) * Math.cos((latB * this.PI) / 180) * Math.cos(((lngA - lngB) * this.PI) / 180);\n        const y = Math.sin((latA * this.PI) / 180) * Math.sin((latB * this.PI) / 180);\n        let s = x + y;\n        if (s > 1) s = 1;\n        if (s < -1) s = -1;\n        const alpha = Math.acos(s);\n        const distance = alpha * earthR;\n        return distance;\n    },\n    /**\n     * 是否在中国之外\n     * @param  {number} lat 纬度\n     * @param  {number} lng 经度\n     * @return {boolean]}     返回结果真或假\n     */\n    outOfChina: function (lat, lng) {\n        if (lng < 72.004 || lng > 137.8347) return true;\n        if (lat < 0.8293 || lat > 55.8271) return true;\n        return false;\n    },\n    transformLat: function (x, y) {\n        let ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * Math.sqrt(Math.abs(x));\n        ret += ((20.0 * Math.sin(6.0 * x * this.PI) + 20.0 * Math.sin(2.0 * x * this.PI)) * 2.0) / 3.0;\n        ret += ((20.0 * Math.sin(y * this.PI) + 40.0 * Math.sin((y / 3.0) * this.PI)) * 2.0) / 3.0;\n        ret += ((160.0 * Math.sin((y / 12.0) * this.PI) + 320 * Math.sin((y * this.PI) / 30.0)) * 2.0) / 3.0;\n        return ret;\n    },\n    transformLng: function (x, y) {\n        let ret = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * Math.sqrt(Math.abs(x));\n        ret += ((20.0 * Math.sin(6.0 * x * this.PI) + 20.0 * Math.sin(2.0 * x * this.PI)) * 2.0) / 3.0;\n        ret += ((20.0 * Math.sin(x * this.PI) + 40.0 * Math.sin((x / 3.0) * this.PI)) * 2.0) / 3.0;\n        ret += ((150.0 * Math.sin((x / 12.0) * this.PI) + 300.0 * Math.sin((x / 30.0) * this.PI)) * 2.0) / 3.0;\n        return ret;\n    }\n};\n"]}