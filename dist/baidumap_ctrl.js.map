{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["getColor","orginBili","alpha","bili","one","r","g","b","yellowValue","fullRedValue","darkRedWeight","parseInt","getFilterColor","originOption","styleOption","forEach","keyName","Object","assign","filterCtx","ctx","usePolyOption","sourceOption","getDefaultPolyOption","keyMap","sourceName","targetName","keyValue","getDotRect","mp","lng","lat","squareSize","isCenterPoint","standardLen","xScale","Math","cos","PI","lngDelta","latDelta","pixel","pointToPixel","window","BMap","Point","pixel2","x","y","w","h","strokeWeight","strokeOpacity","strokeColor","fillColor","fillOpacity","isPointInCircle","checkPixel","circlePixel","circleRadius","isPointInRect","sourceCheckRect","checkRect","isPointInPoly","polyPoints","inside","i","j","length","xi","yi","xj","yj","intersect","MetricsPanelCtrl","TimeSeries","kbn","gpsHelper","_","mapRenderer","DataFormatter","decodeGeoHash","panelDefaults","ak","maxDataPoints","theme","initialZoom","autoFocusCenterDistance","valueName","locationData","gpsType","esMetric","decimals","navigation","scale","hideEmpty","overviewMap","hideZero","mapType","traffic","clusterPoint","globalConfig","enableMapClick","typeName","lngName","latName","posName","geohashName","configName","contentName","gpsTypeName","circleName","squareName","polygonName","polylineName","pointName","labelName","bdLabelName","bdPolylineName","bdPolygonName","bdCircleName","bdMarkerName","bdRidingRouteName","bdWalkingRouteName","bdDrivingRouteName","bdHeatRouteName","centerName","maskColor","contentOption","contentTitle","heatCount","heatMax","labelStyle","labelTitle","pointSize","squareLength","isStroke","isFill","markerIcon","markerLabel","markerEnableDragging","markerAnimation","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","markers","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","poiType","getPoiOption","poiConfig","defaultValue","typeOption","getPoiTypeConfig","poiOption","getPoiConfig","poiItem","configKey","extJson","JSON","parse","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","tableHandlers","datas","splice","addNode","render","clearOverlays","point","defaultContent","that","e","clickPoint","poiContent","getPoiContent","infoWindow","InfoWindow","openInfoWindow","markerOption","iconUrl","Number","isInteger","icon","Icon","Size","offset","imageOffset","imageSize","anchor","marker","Marker","pointLabel","label","Label","setLabel","push","enableDragging","addEventListener","getPoiInfoWindowHandler","addOverlay","setAnimation","BMAP_ANIMATION_BOUNCE","alert","poiData","getPoiType","sourceGps","sourceGpsId","pointTypeName","poiList","clickHandler","shapeMap","translatePointListMap","Map","callbackList","rawLength","translatedItems","translateCallback","myPoiIndex","myGpsIndex","myGps","translatedData","poiIndex","gpsIndex","gps","sort","a","translateIndex","translatedItem","poiIndexKey","pointItem","shapeList","points","console","log","pointArray","v","pointCollection","PointCollection","getPoiTypeOption","heatPoiType","heatShapeList","heatmapOverlay","BMapLib","HeatmapOverlay","radius","count","setDataSet","max","labelTypeName","labelArray","labelText","labelItem","position","enableMassClear","setStyle","setTitle","markerTypeName","markerArray","addMarker","MarkerClusterer","poiTypeMap","item","pointIndex","driving","renderOptions","autoViewport","search","lastCenterPoint","centerPoint","centerPointCount","centerPointLngTotal","centerPointLatTotal","getDistance","panToCenterPoint","shape","labelPoiTypes","linePoiTypes","dotPoiTypes","canvasTypes","canvasLayerUpdater","canvasLayer","canvas","getContext","matchItems","save","clearRect","width","height","beginPath","fillStyle","fillRect","closePath","restore","startPoint","moveTo","linePoint","lineTo","stroke","globalAlpha","fill","isCircle","isPoint","layerItem","size","posRect","parseFloat","arc","rect","labelPoint","fillText","canvasLayerPointChecker","checkPoint","reverse","p","some","canvasType","CanvasLayer","paneName","zIndex","update","event","filter","matchItem","translateOne","getMapSourceId","newGps","gpsToBaidu","chinaToBaidu","setTimeout","has","set","get","gpsItem","longitude","latitude","gpsList","split","gpsStr","items","trim","keys","sourceMapId","sourcePointList","convertor","Convertor","groupSize","groupIndex","pointList","translate","result","status","index","error","panTo","o","isNil","value","snapshotData","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","setMapStyle","style","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","trafficSwitch","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"baidumap_ctrl.js","sourcesContent":["/* eslint-disable eqeqeq,id-length,no-inner-declarations,no-plusplus,no-mixed-operators,no-continue,no-nested-ternary */\n/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport gpsHelper from './gps_helper';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\n\nimport decodeGeoHash from './geohash';\n\nconst panelDefaults = {\n    ak: 'QKCqsdHBbGxBnNbvUwWdUEBjonk7jUj6',\n    maxDataPoints: 1,\n    theme: '',\n    lat: 39.968539,\n    lng: 116.497856,\n    initialZoom: 14,\n    autoFocusCenterDistance: 10000,\n    valueName: 'current',\n    locationData: 'json result',\n    gpsType: 'BD09',\n    esMetric: 'Count',\n    decimals: 0,\n    navigation: true,\n    scale: true,\n    hideEmpty: false,\n    overviewMap: false,\n    hideZero: false,\n    mapType: false,\n    traffic: false,\n    clusterPoint: false,\n    globalConfig: '',\n    enableMapClick: false,\n\n    typeName: 'type',\n    lngName: 'longitude',\n    latName: 'latitude',\n    posName: 'pos',\n    geohashName: 'geohash',\n    configName: 'config',\n    contentName: 'content',\n    gpsTypeName: 'gpsType',\n\n    circleName: 'circle',\n    squareName: 'square',\n    polygonName: 'polygon',\n    polylineName: 'polyline',\n    pointName: 'point',\n    labelName: 'label',\n    bdLabelName: 'Label',\n    bdPolylineName: 'Polyline',\n    bdPolygonName: 'Polygon',\n    bdCircleName: 'Circle',\n    bdMarkerName: 'Marker',\n    bdRidingRouteName: 'RidingRoute',\n    bdWalkingRouteName: 'WalkingRoute',\n    bdDrivingRouteName: 'DrivingRoute',\n    bdHeatRouteName: 'Heat',\n    centerName: 'center',\n    maskColor: '',\n\n    contentOption: 'contentOption',\n    contentTitle: 'contentTitle',\n    heatCount: 'heatCount',\n    heatMax: 'heatMax',\n    labelStyle: 'labelStyle',\n    labelTitle: 'labelTitle',\n    circleRadius: 'radius',\n    pointSize: 'size',\n    squareLength: 'length',\n    fillColor: 'fillColor',\n    isStroke: 'isStroke',\n    isFill: 'isFill',\n    markerIcon: 'markerIcon',\n    markerLabel: 'markerLabel',\n    markerEnableDragging: 'markerEnableDragging',\n    markerAnimation: 'markerAnimation',\n};\n\n\nfunction getColor(orginBili, alpha) {\n    if ((typeof orginBili) !== 'number') {\n        return orginBili;\n    }\n    const bili = orginBili > 100 ? 100 : orginBili;\n    // 百分之一 = (单色值范围) / 50;  单颜色的变化范围只在50%之内\n    const one = (255 + 255) / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    const yellowValue = 50;\n    const fullRedValue = 95;\n    const darkRedWeight = 0.6;\n\n    if (bili <= yellowValue) {\n        // 比例小于yellowValue的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\n        r = one * bili / yellowValue * 50;\n        g = 255;\n    } else if (bili > yellowValue && bili <= fullRedValue) {\n        // 比例大于yellowValue的时候绿色是越来越少的,直到fullRedValue 变为纯红\n        g = 255 - ((bili - yellowValue) / (fullRedValue - yellowValue) * 50 * one);\n        r = 255;\n    } else {\n        // 比例大于fullRedValue 开始转为暗红\n        g = 0;\n        r = 255 * (1 - darkRedWeight * (bili - fullRedValue) / (100 - fullRedValue));\n    }\n    r = parseInt(r, 10);// 取整\n    g = parseInt(g, 10);// 取整\n    b = parseInt(b, 10);// 取整\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n}\n\nfunction getFilterColor(originOption) {\n    const styleOption = {};\n    ['fillColor', 'strokeColor'].forEach((keyName) => {\n        if (originOption[keyName]) {\n            styleOption[keyName] = getColor(originOption[keyName], 0.5);\n        }\n    });\n    return Object.assign({}, originOption, styleOption);\n}\n\nfunction filterCtx(ctx, originOption, usePolyOption = true) {\n    const sourceOption = Object.assign(usePolyOption ? getDefaultPolyOption() : {}, originOption);\n    const styleOption = getFilterColor(sourceOption);\n    [\n        ['strokeWeight', 'lineWidth'],\n        ['fillColor', 'fillStyle'],\n        ['strokeColor', 'strokeStyle'],\n        ['strokeOpacity', 'globalAlpha'],\n    ].forEach((keyMap) => {\n        const [sourceName, targetName] = keyMap;\n        const keyValue = styleOption[sourceName];\n        delete styleOption[sourceName];\n        styleOption[targetName] = keyValue;\n    });\n    Object.assign(ctx, styleOption);\n}\n\n// 获取色块对应的矩形相对于地图的像素值\nfunction getDotRect(mp, lng, lat, squareSize = 20, isCenterPoint = true) {\n    const standardLen = 111700;\n    const xScale = Math.cos(lat * Math.PI / 180);\n    const lngDelta = squareSize / (standardLen * xScale);\n    const latDelta = squareSize / (standardLen);\n\n    const pixel = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng - lngDelta / 2, lat - latDelta / 2) : new window.BMap.Point(lng, lat));\n    const pixel2 = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng + lngDelta / 2, lat + latDelta / 2) : new window.BMap.Point(lng + lngDelta, lat + latDelta));\n    return {\n        x: pixel.x,\n        y: pixel.y,\n        w: pixel2.x - pixel.x,\n        h: pixel2.y - pixel.y,\n    };\n}\n\n\nfunction getDefaultPolyOption() {\n    return {\n        strokeWeight: 3,\n        strokeOpacity: 0.6,\n        strokeColor: 'blue',\n        fillColor: 'red',\n        fillOpacity: 0.4\n    };\n}\n\nfunction isPointInCircle(checkPixel, circlePixel, circleRadius) {\n    return (checkPixel.x - circlePixel.x) * (checkPixel.x - circlePixel.x)\n        + (checkPixel.y - circlePixel.y) * (checkPixel.y - circlePixel.y)\n        <= circleRadius * circleRadius\n        ;\n}\n\nfunction isPointInRect(checkPixel, sourceCheckRect) {\n    const checkRect = Object.assign({}, sourceCheckRect);\n    if (checkRect.w < 0) {\n        checkRect.x += checkRect.w;\n        checkRect.w *= -1;\n    }\n    if (checkRect.h < 0) {\n        checkRect.y += checkRect.h;\n        checkRect.h *= -1;\n    }\n    return checkPixel.x >= checkRect.x\n        && checkPixel.x <= checkRect.x + checkRect.w\n        && checkPixel.y >= checkRect.y\n        && checkPixel.y <= checkRect.y + checkRect.h;\n}\n\nfunction isPointInPoly(checkPixel, polyPoints) {\n    const x = checkPixel.x;\n    const y = checkPixel.y;\n\n    let inside = false;\n    for (let i = 0, j = polyPoints.length - 1; i < polyPoints.length; j = i++) {\n        const xi = polyPoints[i].x;\n        const yi = polyPoints[i].y;\n        const xj = polyPoints[j].x;\n        const yj = polyPoints[j].y;\n\n        const intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n    return inside;\n}\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, contextSrv) {\n        super($scope, $injector);\n        this.setMapProvider(contextSrv);\n        _.defaults(this.panel, panelDefaults);\n\n        this.dataFormatter = new DataFormatter(this, kbn);\n        this.markers = [];\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n        // this.loadLocationDataFromFile();\n    }\n\n    getPoiTypeOption(poiType) {\n        return this.getPoiOption(poiType, null);\n    }\n\n    getPoiOption(poiType, poiConfig, defaultValue = {}) {\n        const configName = 'option';\n        const typeOption = this.getPoiTypeConfig(poiType, configName, {});\n        const poiOption = this.getPoiConfig(poiType, poiConfig, configName, {});\n        return Object.assign(defaultValue, typeOption, poiOption);\n    }\n\n    getPoiTypeConfig(poiType, configName, defaultValue = '') {\n        return this.getPoiConfig(poiType, null, configName, defaultValue);\n    }\n\n    getPoiContent(poiType, poiItem, defaultValue = '') {\n        const contentName = this.panel.contentName;\n        return this.getPoiConfig(poiType, poiItem, contentName, defaultValue);\n    }\n\n    getPoiConfig(poiType, poiItem, configKey, defaultValue = '') {\n        if (!poiType) {\n            return defaultValue;\n        }\n        if (poiItem && configKey in poiItem) {\n            return poiItem[configKey];\n        }\n        const configName = this.panel.configName;\n        if (poiItem && configName in poiItem && poiItem[configName].length > 0) {\n            const extJson = JSON.parse(poiItem[configName]);\n            if (configKey in extJson) {\n                return extJson[configKey];\n            }\n        }\n        if (this.panel.globalConfig && this.panel.globalConfig.length > 0) {\n            const globalConfig = JSON.parse(this.panel.globalConfig);\n            if (poiType in globalConfig && configKey in globalConfig[poiType]) {\n                return globalConfig[poiType][configKey];\n            }\n        }\n        return defaultValue;\n    }\n\n    setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        this.tileServer = 'CartoDB Positron';\n        this.setMapSaturationClass();\n    }\n\n    setMapSaturationClass() {\n        if (this.tileServer === 'CartoDB Dark') {\n            this.saturationClass = 'map-darken';\n        } else {\n            this.saturationClass = '';\n        }\n    }\n\n    loadLocationDataFromFile(reload) {\n        if (this.map && !reload) return;\n\n        if (this.panel.snapshotLocationData) {\n            this.locations = this.panel.snapshotLocationData;\n            return;\n        }\n\n        if (this.panel.locationData === 'jsonp endpoint') {\n\n        } else if (this.panel.locationData === 'json endpoint') {\n            if (!this.panel.jsonUrl) return;\n        } else if (this.panel.locationData === 'table') {\n            // .. Do nothing\n\n        } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n\n        }\n    }\n\n    reloadLocations(res) {\n        this.locations = res;\n        this.refresh();\n    }\n\n    onPanelTeardown() {\n        if (this.map) delete this.map;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList) return;\n        if (this.dashboard.snapshot && this.locations) {\n            this.panel.snapshotLocationData = this.locations;\n        }\n\n        const data = [];\n        if (this.panel.locationData === 'geohash') {\n            this.dataFormatter.setGeohashValues(dataList, data);\n        } else if (this.panel.locationData === 'table') {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else if (this.panel.locationData === 'json result') {\n            const tableData = dataList.map(DataFormatter.tableHandlers.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        }\n        // const datas = this.filterEmptyAndZeroValues(data);\n\n        const datas = data;\n        if (typeof this.data === 'object') this.data.splice(0, this.data.length);\n        this.markers.splice(0, this.markers.length);\n        if (datas.length) {\n            this.data = datas;\n            this.map ? this.addNode(this.BMap) : this.render();\n        } else {\n            if (this.map) this.map.clearOverlays();\n            this.render();\n        }\n    }\n\n    getPoiInfoWindowHandler(poiType, point, poiItem, defaultContent = '') {\n        const that = this;\n        return (e) => {\n            let clickPoint = point;\n            if (!clickPoint) {\n                clickPoint = e.point;\n            }\n            const poiContent = that.getPoiContent(poiType, poiItem, defaultContent);\n            if (!poiContent) {\n                return;\n            }\n            const infoWindow = new BMap.InfoWindow(poiContent,\n                that.getPoiConfig(poiType, poiItem, that.panel.contentOption, {\n                    'title': that.getPoiConfig(poiType, poiItem, that.panel.contentTitle, clickPoint.lng + '|' + clickPoint.lat)\n                })\n            ); // 创建信息窗口对象\n            that.map.openInfoWindow(infoWindow, clickPoint);\n        };\n    }\n\n    addMarker(poiType, point, BMap, data) {\n\n        // public/plugins/grafana-baidumap-panel/images/bike.png\n        const markerOption = this.getPoiOption(poiType, data);\n        const iconUrl = this.getPoiConfig(poiType, data, this.panel.markerIcon, '');\n        if (Number.isInteger(iconUrl)) {\n            markerOption.icon = new BMap.Icon('http://api.map.baidu.com/img/markers.png', new BMap.Size(23, 25), {\n                offset: new BMap.Size(10, 25), // 指定定位位置\n                imageOffset: new BMap.Size(0, 25 * (10 - (iconUrl % 10)) - 10 * 25) // 设置图片偏移\n            });\n        } else if (iconUrl.length > 0) {\n            markerOption.icon = new BMap.Icon(iconUrl, new window.BMap.Size(24, 28), {\n                imageSize: new window.BMap.Size(24, 28),\n                anchor: new window.BMap.Size(12, 28)\n            });\n        }\n        const marker = new BMap.Marker(point, markerOption);\n        const pointLabel = this.getPoiConfig(poiType, data, this.panel.markerLabel, '');\n        if (pointLabel.length > 0) {\n            const label = new BMap.Label(pointLabel, {offset: new BMap.Size(20, -10)});\n            marker.setLabel(label);\n        }\n        this.markers.push(marker);\n\n        // this.map.setViewport(pointArray);\n        if (this.getPoiConfig(poiType, data, this.panel.markerEnableDragging, false)) {\n            marker.enableDragging();\n        }\n        marker.addEventListener('click', this.getPoiInfoWindowHandler(poiType, point, data));\n\n        this.map.addOverlay(marker);\n        if (this.getPoiConfig(poiType, data, this.panel.markerAnimation, false)) {\n            marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\n        }\n        marker.addEventListener('dragend', function (e) {\n            alert('当前位置：' + e.point.lng + ', ' + e.point.lat);\n        });\n    }\n\n\n    getMapSourceId(poiData) {\n        const poiType = this.getPoiType(poiData);\n        const sourceGps = this.getPoiConfig(poiType, poiData, this.panel.gpsTypeName, this.panel.gpsType);\n        let sourceGpsId = 5;\n        if (sourceGps === 'WGS84') {\n            sourceGpsId = 1;\n        } else if (sourceGps === 'GCJ02') {\n            sourceGpsId = 3;\n        } else if (sourceGps === 'WGS84OFFLINE') {\n            sourceGpsId = 11;\n        } else if (sourceGps === 'GCJ02OFFLINE') {\n            sourceGpsId = 13;\n        }\n        return sourceGpsId;\n    }\n\n    getPoiType(poiData) {\n        const pointTypeName = this.panel.pointName;\n        return poiData[this.panel.typeName] || pointTypeName;\n    }\n\n    addNode(BMap) {\n        const that = this;\n        const poiList = this.data;\n        this.map.clearOverlays();\n        this.clickHandler = [];\n\n        const shapeMap = [];\n        const translatePointListMap = new Map();\n        const callbackList = [];\n\n        let rawLength = 0;\n        const translatedItems = [];\n\n        function translateCallback(myPoiIndex, myGpsIndex, myGps, translatedData) {\n            const {lng, lat} = translatedData;\n            translatedItems.push({\n                poiIndex: myPoiIndex,\n                gpsIndex: myGpsIndex,\n                point: new BMap.Point(lng, lat),\n                gps: myGps,\n            });\n\n            if (translatedItems.length === rawLength) {\n                translatedItems.sort(function (a, b) {\n                    return ((a.poiIndex - b.poiIndex) * 1000000) + (a.gpsIndex - b.gpsIndex);\n                });\n                for (let translateIndex = 0; translateIndex < translatedItems.length; translateIndex++) {\n                    const translatedItem = translatedItems[translateIndex];\n                    const poiType = that.getPoiType(translatedItem.gps);\n\n                    const poiIndexKey = 'key_' + translatedItem.poiIndex;\n                    const pointItem = translatedItem.point;\n                    if (!(poiType in shapeMap)) {\n                        shapeMap[poiType] = [];\n                    }\n                    const shapeList = shapeMap[poiType];\n                    if (shapeList.length > 0 && shapeList[shapeList.length - 1].poiIndexKey === poiIndexKey) {\n                        shapeList[shapeList.length - 1].points.push(pointItem);\n                    } else {\n                        shapeList.push({\n                            poiIndexKey: poiIndexKey,\n                            poiType: poiType,\n                            poiData: translatedItem.gps,\n                            points: [pointItem]\n                        });\n                    }\n                }\n                console.log('shapeMap', shapeMap);\n\n                const pointTypeName = 'Point';\n                if (shapeMap[pointTypeName]) {\n                    const pointArray = shapeMap[pointTypeName];\n                    const points = [];\n                    pointArray.forEach((v) => {\n                        v.points.forEach((point) => {\n                            point.poiData = v.poiData;\n                            points.push(point);\n                        });\n                    });\n                    const pointCollection = new BMap.PointCollection(points, getFilterColor(that.getPoiTypeOption(pointTypeName)));\n                    pointCollection.addEventListener('click', (e) => {\n                        const poiData = e.point.poiData;\n                        delete e.point[poiData];\n                        that.getPoiInfoWindowHandler(pointTypeName, e.point, poiData)(e);\n                    });\n                    that.map.addOverlay(pointCollection);\n                }\n\n                const heatPoiType = that.panel.bdHeatRouteName;\n                if (shapeMap[heatPoiType]) {\n                    const heatShapeList = shapeMap[heatPoiType];\n                    const heatmapOverlay = new BMapLib.HeatmapOverlay(\n                        Object.assign(\n                            {\n                                radius: 20,\n                            },\n                            that.getPoiTypeOption(heatPoiType)\n                        ));\n                    that.map.addOverlay(heatmapOverlay);\n                    const dataList = [];\n                    heatShapeList.forEach((v) => {\n                        v.points.forEach((point) => {\n                            dataList.push(({\n                                lng: point.lng,\n                                lat: point.lat,\n                                count: that.getPoiConfig(heatPoiType, v.poiData, that.panel.heatCount, 1)\n                            }));\n                        });\n                    });\n                    heatmapOverlay.setDataSet({\n                        data: dataList,\n                        max: that.getPoiTypeConfig(heatPoiType, that.panel.heatMax, 100)\n                    });\n                }\n\n                const labelTypeName = that.panel.bdLabelName;\n                if (shapeMap[labelTypeName]) {\n                    const labelArray = shapeMap[labelTypeName];\n                    labelArray.forEach((v) => {\n                        v.points.forEach((point) => {\n                            const labelText = that.getPoiContent(labelTypeName, v.poiData);\n                            const labelItem = new BMap.Label(labelText, {\n                                position: point,\n                                enableMassClear: true\n                            });\n                            that.map.addOverlay(labelItem);\n                            labelItem.setStyle(that.getPoiConfig(labelTypeName, v.poiData, that.panel.labelStyle, {}));\n                            labelItem.setTitle(that.getPoiConfig(labelTypeName, v.poiData, that.panel.labelTitle, ''));\n                            labelItem.addEventListener('click', that.getPoiInfoWindowHandler(labelTypeName, point, v.poiData));\n                            // that.addlabel(labelTypeName, label, BMap, v.poiData);\n                        });\n                    });\n                }\n                const markerTypeName = that.panel.bdMarkerName;\n                if (shapeMap[markerTypeName]) {\n                    const markerArray = shapeMap[markerTypeName];\n                    markerArray.forEach((v) => {\n                        v.points.forEach((point) => {\n                            that.addMarker(markerTypeName, point, BMap, v.poiData);\n                        });\n                    });\n                    if (that.panel.clusterPoint) {\n                        new BMapLib.MarkerClusterer(that.map, {\n                            markers: that.markers\n                        });\n                    }\n                }\n\n                [that.panel.bdRidingRouteName, that.panel.bdDrivingRouteName, that.panel.bdWalkingRouteName].forEach((poiType) => {\n                    if (poiType in shapeMap) {\n                        const poiTypeMap = {};\n                        poiTypeMap[that.panel.bdRidingRouteName] = 'RidingRoute';\n                        poiTypeMap[that.panel.bdDrivingRouteName] = 'DrivingRoute';\n                        poiTypeMap[that.panel.bdWalkingRouteName] = 'WalkingRoute';\n                        shapeMap[poiType].forEach((item) => {\n                            const points = item.points;\n                            for (let pointIndex = 0; pointIndex < points.length - 1; pointIndex++) {\n                                const driving = new BMap[poiTypeMap[poiType]](that.map, {\n                                    renderOptions: {\n                                        map: that.map,\n                                        autoViewport: false\n                                    }\n                                });\n                                driving.search(points[pointIndex], points[pointIndex + 1]);\n                            }\n                        });\n                    }\n                });\n                const lastCenterPoint = that.centerPoint;\n                let [centerPointCount, centerPointLngTotal, centerPointLatTotal] = [0, 0, 0];\n                [that.panel.centerName].forEach((poiType) => {\n                    if (poiType in shapeMap) {\n                        shapeMap[poiType].forEach((item) => {\n                            item.points.forEach((point) => {\n                                centerPointCount += 1;\n                                centerPointLngTotal += point.lng;\n                                centerPointLatTotal += point.lat;\n                            });\n                        });\n                    }\n                });\n                if (centerPointCount > 0) {\n                    that.centerPoint = new BMap.Point(\n                        centerPointLngTotal / centerPointCount,\n                        centerPointLatTotal / centerPointCount,\n                    );\n                } else {\n                    that.centerPoint = new BMap.Point(that.panel.lng, that.panel.lat);\n                }\n                if (that.panel.autoFocusCenterDistance >= 0\n                    && (!lastCenterPoint || that.map.getDistance(lastCenterPoint, that.centerPoint) > that.panel.autoFocusCenterDistance)) {\n                    that.panToCenterPoint();\n                }\n                [that.panel.bdPolylineName, that.panel.bdPolygonName, that.panel.bdCircleName].forEach((poiType) => {\n                    if (shapeMap[poiType]) {\n                        const poiTypeMap = {};\n                        poiTypeMap[that.panel.bdPolylineName] = 'Polyline';\n                        poiTypeMap[that.panel.bdPolygonName] = 'Polygon';\n                        poiTypeMap[that.panel.bdCircleName] = 'Circle';\n                        shapeMap[poiType].forEach((item) => {\n                            const poiOption = Object.assign(\n                                getDefaultPolyOption(),\n                                getFilterColor(that.getPoiOption(item.poiType, item.poiData))\n                            );\n                            const circleRadius = that.getPoiConfig(item.poiType, item.poiData, that.panel.circleRadius, 20);\n                            if (poiType === that.panel.bdCircleName) {\n                                item.points.forEach((point) => {\n                                    const shape = new BMap[poiTypeMap[poiType]](point, circleRadius, poiOption);\n                                    that.map.addOverlay(shape);\n                                    shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, point, item.poiData));\n                                });\n                            } else {\n                                const shape = new BMap[poiTypeMap[poiType]](item.points, poiOption);\n                                that.map.addOverlay(shape);\n                                shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, null, item.poiData));\n                            }\n                        });\n                    }\n                });\n                const labelPoiTypes = [that.panel.labelName];\n                const linePoiTypes = [that.panel.polygonName, that.panel.polylineName];\n                const dotPoiTypes = [that.panel.squareName, that.panel.circleName, that.panel.pointName];\n                const canvasTypes = [...labelPoiTypes, ...dotPoiTypes, ...linePoiTypes];\n\n                const canvasLayerUpdater = (canvasLayer) => {\n                    const ctx = canvasLayer.canvas.getContext('2d');\n                    if (!ctx) {\n                        return [];\n                    }\n                    const matchItems = [];\n                    ctx.save();\n                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                    if (that.panel.maskColor) {\n                        ctx.beginPath();\n                        ctx.fillStyle = that.panel.maskColor;\n                        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                        ctx.closePath();\n                    }\n                    ctx.restore();\n                    linePoiTypes.forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                ctx.save();\n                                ctx.beginPath();\n                                const poiOption = that.getPoiOption(poiType, item.poiData);\n                                filterCtx(ctx, poiOption);\n                                const startPoint = that.map.pointToPixel(item.points[0]);\n                                ctx.moveTo(startPoint.x, startPoint.y);\n                                for (let pointIndex = 1; pointIndex < item.points.length; pointIndex++) {\n                                    const linePoint = that.map.pointToPixel(item.points[pointIndex]);\n                                    ctx.lineTo(linePoint.x, linePoint.y);\n                                }\n                                if (poiType === that.panel.polylineName) {\n                                    ctx.stroke();\n                                } else if (poiType === that.panel.polygonName) {\n                                    ctx.closePath();\n                                    if (that.getPoiConfig(poiType, item.poiData, that.panel.isStroke, true)) {\n                                        ctx.stroke();\n                                    }\n                                    if (poiOption.fillOpacity) {\n                                        ctx.globalAlpha = poiOption.fillOpacity;\n                                    }\n                                    if (that.getPoiConfig(poiType, item.poiData, that.panel.isFill, true)) {\n                                        ctx.fill();\n                                    }\n                                }\n                                ctx.restore();\n                            });\n                        }\n                    });\n                    dotPoiTypes.forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                item.points.forEach((point) => {\n                                    ctx.save();\n                                    const isCircle = poiType === that.panel.circleName;\n                                    const isPoint = poiType === that.panel.pointName;\n                                    const layerItem = {\n                                        lng: point.lng,\n                                        lat: point.lat,\n                                        size: that.getPoiConfig(poiType, item.poiData, isCircle ? that.panel.circleRadius :\n                                            (isPoint ? that.panel.pointSize : that.panel.squareLength), isCircle ? 10 :\n                                            (isPoint ? 5 : 20)),\n                                    };\n                                    ctx.beginPath();\n                                    filterCtx(ctx, that.getPoiOption(poiType, item.poiData, isPoint ? {\n                                        'fillColor': getColor(that.getPoiConfig(poiType, item.poiData, that.panel.fillColor, 'blue'), 0.4)\n                                    } : {}));\n                                    const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                        parseFloat(layerItem.lat), layerItem.size, !isCircle);\n                                    if (isPoint) {\n                                        ctx.arc(posRect.x, posRect.y, layerItem.size, 0, 2 * Math.PI);\n                                    } else if (isCircle) {\n                                        ctx.arc(posRect.x, posRect.y, posRect.w, 0, 2 * Math.PI);\n                                    } else {\n                                        ctx.rect(posRect.x, posRect.y, posRect.w, posRect.h);\n                                    }\n                                    ctx.closePath();\n                                    if (!isPoint) {\n                                        if (that.getPoiConfig(poiType, item.poiData, that.panel.isStroke, false)) {\n                                            ctx.stroke();\n                                        }\n                                    }\n                                    if (that.getPoiConfig(poiType, item.poiData, that.panel.isFill, true)) {\n                                        ctx.fill();\n                                    }\n                                    ctx.restore();\n                                });\n                            });\n                        }\n                    });\n                    labelPoiTypes.forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                ctx.save();\n                                ctx.beginPath();\n                                const labelText = that.getPoiContent(poiType, item.poiData);\n                                const poiOption = that.getPoiOption(poiType, item.poiData);\n                                filterCtx(ctx, poiOption, false);\n                                for (let pointIndex = 0; pointIndex < item.points.length; pointIndex++) {\n                                    ctx.beginPath();\n                                    const labelPoint = that.map.pointToPixel(item.points[pointIndex]);\n                                    ctx.fillText(labelText, labelPoint.x, labelPoint.y);\n                                }\n                                ctx.restore();\n                            });\n                        }\n                    });\n                    return matchItems;\n                };\n\n                const canvasLayerPointChecker = (checkPoint) => {\n                    const checkPixel = that.map.pointToPixel(checkPoint);\n                    const matchItems = [];\n                    dotPoiTypes.reverse()\n                        .forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    item.points.forEach((point) => {\n                                        const isCircle = poiType === that.panel.circleName;\n                                        const isPoint = poiType === that.panel.pointName;\n                                        const layerItem = {\n                                            lng: point.lng,\n                                            lat: point.lat,\n                                            size: that.getPoiConfig(poiType, item.poiData, isCircle ? that.panel.circleRadius :\n                                                (isPoint ? that.panel.pointSize : that.panel.squareLength), isCircle ? 10 :\n                                                (isPoint ? 5 : 20)),\n                                        };\n                                        const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                            parseFloat(layerItem.lat), layerItem.size, !isCircle);\n                                        if (isPoint) {\n                                            if (isPointInCircle(checkPixel, posRect, layerItem.size)) {\n                                                matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                            }\n                                        } else if (isCircle) {\n                                            if (isPointInCircle(checkPixel, posRect, posRect.w)) {\n                                                matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                            }\n                                        } else if (isPointInRect(checkPixel, posRect)) {\n                                            matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                        }\n                                    });\n                                });\n                            }\n                        });\n                    linePoiTypes.reverse()\n                        .forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    if (poiType === that.panel.polygonName\n                                        && isPointInPoly(checkPixel, item.points.map(p => that.map.pointToPixel(p)))\n                                    ) {\n                                        matchItems.push([checkPoint, poiType, item.poiData, item.points]);\n                                    }\n                                });\n                            }\n                        });\n                    return matchItems;\n                };\n\n                if (canvasTypes.some(canvasType => shapeMap[canvasType]) || that.panel.maskColor) {\n                    const canvasLayer = new BMap.CanvasLayer({\n                        paneName: 'mapPane',\n                        zIndex: -999,\n                        update: function () {\n                            canvasLayerUpdater(this);\n                        }\n                    });\n                    that.map.addOverlay(canvasLayer);\n                    that.clickHandler.push((event) => {\n                        let matchItems = canvasLayerPointChecker(event.point);\n                        matchItems = matchItems.filter(matchItem => that.getPoiContent(matchItem[1], matchItem[2]));\n                        if (matchItems.length > 0) {\n                            const matchItem = matchItems[0];\n                            that.getPoiInfoWindowHandler(matchItem[1], event.point, matchItem[2])(event);\n                        }\n                    });\n                }\n            }\n        }\n\n        function translateOne(poiIndex, gpsIndex, gps) {\n            rawLength += 1;\n            // 转换坐标\n            const sourceGpsId = that.getMapSourceId(gps);\n            if (sourceGpsId > 3) {\n                let newGps = {};\n                if (sourceGpsId === 5) {\n                    newGps = {lng: gps.lng, lat: gps.lat};\n                } else if (sourceGpsId === 11) {\n                    newGps = gpsHelper.gpsToBaidu(gps.lat, gps.lng);\n                } else if (sourceGpsId === 13) {\n                    newGps = gpsHelper.chinaToBaidu(gps.lat, gps.lng);\n                }\n                setTimeout(function () {\n                    translateCallback(poiIndex, gpsIndex, gps, newGps);\n                }, 1);\n            } else {\n                const point = new BMap.Point(gps.lng, gps.lat);\n                if (!translatePointListMap.has(sourceGpsId)) {\n                    translatePointListMap.set(sourceGpsId, []);\n                }\n                translatePointListMap.get(sourceGpsId)\n                    .push(point);\n                callbackList.push(translateCallback.bind(this, poiIndex, gpsIndex, gps));\n            }\n        }\n\n        console.log(poiList);\n        if (poiList) {\n            for (let i = 0; i < poiList.length; i++) {\n                const poiIndex = i;\n                if (poiList[poiIndex] && poiList[poiIndex][that.panel.lngName]\n                    && poiList[poiIndex][that.panel.latName]\n                    && poiList[poiIndex][that.panel.lngName] > 0\n                    && poiList[poiIndex][that.panel.latName] > 0\n                ) {\n                    const gpsItem = Object.assign({}, poiList[poiIndex]);\n                    gpsItem.lng = parseFloat(poiList[poiIndex][that.panel.lngName]);\n                    gpsItem.lat = parseFloat(poiList[poiIndex][that.panel.latName]);\n                    translateOne(poiIndex, 0, gpsItem, BMap);\n                } else if (poiList[poiIndex][that.panel.geohashName] && poiList[poiIndex][that.panel.geohashName].length > 0) {\n                    const {longitude: lng, latitude: lat} = decodeGeoHash(poiList[poiIndex][that.panel.geohashName]);\n                    const gpsItem = Object.assign({}, poiList[poiIndex], {lng, lat});\n                    translateOne(poiIndex, 0, gpsItem, BMap);\n                } else if (poiList[poiIndex][that.panel.posName] && poiList[poiIndex][that.panel.posName].length > 0) {\n                    const gpsList = poiList[poiIndex][that.panel.posName].split(';');\n                    for (let gpsIndex = 0; gpsIndex < gpsList.length; gpsIndex++) {\n                        const gpsStr = gpsList[gpsIndex];\n                        let items = gpsStr.split('|');\n                        if (items.length === 1) {\n                            items = gpsStr.split(',');\n                        }\n                        const [lng, lat] = items;\n                        const gpsItem = Object.assign({}, poiList[poiIndex]);\n                        gpsItem.lng = parseFloat(lng.trim());\n                        gpsItem.lat = parseFloat(lat.trim());\n                        translateOne(poiIndex, gpsIndex, gpsItem, BMap);\n                    }\n                }\n            }\n            for (const sourceMapId of translatePointListMap.keys()) {\n                const sourcePointList = translatePointListMap.get(sourceMapId);\n                if (sourcePointList.length > 0) {\n                    const convertor = new BMap.Convertor();\n                    const groupSize = 10;\n                    for (let groupIndex = 0; groupIndex < sourcePointList.length; groupIndex += groupSize) {\n                        const pointList = [];\n                        for (let pointIndex = 0; pointIndex < groupSize && pointIndex + groupIndex < sourcePointList.length; pointIndex++) {\n                            pointList.push(sourcePointList[groupIndex + pointIndex]);\n                        }\n                        convertor.translate(pointList, sourceMapId, 5, (result) => {\n                            if (result.status === 0) {\n                                for (let index = 0; index < result.points.length; index++) {\n                                    callbackList[groupIndex + index](result.points[index]);\n                                }\n                            } else {\n                                console.error('gps translate error', pointList);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    panToCenterPoint() {\n        if (this.centerPoint) {\n            this.map.panTo(this.centerPoint);\n        }\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.panel.hideEmpty && _.isNil(o.value)) && !(this.panel.hideZero && o.value === 0);\n        });\n    }\n\n    onDataSnapshotLoad(snapshotData) {\n        this.onDataReceived(snapshotData);\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target,\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    setNewMapCenter() {\n        this.render();\n    }\n\n    setZoom() {\n        this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n    }\n\n    setStyle() {\n        this.map.setMapStyle({style: this.panel.theme});\n    }\n\n    setAK() {\n        const x = document.body;\n        const s = document.getElementsByTagName('script');\n        const len = s.length;\n        x.removeChild(s[len - 1]);\n        delete this.map;\n        this.render();\n    }\n\n    navigationControl() {\n        if (this.panel.navigation == true) {\n            this.map.addControl(this.navigationSwitch);\n        } else {\n            this.map.removeControl(this.navigationSwitch);\n        }\n    }\n\n    scaleControl() {\n        if (this.panel.scale == true) {\n            this.map.addControl(this.scaleSwitch);\n        } else {\n            this.map.removeControl(this.scaleSwitch);\n        }\n    }\n\n    overviewMapControl() {\n        if (this.panel.overviewMap === true) {\n            this.map.addControl(this.overviewMapSwitch);\n        } else {\n            this.map.removeControl(this.overviewMapSwitch);\n        }\n    }\n\n    mapTypeControl() {\n        if (this.panel.mapType === true) {\n            this.map.addControl(this.mapTypeSwitch);\n        } else {\n            this.map.removeControl(this.mapTypeSwitch);\n        }\n    }\n\n    trafficControl() {\n        if (this.panel.traffic === true) {\n            this.map.addControl(this.trafficSwitch);\n        } else {\n            this.map.removeControl(this.trafficSwitch);\n        }\n    }\n\n    resize() {\n\n    }\n\n    toggleStickyLabels() {\n        console.log(this.panel.stickyLabels);\n    }\n\n    changeLocationData() {\n        if (this.panel.locationData === 'geohash') {\n            this.render();\n        }\n    }\n\n    /* eslint class-methods-use-this: 0 */\n    link(scope, elem, attrs, ctrl) {\n        mapRenderer(scope, elem, attrs, ctrl);\n    }\n\n\n// 如果要调试事件接口，请打开下方屏蔽代码，\n// 在firefox或者chrome下查看调试信息\n\n    // distanceTool.addEventListener('drawend', function (e) {\n    //     console.log('drawend');\n    //     console.log(e.points);\n    //     console.log(e.overlays);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('addpoint', function (e) {\n    //     console.log('addpoint');\n    //     console.log(e.point);\n    //     console.log(e.pixel);\n    //     console.log(e.index);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('removepolyline', function (e) {\n    //     console.log('removepolyline');\n    //     console.log(e);\n    // });\n\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}