{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["getColor","orginBili","alpha","bili","one","r","g","b","yellowValue","fullRedValue","darkRedWeight","parseInt","getFilterColor","originOption","styleOption","forEach","keyName","Object","assign","filterCtx","ctx","usePolyOption","sourceOption","getDefaultPolyOption","keyMap","sourceName","targetName","keyValue","getDotRect","mp","lng","lat","squareSize","isCenterPoint","standardLen","xScale","Math","cos","PI","lngDelta","latDelta","pixel","pointToPixel","window","BMap","Point","pixel2","x","y","w","h","strokeWeight","strokeOpacity","strokeColor","fillColor","fillOpacity","MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","decodeGeoHash","panelDefaults","ak","maxDataPoints","theme","initialZoom","valueName","locationData","gpsType","esMetric","decimals","navigation","scale","hideEmpty","overviewMap","hideZero","mapType","traffic","clusterPoint","globalConfig","typeName","lngName","latName","posName","geohashName","configName","contentName","enableMapClick","maskColor","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","markers","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","poiType","getPoiOption","poiConfig","defaultValue","typeOption","getPoiTypeConfig","poiOption","getPoiConfig","poiItem","length","configKey","extJson","JSON","parse","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","tableHandlers","datas","splice","addNode","render","clearOverlays","point","defaultContent","that","e","clickPoint","infoWindow","InfoWindow","getPoiContent","openInfoWindow","markerOption","iconUrl","Number","isInteger","icon","Icon","Size","offset","imageOffset","imageSize","anchor","marker","Marker","pointLabel","label","Label","setLabel","push","enableDragging","addEventListener","getPoiInfoWindowHandler","addOverlay","setAnimation","BMAP_ANIMATION_BOUNCE","alert","poiList","clickHandler","console","log","getMapSourceId","sourceGps","sourceGpsId","translateOne","poiIndex","gpsIndex","gps","rawLength","setTimeout","translateCallback","sourcePointList","callbackList","myPoiIndex","myGpsIndex","myGps","translatedData","translatedItems","sort","a","translateIndex","pointTypeName","translatedItem","poiIndexKey","pointItem","shapeMap","shapeList","points","poiData","pointArray","v","pointCollection","PointCollection","getPoiTypeOption","heatPoiType","heatShapeList","heatmapOverlay","BMapLib","HeatmapOverlay","radius","count","setDataSet","max","labelTypeName","labelArray","labelText","labelItem","position","enableMassClear","setStyle","setTitle","markerTypeName","markerArray","addMarker","MarkerClusterer","item","pointIndex","driving","renderOptions","autoViewport","search","circleRadius","shape","labelPoiTypes","linePoiTypes","dotPoiTypes","canvasTypes","canvasLayerUpdater","canvasLayer","checkPoint","canvas","getContext","checkPixel","matchItems","save","clearRect","width","height","beginPath","fillStyle","fillRect","closePath","restore","isCircle","isPoint","layerItem","size","posRect","parseFloat","arc","rect","isPointInPath","stroke","fill","startPoint","moveTo","linePoint","lineTo","globalAlpha","labelPoint","fillText","some","canvasType","CanvasLayer","paneName","zIndex","update","event","i","gpsItem","longitude","latitude","gpsList","split","gpsStr","convertor","Convertor","groupSize","groupIndex","pointList","translate","result","status","index","error","filter","o","isNil","value","snapshotData","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","setMapStyle","style","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","trafficSwitch","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"baidumap_ctrl.js","sourcesContent":["/* eslint-disable eqeqeq,id-length,no-inner-declarations,no-plusplus,no-mixed-operators,no-continue,no-nested-ternary */\n/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\n\nimport decodeGeoHash from './geohash';\n\nconst panelDefaults = {\n    ak: 'QKCqsdHBbGxBnNbvUwWdUEBjonk7jUj6',\n    maxDataPoints: 1,\n    theme: 'normal',\n    lat: 39.968539,\n    lng: 116.497856,\n    initialZoom: 14,\n    valueName: 'current',\n    locationData: 'json result',\n    gpsType: '百度坐标系',\n    esMetric: 'Count',\n    decimals: 0,\n    navigation: true,\n    scale: true,\n    hideEmpty: false,\n    overviewMap: false,\n    hideZero: false,\n    mapType: false,\n    traffic: false,\n    clusterPoint: false,\n    globalConfig: '',\n    typeName: 'type',\n    lngName: 'longitude',\n    latName: 'latitude',\n    posName: 'pos',\n    geohashName: 'geohash',\n    configName: 'config',\n    contentName: 'content',\n    enableMapClick: false,\n    maskColor: ''\n};\n\n\nfunction getColor(orginBili, alpha) {\n    if ((typeof orginBili) !== 'number') {\n        return orginBili;\n    }\n    const bili = orginBili > 100 ? 100 : orginBili;\n    // 百分之一 = (单色值范围) / 50;  单颜色的变化范围只在50%之内\n    const one = (255 + 255) / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    const yellowValue = 50;\n    const fullRedValue = 95;\n    const darkRedWeight = 0.6;\n\n    if (bili <= yellowValue) {\n        // 比例小于yellowValue的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\n        r = one * bili / yellowValue * 50;\n        g = 255;\n    } else if (bili > yellowValue && bili <= fullRedValue) {\n        // 比例大于yellowValue的时候绿色是越来越少的,直到fullRedValue 变为纯红\n        g = 255 - ((bili - yellowValue) / (fullRedValue - yellowValue) * 50 * one);\n        r = 255;\n    } else {\n        // 比例大于fullRedValue 开始转为暗红\n        g = 0;\n        r = 255 * (1 - darkRedWeight * (bili - fullRedValue) / (100 - fullRedValue));\n    }\n    r = parseInt(r, 10);// 取整\n    g = parseInt(g, 10);// 取整\n    b = parseInt(b, 10);// 取整\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n}\n\nfunction getFilterColor(originOption) {\n    const styleOption = {};\n    ['fillColor', 'strokeColor'].forEach((keyName) => {\n        if (originOption[keyName]) {\n            styleOption[keyName] = getColor(originOption[keyName], 0.5);\n        }\n    });\n    return Object.assign({}, originOption, styleOption);\n}\n\nfunction filterCtx(ctx, originOption, usePolyOption = true) {\n    const sourceOption = Object.assign(usePolyOption ? getDefaultPolyOption() : {}, originOption);\n    const styleOption = getFilterColor(sourceOption);\n    [\n        ['strokeWeight', 'lineWidth'],\n        ['fillColor', 'fillStyle'],\n        ['strokeColor', 'strokeStyle'],\n        ['strokeOpacity', 'globalAlpha'],\n    ].forEach((keyMap) => {\n        const [sourceName, targetName] = keyMap;\n        const keyValue = styleOption[sourceName];\n        delete styleOption[sourceName];\n        styleOption[targetName] = keyValue;\n    });\n    Object.assign(ctx, styleOption);\n}\n\n// 获取色块对应的矩形相对于地图的像素值\nfunction getDotRect(mp, lng, lat, squareSize = 20, isCenterPoint = true) {\n    const standardLen = 111700;\n    const xScale = Math.cos(lat * Math.PI / 180);\n    const lngDelta = squareSize / (standardLen * xScale);\n    const latDelta = squareSize / (standardLen);\n\n    const pixel = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng - lngDelta / 2, lat - latDelta / 2) : new window.BMap.Point(lng, lat));\n    const pixel2 = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng + lngDelta / 2, lat + latDelta / 2) : new window.BMap.Point(lng + lngDelta, lat + latDelta));\n    return {\n        x: pixel.x,\n        y: pixel.y,\n        w: pixel2.x - pixel.x,\n        h: pixel2.y - pixel.y,\n    };\n}\n\n\nfunction getDefaultPolyOption() {\n    return {\n        strokeWeight: 3,\n        strokeOpacity: 0.6,\n        strokeColor: 'blue',\n        fillColor: 'red',\n        fillOpacity: 0.4\n    };\n}\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, contextSrv) {\n        super($scope, $injector);\n        this.setMapProvider(contextSrv);\n        _.defaults(this.panel, panelDefaults);\n\n        this.dataFormatter = new DataFormatter(this, kbn);\n        this.markers = [];\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n        // this.loadLocationDataFromFile();\n    }\n\n    getPoiTypeOption(poiType) {\n        return this.getPoiOption(poiType, null);\n    }\n\n    getPoiOption(poiType, poiConfig, defaultValue = {}) {\n        const configName = 'option';\n        const typeOption = this.getPoiTypeConfig(poiType, configName, {});\n        const poiOption = this.getPoiConfig(poiType, poiConfig, configName, {});\n        return Object.assign(defaultValue, typeOption, poiOption);\n    }\n\n    getPoiTypeConfig(poiType, configName, defaultValue = '') {\n        return this.getPoiConfig(poiType, null, configName, defaultValue);\n    }\n\n    getPoiContent(poiType, poiItem, defaultValue = '') {\n        const contentName = this.panel.contentName;\n        if (poiItem && contentName in poiItem && poiItem[contentName].length > 0) {\n            return poiItem[contentName];\n        }\n        return this.getPoiConfig(poiType, poiItem, contentName, defaultValue);\n    }\n\n    getPoiConfig(poiType, poiItem, configKey, defaultValue = '') {\n        if (!poiType) {\n            return defaultValue;\n        }\n        const configName = this.panel.configName;\n        if (poiItem && configName in poiItem && poiItem[configName].length > 0) {\n            const extJson = JSON.parse(poiItem[configName]);\n            if (configKey in extJson) {\n                return extJson[configKey];\n            }\n        }\n        if (this.panel.globalConfig && this.panel.globalConfig.length > 0) {\n            const globalConfig = JSON.parse(this.panel.globalConfig);\n            if (poiType in globalConfig && configKey in globalConfig[poiType]) {\n                return globalConfig[poiType][configKey];\n            }\n        }\n        return defaultValue;\n    }\n\n    setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        this.tileServer = 'CartoDB Positron';\n        this.setMapSaturationClass();\n    }\n\n    setMapSaturationClass() {\n        if (this.tileServer === 'CartoDB Dark') {\n            this.saturationClass = 'map-darken';\n        } else {\n            this.saturationClass = '';\n        }\n    }\n\n    loadLocationDataFromFile(reload) {\n        if (this.map && !reload) return;\n\n        if (this.panel.snapshotLocationData) {\n            this.locations = this.panel.snapshotLocationData;\n            return;\n        }\n\n        if (this.panel.locationData === 'jsonp endpoint') {\n\n        } else if (this.panel.locationData === 'json endpoint') {\n            if (!this.panel.jsonUrl) return;\n        } else if (this.panel.locationData === 'table') {\n            // .. Do nothing\n\n        } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n\n        }\n    }\n\n    reloadLocations(res) {\n        this.locations = res;\n        this.refresh();\n    }\n\n    onPanelTeardown() {\n        if (this.map) delete this.map;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList) return;\n        if (this.dashboard.snapshot && this.locations) {\n            this.panel.snapshotLocationData = this.locations;\n        }\n\n        const data = [];\n        if (this.panel.locationData === 'geohash') {\n            this.dataFormatter.setGeohashValues(dataList, data);\n        } else if (this.panel.locationData === 'table') {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else if (this.panel.locationData === 'json result') {\n            const tableData = dataList.map(DataFormatter.tableHandlers.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        }\n        // const datas = this.filterEmptyAndZeroValues(data);\n\n        const datas = data;\n        if (typeof this.data === 'object') this.data.splice(0, this.data.length);\n        this.markers.splice(0, this.markers.length);\n        if (datas.length) {\n            this.data = datas;\n            this.map ? this.addNode(this.BMap) : this.render();\n        } else {\n            if (this.map) this.map.clearOverlays();\n            this.render();\n        }\n    }\n\n    getPoiInfoWindowHandler(poiType, point, poiItem, defaultContent = '') {\n        const that = this;\n        return (e) => {\n            let clickPoint = point;\n            if (!clickPoint) {\n                clickPoint = e.point;\n            }\n            const infoWindow = new BMap.InfoWindow(that.getPoiContent(poiType, poiItem, defaultContent),\n                that.getPoiConfig(poiType, poiItem, 'contentOption', {\n                    'title': that.getPoiConfig(poiType, poiItem, 'title', clickPoint.lng + '|' + clickPoint.lat)\n                })\n            ); // 创建信息窗口对象\n            that.map.openInfoWindow(infoWindow, clickPoint);\n        };\n    }\n\n    addMarker(poiType, point, BMap, data) {\n\n        // public/plugins/grafana-baidumap-panel/images/bike.png\n        const markerOption = this.getPoiOption(poiType, data);\n        const iconUrl = this.getPoiConfig(poiType, data, 'icon', '');\n        if (Number.isInteger(iconUrl)) {\n            markerOption.icon = new BMap.Icon('http://api.map.baidu.com/img/markers.png', new BMap.Size(23, 25), {\n                offset: new BMap.Size(10, 25), // 指定定位位置\n                imageOffset: new BMap.Size(0, 25 * (10 - (iconUrl % 10)) - 10 * 25) // 设置图片偏移\n            });\n        } else if (iconUrl.length > 0) {\n            markerOption.icon = new BMap.Icon(iconUrl, new window.BMap.Size(24, 28), {\n                imageSize: new window.BMap.Size(24, 28),\n                anchor: new window.BMap.Size(12, 28)\n            });\n        }\n        const marker = new BMap.Marker(point, markerOption);\n        const pointLabel = this.getPoiConfig(poiType, data, 'label', '');\n        if (pointLabel.length > 0) {\n            const label = new BMap.Label(pointLabel, {offset: new BMap.Size(20, -10)});\n            marker.setLabel(label);\n        }\n        this.markers.push(marker);\n\n        // this.map.setViewport(pointArray);\n        if (this.getPoiConfig(poiType, data, 'enableDragging', false)) {\n            marker.enableDragging();\n        }\n        marker.addEventListener('click', this.getPoiInfoWindowHandler(poiType, point, data));\n\n        this.map.addOverlay(marker);\n        if (this.getPoiConfig(poiType, data, 'animation', false)) {\n            marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\n        }\n        marker.addEventListener('dragend', function (e) {\n            point = new BMap.Point(e.point.lng, e.point.lat);\n            alert('当前位置：' + e.point.lng + ', ' + e.point.lat);\n        });\n    }\n\n    addNode(BMap) {\n        const that = this;\n        const poiList = this.data;\n        this.map.clearOverlays();\n        this.clickHandler = [];\n        console.log(poiList);\n        if (poiList) {\n            const shapeMap = [];\n            const sourcePointList = [];\n            const callbackList = [];\n\n            let rawLength = 0;\n            const translatedItems = [];\n\n            for (let i = 0; i < poiList.length; i++) {\n                const poiIndex = i;\n                setTimeout(function () {\n                    if (poiList[poiIndex] && poiList[poiIndex][that.panel.lngName]\n                        && poiList[poiIndex][that.panel.latName]\n                        && poiList[poiIndex][that.panel.lngName] > 0\n                        && poiList[poiIndex][that.panel.latName] > 0\n                    ) {\n                        const gpsItem = Object.assign({}, poiList[poiIndex]);\n                        gpsItem.lng = parseFloat(poiList[poiIndex][that.panel.lngName]);\n                        gpsItem.lat = parseFloat(poiList[poiIndex][that.panel.latName]);\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.geohashName] && poiList[poiIndex][that.panel.geohashName].length > 0) {\n                        const {longitude: lng, latitude: lat} = decodeGeoHash(poiList[poiIndex][that.panel.geohashName]);\n                        const gpsItem = Object.assign({}, poiList[poiIndex], {lng, lat});\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.posName] && poiList[poiIndex][that.panel.posName].length > 0) {\n                        const gpsList = poiList[poiIndex][that.panel.posName].split(';');\n                        for (let gpsIndex = 0; gpsIndex < gpsList.length; gpsIndex++) {\n                            const gpsStr = gpsList[gpsIndex];\n                            const [lng, lat] = gpsStr.split('|');\n                            const gpsItem = Object.assign({}, poiList[poiIndex]);\n                            gpsItem.lng = parseFloat(lng);\n                            gpsItem.lat = parseFloat(lat);\n                            translateOne(poiIndex, gpsIndex, gpsItem, BMap);\n                        }\n                    }\n                    if (sourcePointList.length > 0) {\n                        const convertor = new BMap.Convertor();\n                        const groupSize = 10;\n                        for (let groupIndex = 0; groupIndex < sourcePointList.length; groupIndex += groupSize) {\n                            const pointList = [];\n                            for (let pointIndex = 0; pointIndex < groupSize && pointIndex + groupIndex < sourcePointList.length; pointIndex++) {\n                                pointList.push(sourcePointList[groupIndex + pointIndex]);\n                            }\n                            convertor.translate(pointList, getMapSourceId(), 5, (result) => {\n                                if (result.status === 0) {\n                                    for (let index = 0; index < result.points.length; index++) {\n                                        callbackList[groupIndex + index](result.points[index]);\n                                    }\n                                } else {\n                                    console.error('gps translate error', pointList);\n                                }\n                            });\n                        }\n                    }\n                }, 10);\n            }\n\n            function getMapSourceId() {\n                const sourceGps = that.panel.gpsType;\n                let sourceGpsId = 5;\n                if (sourceGps === 'WGS84') {\n                    sourceGpsId = 1;\n                } else if (sourceGps === 'GCJ02') {\n                    sourceGpsId = 3;\n                }\n                return sourceGpsId;\n            }\n\n            function translateOne(poiIndex, gpsIndex, gps) {\n                rawLength += 1;\n                // 转换坐标\n                const sourceGpsId = getMapSourceId();\n                if (sourceGpsId === 5) {\n                    setTimeout(function () {\n                        translateCallback(poiIndex, gpsIndex, gps, {lng: gps.lng, lat: gps.lat});\n                    }, 1);\n                } else {\n                    const point = new BMap.Point(gps.lng, gps.lat);\n                    sourcePointList.push(point);\n                    callbackList.push(translateCallback.bind(this, poiIndex, gpsIndex, gps));\n                }\n            }\n\n            function translateCallback(myPoiIndex, myGpsIndex, myGps, translatedData) {\n                const {lng, lat} = translatedData;\n                translatedItems.push({\n                    poiIndex: myPoiIndex,\n                    gpsIndex: myGpsIndex,\n                    point: new BMap.Point(lng, lat),\n                    gps: myGps,\n                });\n\n                if (translatedItems.length === rawLength) {\n\n                    translatedItems.sort(function (a, b) {\n                        return ((a.poiIndex - b.poiIndex) * 1000000) + (a.gpsIndex - b.gpsIndex);\n                    });\n                    for (let translateIndex = 0; translateIndex < translatedItems.length; translateIndex++) {\n                        const pointTypeName = 'point';\n\n                        const translatedItem = translatedItems[translateIndex];\n                        const poiType = translatedItem.gps[that.panel.typeName] || pointTypeName;\n\n                        const poiIndexKey = 'key_' + translatedItem.poiIndex;\n                        const pointItem = translatedItem.point;\n                        if (!(poiType in shapeMap)) {\n                            shapeMap[poiType] = [];\n                        }\n                        const shapeList = shapeMap[poiType];\n                        if (shapeList.length > 0 && shapeList[shapeList.length - 1].poiIndexKey === poiIndexKey) {\n                            shapeList[shapeList.length - 1].points.push(pointItem);\n                        } else {\n                            shapeList.push({\n                                poiIndexKey: poiIndexKey,\n                                poiType: poiType,\n                                poiData: translatedItem.gps,\n                                points: [pointItem]\n                            });\n                        }\n                    }\n                    console.log('shapeMap', shapeMap);\n\n                    const pointTypeName = 'Point';\n                    if (shapeMap[pointTypeName]) {\n                        const pointArray = shapeMap[pointTypeName];\n                        const points = [];\n                        pointArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                point.poiData = v.poiData;\n                                points.push(point);\n                            });\n                        });\n                        const pointCollection = new BMap.PointCollection(points, getFilterColor(that.getPoiTypeOption(pointTypeName)));\n                        pointCollection.addEventListener('click', (e) => {\n                            const poiData = e.point.poiData;\n                            delete e.point[poiData];\n                            that.getPoiInfoWindowHandler(pointTypeName, e.point, poiData)(e);\n                        });\n                        that.map.addOverlay(pointCollection);\n                    }\n\n                    const heatPoiType = 'Heat';\n                    if (shapeMap[heatPoiType]) {\n                        const heatShapeList = shapeMap[heatPoiType];\n                        const heatmapOverlay = new BMapLib.HeatmapOverlay(\n                            Object.assign(\n                                {\n                                    radius: 20,\n                                },\n                                that.getPoiTypeOption(heatPoiType)\n                            ));\n                        that.map.addOverlay(heatmapOverlay);\n                        const dataList = [];\n                        heatShapeList.forEach((v) => {\n                            v.points.forEach((point) => {\n                                dataList.push(({\n                                    lng: point.lng,\n                                    lat: point.lat,\n                                    count: that.getPoiConfig(heatPoiType, v.poiData, 'count', 1)\n                                }));\n                            });\n                        });\n                        heatmapOverlay.setDataSet({\n                            data: dataList,\n                            max: that.getPoiTypeConfig(heatPoiType, 'max', 100)\n                        });\n                    }\n\n                    const labelTypeName = 'Label';\n                    if (shapeMap[labelTypeName]) {\n                        const labelArray = shapeMap[labelTypeName];\n                        labelArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                const labelText = that.getPoiContent(labelTypeName, v.poiData);\n                                const labelItem = new BMap.Label(labelText, {\n                                    position: point,\n                                    enableMassClear: that.getPoiConfig(labelTypeName, v.poiData, 'enableMassClear', true)\n                                });\n                                that.map.addOverlay(labelItem);\n                                labelItem.setStyle(that.getPoiConfig(labelTypeName, v.poiData, 'style', {}));\n                                labelItem.setTitle(that.getPoiConfig(labelTypeName, v.poiData, 'title', ''));\n                                labelItem.addEventListener('click', that.getPoiInfoWindowHandler(labelTypeName, point, v.poiData));\n                                // that.addlabel(labelTypeName, label, BMap, v.poiData);\n                            });\n                        });\n                    }\n                    const markerTypeName = 'Marker';\n                    if (shapeMap[markerTypeName]) {\n                        const markerArray = shapeMap[markerTypeName];\n                        markerArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                that.addMarker(markerTypeName, point, BMap, v.poiData);\n                            });\n                        });\n                        if (that.panel.clusterPoint) {\n                            new BMapLib.MarkerClusterer(that.map, {\n                                markers: that.markers\n                            });\n                        }\n                    }\n\n                    ['RidingRoute', 'DrivingRoute', 'WalkingRoute'].forEach((poiType) => {\n                        if (poiType in shapeMap) {\n                            shapeMap[poiType].forEach((item) => {\n                                const points = item.points;\n                                for (let pointIndex = 0; pointIndex < points.length - 1; pointIndex++) {\n                                    const driving = new BMap[poiType](that.map, {\n                                        renderOptions: {\n                                            map: that.map,\n                                            autoViewport: false\n                                        }\n                                    });\n                                    driving.search(points[pointIndex], points[pointIndex + 1]);\n                                }\n                            });\n                        }\n                    });\n                    ['Polyline', 'Polygon', 'Circle'].forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                const poiOption = Object.assign(\n                                    getDefaultPolyOption(),\n                                    getFilterColor(that.getPoiOption(item.poiType, item.poiData))\n                                );\n                                const circleRadius = that.getPoiConfig(item.poiType, item.poiData, 'radius', 20);\n                                if (poiType === 'Circle') {\n                                    item.points.forEach((point) => {\n                                        const shape = new BMap[poiType](point, circleRadius, poiOption);\n                                        that.map.addOverlay(shape);\n                                        shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, point, item.poiData));\n                                    });\n                                } else {\n                                    const shape = new BMap[poiType](item.points, poiOption);\n                                    that.map.addOverlay(shape);\n                                    shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, null, item.poiData));\n                                }\n                            });\n                        }\n                    });\n                    const labelPoiTypes = ['label'];\n                    const linePoiTypes = ['polyline', 'polygon'];\n                    const dotPoiTypes = ['circle', 'square', 'point'];\n                    const canvasTypes = [...labelPoiTypes, ...dotPoiTypes, ...linePoiTypes];\n                    const canvasLayerUpdater = (canvasLayer, checkPoint) => {\n                        const ctx = canvasLayer.canvas.getContext('2d');\n                        if (!ctx) {\n                            return [];\n                        }\n                        let checkPixel = null;\n                        if (checkPoint) {\n                            checkPixel = that.map.pointToPixel(checkPoint);\n                        }\n                        const matchItems = [];\n                        ctx.save();\n                        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                        if (that.panel.maskColor) {\n                            ctx.beginPath();\n                            ctx.fillStyle = that.panel.maskColor;\n                            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                            ctx.closePath();\n                        }\n                        ctx.restore();\n                        dotPoiTypes.forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    item.points.forEach((point) => {\n                                        ctx.save();\n                                        const isCircle = poiType === 'circle';\n                                        const isPoint = poiType === 'point';\n                                        const layerItem = {\n                                            lng: point.lng,\n                                            lat: point.lat,\n                                            size: that.getPoiConfig(poiType, item.poiData, isCircle ? 'radius' :\n                                                (isPoint ? 'size' : 'length'), isCircle ? 10 :\n                                                (isPoint ? 5 : 20)),\n                                        };\n                                        ctx.beginPath();\n                                        filterCtx(ctx, that.getPoiOption(poiType, item.poiData, isPoint ? {\n                                            'fillColor': getColor(that.getPoiConfig(poiType, item.poiData, 'color', 'blue'), 0.4)\n                                        } : {}));\n                                        const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                            parseFloat(layerItem.lat), layerItem.size, !isCircle);\n                                        if (isPoint) {\n                                            ctx.arc(posRect.x, posRect.y, layerItem.size, 0, 2 * Math.PI);\n                                        } else if (isCircle) {\n                                            ctx.arc(posRect.x, posRect.y, posRect.w, 0, 2 * Math.PI);\n                                        } else {\n                                            ctx.rect(posRect.x, posRect.y, posRect.w, posRect.h);\n                                        }\n                                        if (checkPixel && ctx.isPointInPath(checkPixel.x, checkPixel.y)) {\n                                            matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                        }\n                                        ctx.closePath();\n                                        if (!isPoint) {\n                                            ctx.stroke();\n                                        }\n                                        ctx.fill();\n                                        ctx.restore();\n                                    });\n                                });\n                            }\n                        });\n                        linePoiTypes.forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    ctx.save();\n                                    ctx.beginPath();\n                                    const poiOption = that.getPoiOption(poiType, item.poiData);\n                                    filterCtx(ctx, poiOption);\n                                    const startPoint = that.map.pointToPixel(item.points[0]);\n                                    ctx.moveTo(startPoint.x, startPoint.y);\n                                    for (let pointIndex = 1; pointIndex < item.points.length; pointIndex++) {\n                                        const linePoint = that.map.pointToPixel(item.points[pointIndex]);\n                                        ctx.lineTo(linePoint.x, linePoint.y);\n                                    }\n                                    if (poiType === 'polyline') {\n                                        ctx.stroke();\n                                    } else if (poiType === 'polygon') {\n                                        ctx.closePath();\n                                        ctx.stroke();\n                                        if (poiOption.fillOpacity) {\n                                            ctx.globalAlpha = poiOption.fillOpacity;\n                                        }\n                                        ctx.fill();\n                                    }\n                                    if (checkPixel && ctx.isPointInPath(checkPixel.x, checkPixel.y)) {\n                                        matchItems.push([checkPoint, poiType, item.poiData, item.points]);\n                                    }\n                                    ctx.restore();\n                                });\n                            }\n                        });\n                        labelPoiTypes.forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    ctx.save();\n                                    ctx.beginPath();\n                                    const labelText = that.getPoiContent(poiType, item.poiData);\n                                    const poiOption = that.getPoiOption(poiType, item.poiData);\n                                    filterCtx(ctx, poiOption, false);\n                                    for (let pointIndex = 0; pointIndex < item.points.length; pointIndex++) {\n                                        ctx.beginPath();\n                                        const labelPoint = that.map.pointToPixel(item.points[pointIndex]);\n                                        ctx.fillText(labelText, labelPoint.x, labelPoint.y);\n                                        if (checkPixel && ctx.isPointInPath(checkPixel.x, checkPixel.y)) {\n                                            matchItems.push([checkPoint, poiType, item.poiData, item.points[pointIndex]]);\n                                        }\n                                    }\n                                    ctx.restore();\n                                });\n                            }\n                        });\n                        return matchItems;\n                    };\n\n                    if (canvasTypes.some(canvasType => shapeMap[canvasType]) || that.panel.maskColor) {\n                        const canvasLayer = new BMap.CanvasLayer({\n                            paneName: 'mapPane',\n                            zIndex: -999,\n                            update: canvasLayerUpdater(this)\n                        });\n                        that.map.addOverlay(canvasLayer);\n                        that.clickHandler.push((event) => {\n                            const matchItems = canvasLayerUpdater(canvasLayer, event.point);\n                            if (matchItems.length > 0) {\n                                that.getPoiInfoWindowHandler(matchItems[1], matchItems[0], matchItems[1])(event);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.panel.hideEmpty && _.isNil(o.value)) && !(this.panel.hideZero && o.value === 0);\n        });\n    }\n\n    onDataSnapshotLoad(snapshotData) {\n        this.onDataReceived(snapshotData);\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target,\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    setNewMapCenter() {\n        this.render();\n    }\n\n    setZoom() {\n        this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n    }\n\n    setStyle() {\n        this.map.setMapStyle({style: this.panel.theme});\n    }\n\n    setAK() {\n        const x = document.body;\n        const s = document.getElementsByTagName('script');\n        const len = s.length;\n        x.removeChild(s[len - 1]);\n        delete this.map;\n        this.render();\n    }\n\n    navigationControl() {\n        if (this.panel.navigation == true) {\n            this.map.addControl(this.navigationSwitch);\n        } else {\n            this.map.removeControl(this.navigationSwitch);\n        }\n    }\n\n    scaleControl() {\n        if (this.panel.scale == true) {\n            this.map.addControl(this.scaleSwitch);\n        } else {\n            this.map.removeControl(this.scaleSwitch);\n        }\n    }\n\n    overviewMapControl() {\n        if (this.panel.overviewMap === true) {\n            this.map.addControl(this.overviewMapSwitch);\n        } else {\n            this.map.removeControl(this.overviewMapSwitch);\n        }\n    }\n\n    mapTypeControl() {\n        if (this.panel.mapType === true) {\n            this.map.addControl(this.mapTypeSwitch);\n        } else {\n            this.map.removeControl(this.mapTypeSwitch);\n        }\n    }\n\n    trafficControl() {\n        if (this.panel.traffic === true) {\n            this.map.addControl(this.trafficSwitch);\n        } else {\n            this.map.removeControl(this.trafficSwitch);\n        }\n    }\n\n    resize() {\n\n    }\n\n    toggleStickyLabels() {\n        console.log(this.panel.stickyLabels);\n    }\n\n    changeLocationData() {\n        if (this.panel.locationData === 'geohash') {\n            this.render();\n        }\n    }\n\n    /* eslint class-methods-use-this: 0 */\n    link(scope, elem, attrs, ctrl) {\n        mapRenderer(scope, elem, attrs, ctrl);\n    }\n\n\n// 如果要调试事件接口，请打开下方屏蔽代码，\n// 在firefox或者chrome下查看调试信息\n\n    // distanceTool.addEventListener('drawend', function (e) {\n    //     console.log('drawend');\n    //     console.log(e.points);\n    //     console.log(e.overlays);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('addpoint', function (e) {\n    //     console.log('addpoint');\n    //     console.log(e.point);\n    //     console.log(e.pixel);\n    //     console.log(e.index);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('removepolyline', function (e) {\n    //     console.log('removepolyline');\n    //     console.log(e);\n    // });\n\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}