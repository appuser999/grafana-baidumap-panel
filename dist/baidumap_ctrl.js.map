{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["getColor","orginBili","alpha","bili","one","r","g","b","yellowValue","fullRedValue","darkRedWeight","parseInt","getDotRect","mp","lng","lat","squareSize","isCenterPoint","standardLen","xScale","Math","cos","PI","lngDelta","latDelta","pixel","pointToPixel","window","BMap","Point","pixel2","x","y","w","h","MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","decodeGeoHash","panelDefaults","ak","maxDataPoints","theme","initialZoom","valueName","locationData","gpsType","esMetric","decimals","navigation","scale","hideEmpty","overviewMap","hideZero","mapType","traffic","clusterPoint","globalConfig","typeName","lngName","latName","posName","geohashName","extName","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","markers","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","poiType","getPoiOption","poiConfig","defaultValue","configName","typeOption","getPoiTypeExt","poiOption","getPoiExt","Object","assign","length","extJson","JSON","parse","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","tableHandlers","datas","splice","addNode","render","clearOverlays","point","markerOption","iconUrl","Number","isInteger","icon","Icon","Size","offset","imageOffset","imageSize","anchor","marker","Marker","pointLabel","label","Label","setLabel","push","enableDragging","scontent","detailImage","infoWindow","InfoWindow","addEventListener","openInfoWindow","addOverlay","setAnimation","BMAP_ANIMATION_BOUNCE","e","alert","that","poiList","console","log","getMapSourceId","sourceGps","sourceGpsId","translateOne","poiIndex","gpsIndex","gps","rawLength","setTimeout","translateCallback","sourcePointList","callbackList","myPoiIndex","myGpsIndex","myGps","translatedData","translatedItems","sort","a","translateIndex","translatedItem","poiIndexKey","pointItem","shapeMap","shapeList","points","poiData","heatPoiType","heatShapeList","heat","heatmapOverlay","BMapLib","HeatmapOverlay","radius","getPoiTypeOption","setDataSet","v","count","max","markerTypeName","markerArray","forEach","addMarker","MarkerClusterer","item","driving","renderOptions","autoViewport","search","slice","polyline","enableEditing","enableClicking","strokeWeight","strokeOpacity","strokeColor","pie","square","CanvasLayer","paneName","zIndex","update","ctx","canvas","getContext","clearRect","width","height","fillStyle","beginPath","fillRect","layerItem","color","size","isPie","posRect","parseFloat","ellipse","fill","layerArray","i","gpsItem","longitude","latitude","gpsList","split","gpsStr","convertor","Convertor","groupSize","groupIndex","pointList","pointIndex","translate","result","status","index","error","filter","o","isNil","value","snapshotData","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","setMapStyle","style","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","trafficSwitch","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"baidumap_ctrl.js","sourcesContent":["/* eslint-disable eqeqeq,id-length,no-inner-declarations,no-plusplus,no-mixed-operators,no-continue */\n/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\n\nimport decodeGeoHash from './geohash';\n\nconst panelDefaults = {\n    ak: 'QKCqsdHBbGxBnNbvUwWdUEBjonk7jUj6',\n    maxDataPoints: 1,\n    theme: 'normal',\n    lat: 39.968539,\n    lng: 116.497856,\n    initialZoom: 14,\n    valueName: 'current',\n    locationData: 'json result',\n    gpsType: '百度坐标系',\n    esMetric: 'Count',\n    decimals: 0,\n    navigation: true,\n    scale: true,\n    hideEmpty: false,\n    overviewMap: false,\n    hideZero: false,\n    mapType: false,\n    traffic: false,\n    clusterPoint: false,\n    globalConfig: '',\n    typeName: 'type',\n    lngName: 'longitude',\n    latName: 'latitude',\n    posName: 'pos',\n    geohashName: 'geohash',\n    extName: 'config'\n};\n\n\nfunction getColor(orginBili, alpha) {\n    const bili = orginBili > 100 ? 100 : orginBili;\n    // 百分之一 = (单色值范围) / 50;  单颜色的变化范围只在50%之内\n    const one = (255 + 255) / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    const yellowValue = 50;\n    const fullRedValue = 95;\n    const darkRedWeight = 0.6;\n\n    if (bili <= yellowValue) {\n        // 比例小于yellowValue的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\n        r = one * bili / yellowValue * 50;\n        g = 255;\n    } else if (bili > yellowValue && bili <= fullRedValue) {\n        // 比例大于yellowValue的时候绿色是越来越少的,直到fullRedValue 变为纯红\n        g = 255 - ((bili - yellowValue) / (fullRedValue - yellowValue) * 50 * one);\n        r = 255;\n    } else {\n        // 比例大于fullRedValue 开始转为暗红\n        g = 0;\n        r = 255 * (1 - darkRedWeight * (bili - fullRedValue) / (100 - fullRedValue));\n    }\n    r = parseInt(r, 10);// 取整\n    g = parseInt(g, 10);// 取整\n    b = parseInt(b, 10);// 取整\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n}\n\n// 获取色块对应的矩形相对于地图的像素值\nfunction getDotRect(mp, lng, lat, squareSize = 20, isCenterPoint = true) {\n    const standardLen = 111700;\n    const xScale = Math.cos(lat * Math.PI / 180);\n    const lngDelta = squareSize / (standardLen * xScale);\n    const latDelta = squareSize / (standardLen);\n\n    const pixel = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng - lngDelta / 2, lat - latDelta / 2) : new window.BMap.Point(lng, lat));\n    const pixel2 = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng + lngDelta / 2, lat + latDelta / 2) : new window.BMap.Point(lng + lngDelta, lat + latDelta));\n    return {\n        x: pixel.x,\n        y: pixel.y,\n        w: pixel2.x - pixel.x,\n        h: pixel2.y - pixel.y,\n    };\n}\n\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, contextSrv) {\n        super($scope, $injector);\n        this.setMapProvider(contextSrv);\n        _.defaults(this.panel, panelDefaults);\n\n        this.dataFormatter = new DataFormatter(this, kbn);\n        this.markers = [];\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n        // this.loadLocationDataFromFile();\n    }\n\n    getPoiTypeOption(poiType) {\n        return this.getPoiOption(poiType, null, {});\n    }\n\n    getPoiOption(poiType, poiConfig, defaultValue = '') {\n        const configName = 'option';\n        const typeOption = this.getPoiTypeExt(poiType, configName, defaultValue);\n        const poiOption = this.getPoiExt(poiType, poiConfig, configName, defaultValue);\n        return Object.assign({}, typeOption, poiOption);\n    }\n\n    getPoiTypeExt(poiType, configName, defaultValue = '') {\n        return this.getPoiExt(poiType, null, configName, defaultValue);\n    }\n\n    getPoiExt(poiType, poiConfig, configName, defaultValue = '') {\n        const extName = this.panel.extName;\n        if (poiConfig && extName in poiConfig && poiConfig[extName].length > 0) {\n            const extJson = JSON.parse(poiConfig[extName]);\n            if (configName in extJson) {\n                return extJson[configName];\n            }\n        }\n        if (this.panel.globalConfig && this.panel.globalConfig.length > 0) {\n            const globalConfig = JSON.parse(this.panel.globalConfig);\n            if (poiType in globalConfig && configName in globalConfig[poiType]) {\n                return globalConfig[poiType][configName];\n            }\n        }\n        return defaultValue;\n    }\n\n    setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        this.tileServer = 'CartoDB Positron';\n        this.setMapSaturationClass();\n    }\n\n    setMapSaturationClass() {\n        if (this.tileServer === 'CartoDB Dark') {\n            this.saturationClass = 'map-darken';\n        } else {\n            this.saturationClass = '';\n        }\n    }\n\n    loadLocationDataFromFile(reload) {\n        if (this.map && !reload) return;\n\n        if (this.panel.snapshotLocationData) {\n            this.locations = this.panel.snapshotLocationData;\n            return;\n        }\n\n        if (this.panel.locationData === 'jsonp endpoint') {\n\n        } else if (this.panel.locationData === 'json endpoint') {\n            if (!this.panel.jsonUrl) return;\n        } else if (this.panel.locationData === 'table') {\n            // .. Do nothing\n\n        } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n\n        }\n    }\n\n    reloadLocations(res) {\n        this.locations = res;\n        this.refresh();\n    }\n\n    onPanelTeardown() {\n        if (this.map) delete this.map;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList) return;\n        if (this.dashboard.snapshot && this.locations) {\n            this.panel.snapshotLocationData = this.locations;\n        }\n\n        const data = [];\n        if (this.panel.locationData === 'geohash') {\n            this.dataFormatter.setGeohashValues(dataList, data);\n        } else if (this.panel.locationData === 'table') {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else if (this.panel.locationData === 'json result') {\n            const tableData = dataList.map(DataFormatter.tableHandlers.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        }\n        // const datas = this.filterEmptyAndZeroValues(data);\n\n        const datas = data;\n        if (typeof this.data === 'object') this.data.splice(0, this.data.length);\n        this.markers.splice(0, this.markers.length);\n        if (datas.length) {\n            this.data = datas;\n\n            this.map ? this.addNode(this.BMap) : this.render();\n        } else {\n            if (this.map) this.map.clearOverlays();\n            this.render();\n        }\n    }\n\n    addMarker(point, BMap, data) {\n        // public/plugins/grafana-baidumap-panel/images/bike.png\n        const poiType = 'marker';\n        const markerOption = this.getPoiOption(poiType, data, {});\n        const iconUrl = this.getPoiExt(poiType, data, 'icon', '');\n        if (Number.isInteger(iconUrl)) {\n            markerOption.icon = new BMap.Icon('http://api.map.baidu.com/img/markers.png', new BMap.Size(23, 25), {\n                offset: new BMap.Size(10, 25), // 指定定位位置\n                imageOffset: new BMap.Size(0, 25 * (10 - (iconUrl % 10)) - 10 * 25) // 设置图片偏移\n            });\n        } else if (iconUrl.length > 0) {\n            markerOption.icon = new BMap.Icon(iconUrl, new window.BMap.Size(24, 28), {\n                imageSize: new window.BMap.Size(24, 28),\n                anchor: new window.BMap.Size(12, 28)\n            });\n        }\n        const marker = new BMap.Marker(point, markerOption);\n        const pointLabel = this.getPoiExt(poiType, data, 'label', '');\n        if (pointLabel.length > 0) {\n            const label = new BMap.Label(pointLabel, {offset: new BMap.Size(20, -10)});\n            marker.setLabel(label);\n        }\n        this.markers.push(marker);\n\n        // this.map.setViewport(pointArray);\n        if (this.getPoiExt(poiType, data, 'enableDragging', false)) {\n            marker.enableDragging();\n        }\n        let scontent = '';\n        scontent += '<a href=\"\"><div class=\"infobox\" id=\"infobox\"><div class=\"infobox-content\" style=\"display:block\">';\n\n        const detailImage = this.getPoiExt(poiType, data, 'detailIcon', '');\n        if (detailImage.length > 0) {\n            scontent += '<div class=\"infobox-header\"><div class=\"infobox-header-icon\"><img src=\"' + detailImage + '\"></div>';\n        }\n        scontent += '<div class=\"infobox-header-name\"><p>' + this.getPoiExt(poiType, data, 'name') + '</p></div>';\n        scontent += '<div class=\"infobox-header-type\" style=\"min-width:250px\"><p>' + this.getPoiExt(poiType, data, 'type') + '</p></div></div>';\n        scontent += '<div class=\"infobox-footer\">' + this.getPoiExt(poiType, data, 'desc') + '</div>';\n        scontent += '<div class=\"infobox-footer-right\"></div></div><div class=\"arrow\"></div></div></a>';\n\n        const infoWindow = new BMap.InfoWindow(scontent); // 创建信息窗口对象\n        marker.addEventListener('click', function () {\n            this.map.openInfoWindow(infoWindow, point); // 开启信息窗口\n        });\n\n        this.map.addOverlay(marker);\n        if (this.getPoiExt(poiType, data, 'animation', false)) {\n            marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\n        }\n        marker.addEventListener('dragend', function (e) {\n            point = new BMap.Point(e.point.lng, e.point.lat);\n            alert('当前位置：' + e.point.lng + ', ' + e.point.lat);\n        });\n    }\n\n    addNode(BMap) {\n        const that = this;\n        const poiList = this.data;\n        this.map.clearOverlays();\n        console.log(poiList);\n        if (poiList) {\n            const shapeMap = [];\n            const layerArray = [];\n\n\n            const sourcePointList = [];\n            const callbackList = [];\n\n\n            let rawLength = 0;\n            const translatedItems = [];\n\n            for (let i = 0; i < poiList.length; i++) {\n                const poiIndex = i;\n                setTimeout(function () {\n                    if (poiList[poiIndex] && poiList[poiIndex][that.panel.lngName]\n                        && poiList[poiIndex][that.panel.latName]\n                        && poiList[poiIndex][that.panel.lngName] > 0\n                        && poiList[poiIndex][that.panel.latName] > 0\n                    ) {\n                        const gpsItem = Object.assign({}, poiList[poiIndex]);\n                        gpsItem.lng = parseFloat(poiList[poiIndex][that.panel.lngName]);\n                        gpsItem.lat = parseFloat(poiList[poiIndex][that.panel.latName]);\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.geohashName] && poiList[poiIndex][that.panel.geohashName].length > 0) {\n                        const {longitude: lng, latitude: lat} = decodeGeoHash(poiList[poiIndex][that.panel.geohashName]);\n                        const gpsItem = Object.assign({}, poiList[poiIndex], {lng, lat});\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.posName] && poiList[poiIndex][that.panel.posName].length > 0) {\n                        const gpsList = poiList[poiIndex][that.panel.posName].split(';');\n                        for (let gpsIndex = 0; gpsIndex < gpsList.length; gpsIndex++) {\n                            const gpsStr = gpsList[gpsIndex];\n                            const [lng, lat] = gpsStr.split('|');\n                            const gpsItem = Object.assign({}, poiList[poiIndex]);\n                            gpsItem.lng = parseFloat(lng);\n                            gpsItem.lat = parseFloat(lat);\n                            translateOne(poiIndex, gpsIndex, gpsItem, BMap);\n                        }\n                    }\n                    if (sourcePointList.length > 0) {\n                        const convertor = new BMap.Convertor();\n                        const groupSize = 10;\n                        for (let groupIndex = 0; groupIndex < sourcePointList.length; groupIndex += groupSize) {\n                            const pointList = [];\n                            for (let pointIndex = 0; pointIndex < groupSize && pointIndex + groupIndex < sourcePointList.length; pointIndex++) {\n                                pointList.push(sourcePointList[groupIndex + pointIndex]);\n                            }\n                            convertor.translate(pointList, getMapSourceId(), 5, (result) => {\n                                if (result.status === 0) {\n                                    for (let index = 0; index < result.points.length; index++) {\n                                        callbackList[groupIndex + index](result.points[index]);\n                                    }\n                                } else {\n                                    console.error('gps translate error', pointList);\n                                }\n                            });\n                        }\n                    }\n                }, 10);\n            }\n\n            function getMapSourceId() {\n                const sourceGps = that.panel.gpsType;\n                let sourceGpsId = 5;\n                if (sourceGps === 'WGS84') {\n                    sourceGpsId = 1;\n                } else if (sourceGps === 'GCJ02') {\n                    sourceGpsId = 3;\n                }\n                return sourceGpsId;\n            }\n\n            function translateOne(poiIndex, gpsIndex, gps) {\n                rawLength += 1;\n                // 转换坐标\n                const sourceGpsId = getMapSourceId();\n                if (sourceGpsId === 5) {\n                    setTimeout(function () {\n                        translateCallback(poiIndex, gpsIndex, gps, {lng: gps.lng, lat: gps.lat});\n                    }, 1);\n                } else {\n                    const point = new BMap.Point(gps.lng, gps.lat);\n                    sourcePointList.push(point);\n                    callbackList.push(translateCallback.bind(this, poiIndex, gpsIndex, gps));\n                }\n            }\n\n            function translateCallback(myPoiIndex, myGpsIndex, myGps, translatedData) {\n                const {lng, lat} = translatedData;\n                translatedItems.push({\n                    poiIndex: myPoiIndex,\n                    gpsIndex: myGpsIndex,\n                    point: new BMap.Point(lng, lat),\n                    gps: myGps,\n                });\n\n                if (translatedItems.length === rawLength) {\n                    translatedItems.sort(function (a, b) {\n                        return ((a.poiIndex - b.poiIndex) * 1000000) + (a.gpsIndex - b.gpsIndex);\n                    });\n                    for (let translateIndex = 0; translateIndex < translatedItems.length; translateIndex++) {\n                        const translatedItem = translatedItems[translateIndex];\n                        const poiType = translatedItem.gps[that.panel.typeName];\n                        const poiIndexKey = 'key_' + translatedItem.poiIndex;\n                        const pointItem = translatedItem.point;\n                        if (!(poiType in shapeMap)) {\n                            shapeMap[poiType] = [];\n                        }\n                        const shapeList = shapeMap[poiType];\n                        if (shapeList.length > 0 && shapeList[shapeList.length - 1].poiIndexKey === poiIndexKey) {\n                            shapeList[shapeList.length - 1].points.push(pointItem);\n                        } else {\n                            shapeList.push({\n                                poiIndexKey: poiIndexKey,\n                                poiType: poiType,\n                                poiData: translatedItem.gps,\n                                points: [pointItem]\n                            });\n                        }\n                    }\n                    console.log('shapeMap', shapeMap);\n                    const heatPoiType = 'heat';\n                    if (shapeMap[heatPoiType]) {\n                        const heatShapeList = shapeMap.heat;\n                        const heatmapOverlay = new BMapLib.HeatmapOverlay(\n                            Object.assign(\n                                {\n                                    radius: 20,\n                                },\n                                that.getPoiTypeOption('heat')\n                            ));\n                        that.map.addOverlay(heatmapOverlay);\n                        heatmapOverlay.setDataSet({\n                            data: heatShapeList.map(v => ({\n                                lng: v.points[0].lng,\n                                lat: v.points[0].lat,\n                                count: that.getPoiExt(heatPoiType, v.poiData, 'count', 1)\n                            })),\n                            max: that.getPoiTypeExt(heatPoiType, 'max', 100)\n                        });\n                    }\n                    const markerTypeName = 'marker';\n                    if (shapeMap[markerTypeName]) {\n                        const markerArray = shapeMap[markerTypeName];\n                        markerArray.forEach(v => that.addMarker(v.points[0], BMap, v.poiData));\n                        if (that.panel.clusterPoint) {\n                            new BMapLib.MarkerClusterer(that.map, {\n                                markers: that.markers\n                            });\n                        }\n                    }\n                    ['RidingRoute', 'DrivingRoute', 'WalkingRoute'].forEach((poiType) => {\n                        if (poiType in shapeMap) {\n                            shapeMap[poiType].forEach((item) => {\n                                const points = item.points.map(v => new BMap.Point(v.lng, v.lat));\n                                const driving = new BMap[poiType](that.map, {\n                                    renderOptions: {\n                                        map: that.map,\n                                        autoViewport: false\n                                    }\n                                });\n                                driving.search(points[0], points.slice(-1)[0]);\n                            });\n                        }\n                    });\n\n\n                    ['Polyline', 'Polygon'].forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                const polyline = new BMap[poiType](item.points, Object.assign(\n                                    {\n                                        enableEditing: false,\n                                        enableClicking: true,\n                                        strokeWeight: 4,\n                                        strokeOpacity: 0.5,\n                                        strokeColor: 'blue',\n                                    },\n                                    that.getPoiOption(item.poiType, item.poiData, {})\n                                ));\n                                that.map.addOverlay(polyline);\n                            });\n                        }\n                    });\n                    if (shapeMap.pie || shapeMap.square) {\n                        that.map.addOverlay(new BMap.CanvasLayer({\n                            paneName: 'vertexPane',\n                            zIndex: -1,\n                            update: () => {\n                                const ctx = this.canvas.getContext('2d');\n                                if (!ctx) {\n                                    return;\n                                }\n                                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                                ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\n                                ctx.beginPath();\n                                ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                                ['pie', 'square'].forEach((poiType) => {\n                                    if (shapeMap[poiType]) {\n                                        shapeMap[poiType].forEach((item) => {\n                                            const layerItem = {\n                                                lng: item.points[0].lng,\n                                                lat: item.points[0].lat,\n                                                color: that.getPoiExt(poiType, item.poiData, 'color', 20),\n                                                size: that.getPoiExt(poiType, item.poiData, 'size', 20),\n                                            };\n                                            ctx.fillStyle = getColor(layerItem.color, that.getPoiExt(poiType, null, 'alpha', 0.5));\n                                            const isPie = poiType === 'pie';\n                                            const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                                parseFloat(layerItem.lat), layerItem.size, !isPie);\n                                            // console.log(posRect);\n                                            if (isPie) {\n                                                ctx.ellipse(posRect.x, posRect.y, posRect.w, -posRect.h, 0, 0, 2 * Math.PI);\n                                                ctx.fill();\n                                                ctx.beginPath();\n                                            } else {\n                                                ctx.fillRect(posRect.x, posRect.y, posRect.w, posRect.h);\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }));\n                    }\n                }\n            }\n        }\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.panel.hideEmpty && _.isNil(o.value)) && !(this.panel.hideZero && o.value === 0);\n        });\n    }\n\n    onDataSnapshotLoad(snapshotData) {\n        this.onDataReceived(snapshotData);\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target,\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    setNewMapCenter() {\n        this.render();\n    }\n\n    setZoom() {\n        this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n    }\n\n    setStyle() {\n        this.map.setMapStyle({style: this.panel.theme});\n    }\n\n    setAK() {\n        const x = document.body;\n        const s = document.getElementsByTagName('script');\n        const len = s.length;\n        x.removeChild(s[len - 1]);\n        delete this.map;\n        this.render();\n    }\n\n    navigationControl() {\n        if (this.panel.navigation == true) {\n            this.map.addControl(this.navigationSwitch);\n        } else {\n            this.map.removeControl(this.navigationSwitch);\n        }\n    }\n\n    scaleControl() {\n        if (this.panel.scale == true) {\n            this.map.addControl(this.scaleSwitch);\n        } else {\n            this.map.removeControl(this.scaleSwitch);\n        }\n    }\n\n    overviewMapControl() {\n        if (this.panel.overviewMap === true) {\n            this.map.addControl(this.overviewMapSwitch);\n        } else {\n            this.map.removeControl(this.overviewMapSwitch);\n        }\n    }\n\n    mapTypeControl() {\n        if (this.panel.mapType === true) {\n            this.map.addControl(this.mapTypeSwitch);\n        } else {\n            this.map.removeControl(this.mapTypeSwitch);\n        }\n    }\n\n    trafficControl() {\n        if (this.panel.traffic === true) {\n            this.map.addControl(this.trafficSwitch);\n        } else {\n            this.map.removeControl(this.trafficSwitch);\n        }\n    }\n\n    resize() {\n\n    }\n\n    toggleStickyLabels() {\n        console.log(this.panel.stickyLabels);\n    }\n\n    changeLocationData() {\n        if (this.panel.locationData === 'geohash') {\n            this.render();\n        }\n    }\n\n    /* eslint class-methods-use-this: 0 */\n    link(scope, elem, attrs, ctrl) {\n        mapRenderer(scope, elem, attrs, ctrl);\n    }\n\n\n// 如果要调试事件接口，请打开下方屏蔽代码，\n// 在firefox或者chrome下查看调试信息\n\n    // distanceTool.addEventListener('drawend', function (e) {\n    //     console.log('drawend');\n    //     console.log(e.points);\n    //     console.log(e.overlays);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('addpoint', function (e) {\n    //     console.log('addpoint');\n    //     console.log(e.point);\n    //     console.log(e.pixel);\n    //     console.log(e.index);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('removepolyline', function (e) {\n    //     console.log('removepolyline');\n    //     console.log(e);\n    // });\n\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}