{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["getColor","orginBili","alpha","bili","one","r","g","b","yellowValue","fullRedValue","darkRedWeight","parseInt","getFilterColor","originOption","styleOption","forEach","keyName","Object","assign","filterCtx","ctx","usePolyOption","sourceOption","getDefaultPolyOption","keyMap","sourceName","targetName","keyValue","getDotRect","mp","lng","lat","squareSize","isCenterPoint","standardLen","xScale","Math","cos","PI","lngDelta","latDelta","pixel","pointToPixel","window","BMap","Point","pixel2","x","y","w","h","strokeWeight","strokeOpacity","strokeColor","fillColor","fillOpacity","MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","decodeGeoHash","panelDefaults","ak","maxDataPoints","theme","initialZoom","valueName","locationData","gpsType","esMetric","decimals","navigation","scale","hideEmpty","overviewMap","hideZero","mapType","traffic","clusterPoint","globalConfig","typeName","lngName","latName","posName","geohashName","configName","contentName","enableMapClick","maskColor","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","markers","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","poiType","getPoiOption","poiConfig","defaultValue","typeOption","getPoiTypeConfig","poiOption","getPoiConfig","poiItem","length","configKey","extJson","JSON","parse","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","tableHandlers","datas","splice","addNode","render","clearOverlays","point","defaultContent","that","e","clickPoint","infoWindow","InfoWindow","getPoiContent","openInfoWindow","markerOption","iconUrl","Number","isInteger","icon","Icon","Size","offset","imageOffset","imageSize","anchor","marker","Marker","pointLabel","label","Label","setLabel","push","enableDragging","addEventListener","getPoiInfoWindowHandler","addOverlay","setAnimation","BMAP_ANIMATION_BOUNCE","alert","poiList","console","log","getMapSourceId","sourceGps","sourceGpsId","translateOne","poiIndex","gpsIndex","gps","rawLength","setTimeout","translateCallback","sourcePointList","callbackList","myPoiIndex","myGpsIndex","myGps","translatedData","translatedItems","sort","a","translateIndex","pointTypeName","translatedItem","poiIndexKey","pointItem","shapeMap","shapeList","points","poiData","pointArray","v","pointCollection","PointCollection","getPoiTypeOption","heatPoiType","heatShapeList","heatmapOverlay","BMapLib","HeatmapOverlay","radius","count","setDataSet","max","labelTypeName","labelArray","labelText","labelItem","position","enableMassClear","setStyle","setTitle","markerTypeName","markerArray","addMarker","MarkerClusterer","item","pointIndex","driving","renderOptions","autoViewport","search","circleRadius","shape","labelPoiTypes","linePoiTypes","dotPoiTypes","canvasTypes","some","canvasType","CanvasLayer","paneName","zIndex","update","canvas","getContext","save","clearRect","width","height","beginPath","fillStyle","fillRect","closePath","restore","isCircle","isPoint","layerItem","size","posRect","parseFloat","arc","rect","stroke","fill","linePoiType","startPoint","moveTo","linePoint","lineTo","globalAlpha","labelPoiType","labelPoint","fillText","i","gpsItem","longitude","latitude","gpsList","split","gpsStr","convertor","Convertor","groupSize","groupIndex","pointList","translate","result","status","index","error","filter","o","isNil","value","snapshotData","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","setMapStyle","style","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","trafficSwitch","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"baidumap_ctrl.js","sourcesContent":["/* eslint-disable eqeqeq,id-length,no-inner-declarations,no-plusplus,no-mixed-operators,no-continue */\n/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\n\nimport decodeGeoHash from './geohash';\n\nconst panelDefaults = {\n    ak: 'QKCqsdHBbGxBnNbvUwWdUEBjonk7jUj6',\n    maxDataPoints: 1,\n    theme: 'normal',\n    lat: 39.968539,\n    lng: 116.497856,\n    initialZoom: 14,\n    valueName: 'current',\n    locationData: 'json result',\n    gpsType: '百度坐标系',\n    esMetric: 'Count',\n    decimals: 0,\n    navigation: true,\n    scale: true,\n    hideEmpty: false,\n    overviewMap: false,\n    hideZero: false,\n    mapType: false,\n    traffic: false,\n    clusterPoint: false,\n    globalConfig: '',\n    typeName: 'type',\n    lngName: 'longitude',\n    latName: 'latitude',\n    posName: 'pos',\n    geohashName: 'geohash',\n    configName: 'config',\n    contentName: 'content',\n    enableMapClick: false,\n    maskColor: ''\n};\n\n\nfunction getColor(orginBili, alpha) {\n    if ((typeof orginBili) !== 'number') {\n        return orginBili;\n    }\n    const bili = orginBili > 100 ? 100 : orginBili;\n    // 百分之一 = (单色值范围) / 50;  单颜色的变化范围只在50%之内\n    const one = (255 + 255) / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    const yellowValue = 50;\n    const fullRedValue = 95;\n    const darkRedWeight = 0.6;\n\n    if (bili <= yellowValue) {\n        // 比例小于yellowValue的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\n        r = one * bili / yellowValue * 50;\n        g = 255;\n    } else if (bili > yellowValue && bili <= fullRedValue) {\n        // 比例大于yellowValue的时候绿色是越来越少的,直到fullRedValue 变为纯红\n        g = 255 - ((bili - yellowValue) / (fullRedValue - yellowValue) * 50 * one);\n        r = 255;\n    } else {\n        // 比例大于fullRedValue 开始转为暗红\n        g = 0;\n        r = 255 * (1 - darkRedWeight * (bili - fullRedValue) / (100 - fullRedValue));\n    }\n    r = parseInt(r, 10);// 取整\n    g = parseInt(g, 10);// 取整\n    b = parseInt(b, 10);// 取整\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n}\n\nfunction getFilterColor(originOption) {\n    const styleOption = {};\n    ['fillColor', 'strokeColor'].forEach((keyName) => {\n        if (originOption[keyName]) {\n            styleOption[keyName] = getColor(originOption[keyName], 0.5);\n        }\n    });\n    return Object.assign({}, originOption, styleOption);\n}\n\nfunction filterCtx(ctx, originOption, usePolyOption = true) {\n    const sourceOption = Object.assign(usePolyOption ? getDefaultPolyOption() : {}, originOption);\n    const styleOption = getFilterColor(sourceOption);\n    [\n        ['strokeWeight', 'lineWidth'],\n        ['fillColor', 'fillStyle'],\n        ['strokeColor', 'strokeStyle'],\n        ['strokeOpacity', 'globalAlpha'],\n    ].forEach((keyMap) => {\n        const [sourceName, targetName] = keyMap;\n        const keyValue = styleOption[sourceName];\n        delete styleOption[sourceName];\n        styleOption[targetName] = keyValue;\n    });\n    Object.assign(ctx, styleOption);\n}\n\n// 获取色块对应的矩形相对于地图的像素值\nfunction getDotRect(mp, lng, lat, squareSize = 20, isCenterPoint = true) {\n    const standardLen = 111700;\n    const xScale = Math.cos(lat * Math.PI / 180);\n    const lngDelta = squareSize / (standardLen * xScale);\n    const latDelta = squareSize / (standardLen);\n\n    const pixel = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng - lngDelta / 2, lat - latDelta / 2) : new window.BMap.Point(lng, lat));\n    const pixel2 = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng + lngDelta / 2, lat + latDelta / 2) : new window.BMap.Point(lng + lngDelta, lat + latDelta));\n    return {\n        x: pixel.x,\n        y: pixel.y,\n        w: pixel2.x - pixel.x,\n        h: pixel2.y - pixel.y,\n    };\n}\n\n\nfunction getDefaultPolyOption() {\n    return {\n        strokeWeight: 3,\n        strokeOpacity: 0.6,\n        strokeColor: 'blue',\n        fillColor: 'red',\n        fillOpacity: 0.4\n    };\n}\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, contextSrv) {\n        super($scope, $injector);\n        this.setMapProvider(contextSrv);\n        _.defaults(this.panel, panelDefaults);\n\n        this.dataFormatter = new DataFormatter(this, kbn);\n        this.markers = [];\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n        // this.loadLocationDataFromFile();\n    }\n\n    getPoiTypeOption(poiType) {\n        return this.getPoiOption(poiType, null);\n    }\n\n    getPoiOption(poiType, poiConfig, defaultValue = {}) {\n        const configName = 'option';\n        const typeOption = this.getPoiTypeConfig(poiType, configName, {});\n        const poiOption = this.getPoiConfig(poiType, poiConfig, configName, {});\n        return Object.assign(defaultValue, typeOption, poiOption);\n    }\n\n    getPoiTypeConfig(poiType, configName, defaultValue = '') {\n        return this.getPoiConfig(poiType, null, configName, defaultValue);\n    }\n\n    getPoiContent(poiType, poiItem, defaultValue = '') {\n        const contentName = this.panel.contentName;\n        if (poiItem && contentName in poiItem && poiItem[contentName].length > 0) {\n            return poiItem[contentName];\n        }\n        return this.getPoiConfig(poiType, poiItem, contentName, defaultValue);\n    }\n\n    getPoiConfig(poiType, poiItem, configKey, defaultValue = '') {\n        if (!poiType) {\n            return defaultValue;\n        }\n        const configName = this.panel.configName;\n        if (poiItem && configName in poiItem && poiItem[configName].length > 0) {\n            const extJson = JSON.parse(poiItem[configName]);\n            if (configKey in extJson) {\n                return extJson[configKey];\n            }\n        }\n        if (this.panel.globalConfig && this.panel.globalConfig.length > 0) {\n            const globalConfig = JSON.parse(this.panel.globalConfig);\n            if (poiType in globalConfig && configKey in globalConfig[poiType]) {\n                return globalConfig[poiType][configKey];\n            }\n        }\n        return defaultValue;\n    }\n\n    setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        this.tileServer = 'CartoDB Positron';\n        this.setMapSaturationClass();\n    }\n\n    setMapSaturationClass() {\n        if (this.tileServer === 'CartoDB Dark') {\n            this.saturationClass = 'map-darken';\n        } else {\n            this.saturationClass = '';\n        }\n    }\n\n    loadLocationDataFromFile(reload) {\n        if (this.map && !reload) return;\n\n        if (this.panel.snapshotLocationData) {\n            this.locations = this.panel.snapshotLocationData;\n            return;\n        }\n\n        if (this.panel.locationData === 'jsonp endpoint') {\n\n        } else if (this.panel.locationData === 'json endpoint') {\n            if (!this.panel.jsonUrl) return;\n        } else if (this.panel.locationData === 'table') {\n            // .. Do nothing\n\n        } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n\n        }\n    }\n\n    reloadLocations(res) {\n        this.locations = res;\n        this.refresh();\n    }\n\n    onPanelTeardown() {\n        if (this.map) delete this.map;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList) return;\n        if (this.dashboard.snapshot && this.locations) {\n            this.panel.snapshotLocationData = this.locations;\n        }\n\n        const data = [];\n        if (this.panel.locationData === 'geohash') {\n            this.dataFormatter.setGeohashValues(dataList, data);\n        } else if (this.panel.locationData === 'table') {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else if (this.panel.locationData === 'json result') {\n            const tableData = dataList.map(DataFormatter.tableHandlers.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        }\n        // const datas = this.filterEmptyAndZeroValues(data);\n\n        const datas = data;\n        if (typeof this.data === 'object') this.data.splice(0, this.data.length);\n        this.markers.splice(0, this.markers.length);\n        if (datas.length) {\n            this.data = datas;\n            this.map ? this.addNode(this.BMap) : this.render();\n        } else {\n            if (this.map) this.map.clearOverlays();\n            this.render();\n        }\n    }\n\n    getPoiInfoWindowHandler(poiType, point, poiItem, defaultContent = '') {\n        const that = this;\n        return (e) => {\n            let clickPoint = point;\n            if (!clickPoint) {\n                clickPoint = e.point;\n            }\n            const infoWindow = new BMap.InfoWindow(that.getPoiContent(poiType, poiItem, defaultContent),\n                that.getPoiConfig(poiType, poiItem, 'contentOption', {\n                    'title': that.getPoiConfig(poiType, poiItem, 'title', clickPoint.lng + '|' + clickPoint.lat)\n                })\n            ); // 创建信息窗口对象\n            that.map.openInfoWindow(infoWindow, clickPoint);\n        };\n    }\n\n    addMarker(poiType, point, BMap, data) {\n\n        // public/plugins/grafana-baidumap-panel/images/bike.png\n        const markerOption = this.getPoiOption(poiType, data);\n        const iconUrl = this.getPoiConfig(poiType, data, 'icon', '');\n        if (Number.isInteger(iconUrl)) {\n            markerOption.icon = new BMap.Icon('http://api.map.baidu.com/img/markers.png', new BMap.Size(23, 25), {\n                offset: new BMap.Size(10, 25), // 指定定位位置\n                imageOffset: new BMap.Size(0, 25 * (10 - (iconUrl % 10)) - 10 * 25) // 设置图片偏移\n            });\n        } else if (iconUrl.length > 0) {\n            markerOption.icon = new BMap.Icon(iconUrl, new window.BMap.Size(24, 28), {\n                imageSize: new window.BMap.Size(24, 28),\n                anchor: new window.BMap.Size(12, 28)\n            });\n        }\n        const marker = new BMap.Marker(point, markerOption);\n        const pointLabel = this.getPoiConfig(poiType, data, 'label', '');\n        if (pointLabel.length > 0) {\n            const label = new BMap.Label(pointLabel, {offset: new BMap.Size(20, -10)});\n            marker.setLabel(label);\n        }\n        this.markers.push(marker);\n\n        // this.map.setViewport(pointArray);\n        if (this.getPoiConfig(poiType, data, 'enableDragging', false)) {\n            marker.enableDragging();\n        }\n        marker.addEventListener('click', this.getPoiInfoWindowHandler(poiType, point, data));\n\n        this.map.addOverlay(marker);\n        if (this.getPoiConfig(poiType, data, 'animation', false)) {\n            marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\n        }\n        marker.addEventListener('dragend', function (e) {\n            point = new BMap.Point(e.point.lng, e.point.lat);\n            alert('当前位置：' + e.point.lng + ', ' + e.point.lat);\n        });\n    }\n\n    addNode(BMap) {\n        const that = this;\n        const poiList = this.data;\n        this.map.clearOverlays();\n        console.log(poiList);\n        if (poiList) {\n            const shapeMap = [];\n            const sourcePointList = [];\n            const callbackList = [];\n\n            let rawLength = 0;\n            const translatedItems = [];\n\n            for (let i = 0; i < poiList.length; i++) {\n                const poiIndex = i;\n                setTimeout(function () {\n                    if (poiList[poiIndex] && poiList[poiIndex][that.panel.lngName]\n                        && poiList[poiIndex][that.panel.latName]\n                        && poiList[poiIndex][that.panel.lngName] > 0\n                        && poiList[poiIndex][that.panel.latName] > 0\n                    ) {\n                        const gpsItem = Object.assign({}, poiList[poiIndex]);\n                        gpsItem.lng = parseFloat(poiList[poiIndex][that.panel.lngName]);\n                        gpsItem.lat = parseFloat(poiList[poiIndex][that.panel.latName]);\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.geohashName] && poiList[poiIndex][that.panel.geohashName].length > 0) {\n                        const {longitude: lng, latitude: lat} = decodeGeoHash(poiList[poiIndex][that.panel.geohashName]);\n                        const gpsItem = Object.assign({}, poiList[poiIndex], {lng, lat});\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.posName] && poiList[poiIndex][that.panel.posName].length > 0) {\n                        const gpsList = poiList[poiIndex][that.panel.posName].split(';');\n                        for (let gpsIndex = 0; gpsIndex < gpsList.length; gpsIndex++) {\n                            const gpsStr = gpsList[gpsIndex];\n                            const [lng, lat] = gpsStr.split('|');\n                            const gpsItem = Object.assign({}, poiList[poiIndex]);\n                            gpsItem.lng = parseFloat(lng);\n                            gpsItem.lat = parseFloat(lat);\n                            translateOne(poiIndex, gpsIndex, gpsItem, BMap);\n                        }\n                    }\n                    if (sourcePointList.length > 0) {\n                        const convertor = new BMap.Convertor();\n                        const groupSize = 10;\n                        for (let groupIndex = 0; groupIndex < sourcePointList.length; groupIndex += groupSize) {\n                            const pointList = [];\n                            for (let pointIndex = 0; pointIndex < groupSize && pointIndex + groupIndex < sourcePointList.length; pointIndex++) {\n                                pointList.push(sourcePointList[groupIndex + pointIndex]);\n                            }\n                            convertor.translate(pointList, getMapSourceId(), 5, (result) => {\n                                if (result.status === 0) {\n                                    for (let index = 0; index < result.points.length; index++) {\n                                        callbackList[groupIndex + index](result.points[index]);\n                                    }\n                                } else {\n                                    console.error('gps translate error', pointList);\n                                }\n                            });\n                        }\n                    }\n                }, 10);\n            }\n\n            function getMapSourceId() {\n                const sourceGps = that.panel.gpsType;\n                let sourceGpsId = 5;\n                if (sourceGps === 'WGS84') {\n                    sourceGpsId = 1;\n                } else if (sourceGps === 'GCJ02') {\n                    sourceGpsId = 3;\n                }\n                return sourceGpsId;\n            }\n\n            function translateOne(poiIndex, gpsIndex, gps) {\n                rawLength += 1;\n                // 转换坐标\n                const sourceGpsId = getMapSourceId();\n                if (sourceGpsId === 5) {\n                    setTimeout(function () {\n                        translateCallback(poiIndex, gpsIndex, gps, {lng: gps.lng, lat: gps.lat});\n                    }, 1);\n                } else {\n                    const point = new BMap.Point(gps.lng, gps.lat);\n                    sourcePointList.push(point);\n                    callbackList.push(translateCallback.bind(this, poiIndex, gpsIndex, gps));\n                }\n            }\n\n            function translateCallback(myPoiIndex, myGpsIndex, myGps, translatedData) {\n                const {lng, lat} = translatedData;\n                translatedItems.push({\n                    poiIndex: myPoiIndex,\n                    gpsIndex: myGpsIndex,\n                    point: new BMap.Point(lng, lat),\n                    gps: myGps,\n                });\n\n                if (translatedItems.length === rawLength) {\n\n                    translatedItems.sort(function (a, b) {\n                        return ((a.poiIndex - b.poiIndex) * 1000000) + (a.gpsIndex - b.gpsIndex);\n                    });\n                    for (let translateIndex = 0; translateIndex < translatedItems.length; translateIndex++) {\n                        const pointTypeName = 'Point';\n\n                        const translatedItem = translatedItems[translateIndex];\n                        const poiType = translatedItem.gps[that.panel.typeName] || pointTypeName;\n\n                        const poiIndexKey = 'key_' + translatedItem.poiIndex;\n                        const pointItem = translatedItem.point;\n                        if (!(poiType in shapeMap)) {\n                            shapeMap[poiType] = [];\n                        }\n                        const shapeList = shapeMap[poiType];\n                        if (shapeList.length > 0 && shapeList[shapeList.length - 1].poiIndexKey === poiIndexKey) {\n                            shapeList[shapeList.length - 1].points.push(pointItem);\n                        } else {\n                            shapeList.push({\n                                poiIndexKey: poiIndexKey,\n                                poiType: poiType,\n                                poiData: translatedItem.gps,\n                                points: [pointItem]\n                            });\n                        }\n                    }\n                    console.log('shapeMap', shapeMap);\n\n                    const pointTypeName = 'Point';\n                    if (shapeMap[pointTypeName]) {\n                        const pointArray = shapeMap[pointTypeName];\n                        const points = [];\n                        pointArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                point.poiData = v.poiData;\n                                points.push(point);\n                            });\n                        });\n                        const pointCollection = new BMap.PointCollection(points, getFilterColor(that.getPoiTypeOption(pointTypeName)));\n                        pointCollection.addEventListener('click', (e) => {\n                            const poiData = e.point.poiData;\n                            delete e.point[poiData];\n                            that.getPoiInfoWindowHandler(pointTypeName, e.point, poiData)(e);\n                        });\n                        that.map.addOverlay(pointCollection);\n                    }\n\n                    const heatPoiType = 'Heat';\n                    if (shapeMap[heatPoiType]) {\n                        const heatShapeList = shapeMap[heatPoiType];\n                        const heatmapOverlay = new BMapLib.HeatmapOverlay(\n                            Object.assign(\n                                {\n                                    radius: 20,\n                                },\n                                that.getPoiTypeOption(heatPoiType)\n                            ));\n                        that.map.addOverlay(heatmapOverlay);\n                        const dataList = [];\n                        heatShapeList.forEach((v) => {\n                            v.points.forEach((point) => {\n                                dataList.push(({\n                                    lng: point.lng,\n                                    lat: point.lat,\n                                    count: that.getPoiConfig(heatPoiType, v.poiData, 'count', 1)\n                                }));\n                            });\n                        });\n                        heatmapOverlay.setDataSet({\n                            data: dataList,\n                            max: that.getPoiTypeConfig(heatPoiType, 'max', 100)\n                        });\n                    }\n\n                    const labelTypeName = 'Label';\n                    if (shapeMap[labelTypeName]) {\n                        const labelArray = shapeMap[labelTypeName];\n                        labelArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                const labelText = that.getPoiContent(labelTypeName, v.poiData);\n                                const labelItem = new BMap.Label(labelText, {\n                                    position: point,\n                                    enableMassClear: that.getPoiConfig(labelTypeName, v.poiData, 'enableMassClear', true)\n                                });\n                                that.map.addOverlay(labelItem);\n                                labelItem.setStyle(that.getPoiConfig(labelTypeName, v.poiData, 'style', {}));\n                                labelItem.setTitle(that.getPoiConfig(labelTypeName, v.poiData, 'title', ''));\n                                labelItem.addEventListener('click', that.getPoiInfoWindowHandler(labelTypeName, point, v.poiData));\n                                // that.addlabel(labelTypeName, label, BMap, v.poiData);\n                            });\n                        });\n                    }\n                    const markerTypeName = 'Marker';\n                    if (shapeMap[markerTypeName]) {\n                        const markerArray = shapeMap[markerTypeName];\n                        markerArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                that.addMarker(markerTypeName, point, BMap, v.poiData);\n                            });\n                        });\n                        if (that.panel.clusterPoint) {\n                            new BMapLib.MarkerClusterer(that.map, {\n                                markers: that.markers\n                            });\n                        }\n                    }\n\n                    ['RidingRoute', 'DrivingRoute', 'WalkingRoute'].forEach((poiType) => {\n                        if (poiType in shapeMap) {\n                            shapeMap[poiType].forEach((item) => {\n                                const points = item.points;\n                                for (let pointIndex = 0; pointIndex < points.length - 1; pointIndex++) {\n                                    const driving = new BMap[poiType](that.map, {\n                                        renderOptions: {\n                                            map: that.map,\n                                            autoViewport: false\n                                        }\n                                    });\n                                    driving.search(points[pointIndex], points[pointIndex + 1]);\n                                }\n                            });\n                        }\n                    });\n                    ['Polyline', 'Polygon', 'Circle'].forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                const poiOption = Object.assign(\n                                    getDefaultPolyOption(),\n                                    getFilterColor(that.getPoiOption(item.poiType, item.poiData))\n                                );\n                                const circleRadius = that.getPoiConfig(item.poiType, item.poiData, 'radius', 20);\n                                if (poiType === 'Circle') {\n                                    item.points.forEach((point) => {\n                                        const shape = new BMap[poiType](point, circleRadius, poiOption);\n                                        that.map.addOverlay(shape);\n                                        shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, point, item.poiData));\n                                    });\n                                } else {\n                                    const shape = new BMap[poiType](item.points, poiOption);\n                                    that.map.addOverlay(shape);\n                                    shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, null, item.poiData));\n                                }\n                            });\n                        }\n                    });\n                    const labelPoiTypes = ['label'];\n                    const linePoiTypes = ['polyline', 'polygon'];\n                    const dotPoiTypes = ['circle', 'square', 'point'];\n                    const canvasTypes = [...labelPoiTypes, ...dotPoiTypes, ...linePoiTypes];\n                    if (canvasTypes.some(canvasType => shapeMap[canvasType]) || that.panel.maskColor) {\n                        that.map.addOverlay(new BMap.CanvasLayer({\n                            paneName: 'mapPane',\n                            zIndex: -999,\n                            update: function () {\n                                const ctx = this.canvas.getContext('2d');\n                                if (!ctx) {\n                                    return;\n                                }\n                                ctx.save();\n                                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                                if (that.panel.maskColor) {\n                                    ctx.beginPath();\n                                    ctx.fillStyle = that.panel.maskColor;\n                                    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                                    ctx.closePath();\n                                }\n                                ctx.restore();\n                                dotPoiTypes.forEach((poiType) => {\n                                    if (shapeMap[poiType]) {\n                                        shapeMap[poiType].forEach((item) => {\n                                            item.points.forEach((point) => {\n                                                ctx.save();\n                                                const isCircle = poiType === 'circle';\n                                                const isPoint = poiType === 'point';\n                                                const layerItem = {\n                                                    lng: point.lng,\n                                                    lat: point.lat,\n                                                    // eslint-disable-next-line no-nested-ternary\n                                                    size: that.getPoiConfig(poiType, item.poiData, isCircle ? 'radius' :\n                                                        (isPoint ? 'size' : 'length'), 20),\n                                                };\n                                                ctx.beginPath();\n                                                filterCtx(ctx, that.getPoiOption(poiType, item.poiData));\n                                                const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                                    parseFloat(layerItem.lat), layerItem.size, !isCircle);\n                                                if (isPoint) {\n                                                    ctx.arc(layerItem.x, layerItem.y, layerItem.size, 0, 2 * Math.PI);\n                                                } else if (isCircle) {\n                                                    ctx.arc(posRect.x, posRect.y, posRect.w, 0, 2 * Math.PI);\n                                                } else {\n                                                    ctx.rect(posRect.x, posRect.y, posRect.w, posRect.h);\n                                                }\n                                                ctx.closePath();\n                                                ctx.stroke();\n                                                ctx.fill();\n                                                ctx.restore();\n                                            });\n                                        });\n                                    }\n                                });\n                                linePoiTypes.forEach((linePoiType) => {\n                                    if (shapeMap[linePoiType]) {\n                                        shapeMap[linePoiType].forEach((item) => {\n                                            ctx.save();\n                                            ctx.beginPath();\n                                            const poiOption = that.getPoiOption(linePoiType, item.poiData);\n                                            filterCtx(ctx, poiOption);\n                                            const startPoint = that.map.pointToPixel(item.points[0]);\n                                            ctx.moveTo(startPoint.x, startPoint.y);\n                                            for (let pointIndex = 1; pointIndex < item.points.length; pointIndex++) {\n                                                const linePoint = that.map.pointToPixel(item.points[pointIndex]);\n                                                ctx.lineTo(linePoint.x, linePoint.y);\n                                            }\n                                            if (linePoiType === 'polyline') {\n                                                ctx.stroke();\n                                            } else if (linePoiType === 'polygon') {\n                                                ctx.closePath();\n                                                ctx.stroke();\n                                                if (poiOption.fillOpacity) {\n                                                    ctx.globalAlpha = poiOption.fillOpacity;\n                                                }\n                                                ctx.fill();\n                                            }\n                                            ctx.restore();\n                                        });\n                                    }\n                                });\n                                labelPoiTypes.forEach((labelPoiType) => {\n                                    if (shapeMap[labelPoiType]) {\n                                        shapeMap[labelPoiType].forEach((item) => {\n                                            ctx.save();\n                                            ctx.beginPath();\n                                            const labelText = that.getPoiContent(labelPoiType, item.poiData);\n                                            const poiOption = that.getPoiOption(labelPoiType, item.poiData);\n                                            filterCtx(ctx, poiOption, false);\n                                            for (let pointIndex = 0; pointIndex < item.points.length; pointIndex++) {\n                                                const labelPoint = that.map.pointToPixel(item.points[pointIndex]);\n                                                ctx.fillText(labelText, labelPoint.x, labelPoint.y);\n                                            }\n                                            ctx.restore();\n                                        });\n                                    }\n                                });\n                            }\n                        }));\n                    }\n\n                }\n            }\n        }\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.panel.hideEmpty && _.isNil(o.value)) && !(this.panel.hideZero && o.value === 0);\n        });\n    }\n\n    onDataSnapshotLoad(snapshotData) {\n        this.onDataReceived(snapshotData);\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target,\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    setNewMapCenter() {\n        this.render();\n    }\n\n    setZoom() {\n        this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n    }\n\n    setStyle() {\n        this.map.setMapStyle({style: this.panel.theme});\n    }\n\n    setAK() {\n        const x = document.body;\n        const s = document.getElementsByTagName('script');\n        const len = s.length;\n        x.removeChild(s[len - 1]);\n        delete this.map;\n        this.render();\n    }\n\n    navigationControl() {\n        if (this.panel.navigation == true) {\n            this.map.addControl(this.navigationSwitch);\n        } else {\n            this.map.removeControl(this.navigationSwitch);\n        }\n    }\n\n    scaleControl() {\n        if (this.panel.scale == true) {\n            this.map.addControl(this.scaleSwitch);\n        } else {\n            this.map.removeControl(this.scaleSwitch);\n        }\n    }\n\n    overviewMapControl() {\n        if (this.panel.overviewMap === true) {\n            this.map.addControl(this.overviewMapSwitch);\n        } else {\n            this.map.removeControl(this.overviewMapSwitch);\n        }\n    }\n\n    mapTypeControl() {\n        if (this.panel.mapType === true) {\n            this.map.addControl(this.mapTypeSwitch);\n        } else {\n            this.map.removeControl(this.mapTypeSwitch);\n        }\n    }\n\n    trafficControl() {\n        if (this.panel.traffic === true) {\n            this.map.addControl(this.trafficSwitch);\n        } else {\n            this.map.removeControl(this.trafficSwitch);\n        }\n    }\n\n    resize() {\n\n    }\n\n    toggleStickyLabels() {\n        console.log(this.panel.stickyLabels);\n    }\n\n    changeLocationData() {\n        if (this.panel.locationData === 'geohash') {\n            this.render();\n        }\n    }\n\n    /* eslint class-methods-use-this: 0 */\n    link(scope, elem, attrs, ctrl) {\n        mapRenderer(scope, elem, attrs, ctrl);\n    }\n\n\n// 如果要调试事件接口，请打开下方屏蔽代码，\n// 在firefox或者chrome下查看调试信息\n\n    // distanceTool.addEventListener('drawend', function (e) {\n    //     console.log('drawend');\n    //     console.log(e.points);\n    //     console.log(e.overlays);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('addpoint', function (e) {\n    //     console.log('addpoint');\n    //     console.log(e.point);\n    //     console.log(e.pixel);\n    //     console.log(e.index);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('removepolyline', function (e) {\n    //     console.log('removepolyline');\n    //     console.log(e);\n    // });\n\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}