{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","MP","panelDefaults","ak","mapCenters","markers","maxDataPoints","theme","lat","lng","initialZoom","valueName","locationData","esMetric","decimals","navigation","scale","overviewMap","mapType","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","series","setJsonValues","seriesHandler","setValues","length","centerOnLastGeoHash","render","splice","markerList","mapCenterLatitude","last","locationLatitude","mapCenterLongitude","locationLongitude","push","addNode","BMap","point","myIcon","Icon","Size","marker","Marker","icon","markerClusterer","BMapLib","MarkerClusterer","enableDragging","scontent","infoWindow","InfoWindow","addEventListener","openInfoWindow","addOverlay","e","setTimeout","clearOverlays","list","i","Point","addMarker","snapshotData","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","parseInt","setMapStyle","style","x","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","console","log","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACQA,sB,kBAAAA,gB;;AACDC,gB;;AACAC,S;;AAEAC,O;;AACAC,iB;;AACAC,mB;;AACEC,Q,mBAAAA,E;;;;;;;;;;;;;;;;;;;;;AAEHC,mB,GAAgB;AACpBC,YAAI,kCADgB;AAEpBC,oBAAY,EAFQ;AAGpBC,iBAAS,EAHW;AAIpBC,uBAAe,CAJK;AAKpBC,eAAO,QALa;AAMpBC,aAAK,MANe;AAOpBC,aAAK,OAPe;AAQpBC,qBAAa,EARO;AASpBC,mBAAW,OATS;AAUpBC,sBAAc,WAVM;AAWpBC,kBAAU,OAXU;AAYpBC,kBAAU,CAZU;AAapBC,oBAAY,IAbQ;AAcpBC,eAAO,IAda;AAepBC,qBAAa,KAfO;AAgBpBC,iBAAS;AAhBW,O;;AAmBDC,kB;;;AACnB,8BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,kIACnCF,MADmC,EAC3BC,SAD2B;;AAGzC,gBAAKE,cAAL,CAAoBD,UAApB;AACAxB,YAAE0B,QAAF,CAAW,MAAKC,KAAhB,EAAuBvB,aAAvB;AACA,gBAAKwB,aAAL,GAAqB,IAAI1B,aAAJ,QAAwBH,GAAxB,CAArB;;AAEA,gBAAK8B,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKI,eAAL,CAAqBF,IAArB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKK,kBAAL,CAAwBH,IAAxB,OAArC;AACA;AAXyC;AAY1C;;;;yCAEcR,U,EAAY;AAC7B;AACI,iBAAKY,UAAL,GAAkB,kBAAlB;AACA,iBAAKC,qBAAL;AACD;;;kDAEuB;AACtB,gBAAI,KAAKD,UAAL,KAAoB,cAAxB,EAAwC;AACtC,mBAAKE,eAAL,GAAuB,YAAvB;AACD,aAFD,MAEO;AACL,mBAAKA,eAAL,GAAuB,EAAvB;AACD;AACF;;;mDAEwBC,M,EAAQ;AAC/B,gBAAI,KAAKC,GAAL,IAAY,CAACD,MAAjB,EAAyB;;AAEzB,gBAAI,KAAKZ,KAAL,CAAWc,oBAAf,EAAqC;AACnC,mBAAKC,SAAL,GAAiB,KAAKf,KAAL,CAAWc,oBAA5B;AACA;AACD;;AAED,gBAAI,KAAKd,KAAL,CAAWb,YAAX,KAA4B,gBAAhC,EAAkD,CAEjD,CAFD,MAEO,IAAI,KAAKa,KAAL,CAAWb,YAAX,KAA4B,eAAhC,EAAiD;AACtD,kBAAI,CAAC,KAAKa,KAAL,CAAWgB,OAAhB,EAAyB;AAE1B,aAHM,MAGA,IAAI,KAAKhB,KAAL,CAAWb,YAAX,KAA4B,OAAhC,EAAyC;AAC9C;;AAED,aAHM,MAGA,IAAI,KAAKa,KAAL,CAAWb,YAAX,KAA4B,SAA5B,IAAyC,KAAKa,KAAL,CAAWb,YAAX,KAA4B,aAAzE,EAAwF,CAE9F;AACF;;;0CAEe8B,G,EAAK;AACnB,iBAAKF,SAAL,GAAiBE,GAAjB;AACA,iBAAKC,OAAL;AACD;;;4CAEiB;AAChB,gBAAI,KAAKL,GAAT,EAAc,OAAO,KAAKA,GAAZ;AACf;;;2CAEgB;AACf,iBAAKM,YAAL,CAAkB,UAAlB,EAA8B,4DAA9B,EAA4F,CAA5F;AACD;;;yCAEcC,Q,EAAU;AACvB,gBAAI,CAACA,QAAL,EAAe;AACf,gBAAI,KAAKC,SAAL,CAAeC,QAAf,IAA2B,KAAKP,SAApC,EAA+C;AAC7C,mBAAKf,KAAL,CAAWc,oBAAX,GAAkC,KAAKC,SAAvC;AACD;AACD,gBAAMQ,OAAO,EAAb;AACA,gBAAI,KAAKvB,KAAL,CAAWb,YAAX,KAA4B,SAAhC,EAA2C;AACzC,mBAAKc,aAAL,CAAmBuB,gBAAnB,CAAoCJ,QAApC,EAA8CG,IAA9C;AACD,aAFD,MAEO,IAAI,KAAKvB,KAAL,CAAWb,YAAX,KAA4B,OAAhC,EAAyC;AAC9C,kBAAMsC,YAAYL,SAASP,GAAT,CAAatC,cAAcmD,YAAd,CAA2BrB,IAA3B,CAAgC,IAAhC,CAAb,CAAlB;AACA,mBAAKJ,aAAL,CAAmB0B,cAAnB,CAAkCF,SAAlC,EAA6CF,IAA7C;AACD,aAHM,MAGA,IAAI,KAAKvB,KAAL,CAAWb,YAAX,KAA4B,aAAhC,EAA+C;AACpD,mBAAKyC,MAAL,GAAcR,QAAd;AACA,mBAAKnB,aAAL,CAAmB4B,aAAnB,CAAiCN,IAAjC;AACD,aAHM,MAGA;AACL,mBAAKK,MAAL,GAAcR,SAASP,GAAT,CAAa,KAAKiB,aAAL,CAAmBzB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACA,mBAAKJ,aAAL,CAAmB8B,SAAnB,CAA6BR,IAA7B;AACD;;AAED,iBAAKA,IAAL,GAAYA,IAAZ;AACA,gBAAI,KAAKA,IAAL,CAAUS,MAAd,EAAsB;AACpB,mBAAKC,mBAAL;AACD,aAFD,MAEO;AACL,mBAAKC,MAAL;AACD;AACF;;;gDAEqB;AACpB,iBAAKlC,KAAL,CAAWrB,UAAX,CAAsBwD,MAAtB,CAA6B,CAA7B,EAAgC,KAAKnC,KAAL,CAAWrB,UAAX,CAAsBqD,MAAtD;AACA,iBAAKhC,KAAL,CAAWpB,OAAX,CAAmBuD,MAAnB,CAA0B,CAA1B,EAA6B,KAAKnC,KAAL,CAAWpB,OAAX,CAAmBoD,MAAhD;AACA,gBAAMI,aAAa,EAAnB;AACAA,uBAAWC,iBAAX,GAA+BhE,EAAEiE,IAAF,CAAO,KAAKf,IAAZ,EAAkBgB,gBAAjD;AACAH,uBAAWI,kBAAX,GAAgCnE,EAAEiE,IAAF,CAAO,KAAKf,IAAZ,EAAkBkB,iBAAlD;AACA,iBAAKzC,KAAL,CAAWrB,UAAX,CAAsB+D,IAAtB,CAA2BN,UAA3B;;AAEA,gBAAG,KAAKvB,GAAR,EAAY;AACV,mBAAK8B,OAAL,CAAa,KAAKC,IAAlB;AACD,aAFD,MAEK;AACH,mBAAKV,MAAL;AACD;AACD;AACD;;;oCAESW,K,EAAMD,I,EAAM;AACpB,gBAAME,SAAS,IAAIF,KAAKG,IAAT,CAAc,4DAAd,EAA4E,IAAIH,KAAKI,IAAT,CAAc,EAAd,EAAkB,EAAlB,CAA5E,CAAf;AACA,gBAAMC,SAAS,IAAIL,KAAKM,MAAT,CAAgBL,KAAhB,EAAuB,EAAEM,MAAML,MAAR,EAAvB,CAAf;AACA,iBAAK9C,KAAL,CAAWpB,OAAX,CAAmB8D,IAAnB,CAAwBO,MAAxB;AACA,gBAAMG,kBAAkB,IAAIC,QAAQC,eAAZ,CAA4B,KAAKzC,GAAjC,EAAsC;AAC5DjC,uBAAS,KAAKoB,KAAL,CAAWpB;AADwC,aAAtC,CAAxB;AAGAqE,mBAAOM,cAAP;;AAEA,gBAAIC,WAAW,EAAf;AACAA,wBAAY,kGAAZ;AACAA,wBAAY,uIAAZ;AACAA,wBAAY,gEAAZ;AACAA,wBAAY,gFAAZ;AACAA,wBAAY,8CAAZ;AACAA,wBAAY,mFAAZ;;AAEA,gBAAMC,aAAa,IAAIb,KAAKc,UAAT,CAAoBF,QAApB,CAAnB,CAjBoB,CAiB8B;AAClDP,mBAAOU,gBAAP,CAAwB,OAAxB,EAAiC,YAAW;AAC1C,mBAAK9C,GAAL,CAAS+C,cAAT,CAAwBH,UAAxB,EAAoCZ,KAApC,EAD0C,CACE;AAC7C,aAFD;;AAIA,iBAAKhC,GAAL,CAASgD,UAAT,CAAoBZ,MAApB;AACAA,mBAAOU,gBAAP,CAAwB,SAAxB,EAAmC,UAASG,CAAT,EAAY;AAC7C;AACD,aAFD;AAGD;;;kCAEOlB,I,EAAM;AAAA;;AACZmB,uBAAW,YAAM;AACf,qBAAKlD,GAAL,CAASmD,aAAT;AACA,kBAAMC,OAAO,OAAKjE,KAAL,CAAWrB,UAAxB;AACA,mBAAK,IAAMuF,CAAX,IAAgBD,IAAhB,EAAsB;AACpB,oBAAMpB,QAAQ,IAAID,KAAKuB,KAAT,CAAeF,KAAKC,CAAL,EAAQ1B,kBAAvB,EAA2CyB,KAAKC,CAAL,EAAQ7B,iBAAnD,CAAd;AACA,uBAAK+B,SAAL,CAAevB,KAAf,EAAsBD,IAAtB;AACD;AACF,aAPD,EAOG,GAPH;AAQD;;;6CAEkByB,Y,EAAc;AAC/B,iBAAK/D,cAAL,CAAoB+D,YAApB;AACD;;;wCAEaC,U,EAAY;AACxB,gBAAM1C,SAAS,IAAIzD,UAAJ,CAAe;AAC5BoG,0BAAYD,WAAWC,UADK;AAE5BC,qBAAOF,WAAWG;AAFU,aAAf,CAAf;;AAKA7C,mBAAO8C,SAAP,GAAmB9C,OAAO+C,YAAP,CAAoB,KAAK3E,KAAL,CAAW4E,aAA/B,CAAnB;AACA,mBAAOhD,MAAP;AACD;;;4CAEiB;AAChB,iBAAKM,MAAL;AACD;;;oCAES;AACR,iBAAKrB,GAAL,CAASgE,OAAT,CAAiBC,SAAS,KAAK9E,KAAL,CAAWf,WAApB,EAAiC,EAAjC,KAAwC,CAAzD;AACD;;;qCAEU;AACX,iBAAK4B,GAAL,CAASkE,WAAT,CAAqB,EAAEC,OAAO,KAAKhF,KAAL,CAAWlB,KAApB,EAArB;AACA;;;kCAEQ;AACN,gBAAImG,IAAIC,SAASC,IAAjB;AACA,gBAAIC,IAAIF,SAASG,oBAAT,CAA8B,QAA9B,CAAR;AACA,gBAAIC,MAAMF,EAAEpD,MAAZ;AACAiD,cAAEM,WAAF,CAAcH,EAAEE,MAAM,CAAR,CAAd;AACA,mBAAO,KAAKzE,GAAZ;AACA,iBAAKqB,MAAL;AACF;;;8CAEoB;AAClB,gBAAI,KAAKlC,KAAL,CAAWV,UAAX,IAAyB,IAA7B,EAAmC;AACjC,mBAAKuB,GAAL,CAAS2E,UAAT,CAAoB,KAAKC,gBAAzB;AACD,aAFD,MAEO;AACL,mBAAK5E,GAAL,CAAS6E,aAAT,CAAuB,KAAKD,gBAA5B;AACD;AACF;;;yCAEc;AACb,gBAAI,KAAKzF,KAAL,CAAWT,KAAX,IAAoB,IAAxB,EAA8B;AAC5B,mBAAKsB,GAAL,CAAS2E,UAAT,CAAoB,KAAKG,WAAzB;AACD,aAFD,MAEO;AACL,mBAAK9E,GAAL,CAAS6E,aAAT,CAAuB,KAAKC,WAA5B;AACD;AACF;;;+CAEoB;AACnB,gBAAI,KAAK3F,KAAL,CAAWR,WAAX,IAA0B,IAA9B,EAAoC;AAClC,mBAAKqB,GAAL,CAAS2E,UAAT,CAAoB,KAAKI,iBAAzB;AACD,aAFD,MAEO;AACL,mBAAK/E,GAAL,CAAS6E,aAAT,CAAuB,KAAKE,iBAA5B;AACD;AACF;;;2CAEgB;AACf,gBAAI,KAAK5F,KAAL,CAAWP,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,mBAAKoB,GAAL,CAAS2E,UAAT,CAAoB,KAAKK,aAAzB;AACD,aAFD,MAEO;AACL,mBAAKhF,GAAL,CAAS6E,aAAT,CAAuB,KAAKG,aAA5B;AACD;AACF;;;mCAEQ,CAER;;;+CAEoB;AACnBC,oBAAQC,GAAR,CAAY,KAAK/F,KAAL,CAAWgG,YAAvB;AACD;;;+CAEoB;AACnB,gBAAI,KAAKhG,KAAL,CAAWb,YAAX,KAA4B,SAAhC,EAA2C;AACzC,mBAAK+C,MAAL;AACD;AACF;;;+BAGI+D,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7B9H,wBAAY2H,KAAZ,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,IAAhC;AACD;;;;QArOuClI,gB;;yBAArBwB,Y;;AAwOrBA,mBAAa2G,WAAb,GAA2B,aAA3B","file":"baidumap_ctrl.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\nimport { MP } from \"./libs/baidumap.js\";  \n\nconst panelDefaults = {\n  ak: \"4AWvSkHwSEcX8nwS0bZBcFZTDw70NzZZ\",\n  mapCenters: [],\n  markers: [],\n  maxDataPoints: 1,\n  theme: \"normal\",\n  lat: 39.915,\n  lng: 116.404,\n  initialZoom: 11,\n  valueName: \"total\",\n  locationData: \"countries\",\n  esMetric: \"Count\",\n  decimals: 0,\n  navigation: true,\n  scale: true,\n  overviewMap: false,\n  mapType: true\n};\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, contextSrv) {\n    super($scope, $injector);\n\n    this.setMapProvider(contextSrv);\n    _.defaults(this.panel, panelDefaults);\n    this.dataFormatter = new DataFormatter(this, kbn);\n    \n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    //this.loadLocationDataFromFile();\n  }\n\n  setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n    this.tileServer = 'CartoDB Positron';\n    this.setMapSaturationClass();\n  }\n\n  setMapSaturationClass() {\n    if (this.tileServer === 'CartoDB Dark') {\n      this.saturationClass = 'map-darken';\n    } else {\n      this.saturationClass = '';\n    }\n  }\n\n  loadLocationDataFromFile(reload) {\n    if (this.map && !reload) return;\n\n    if (this.panel.snapshotLocationData) {\n      this.locations = this.panel.snapshotLocationData;\n      return;\n    }\n\n    if (this.panel.locationData === \"jsonp endpoint\") {\n\n    } else if (this.panel.locationData === \"json endpoint\") {\n      if (!this.panel.jsonUrl) return;\n\n    } else if (this.panel.locationData === \"table\") {\n      // .. Do nothing\n\n    } else if (this.panel.locationData !== \"geohash\" && this.panel.locationData !== \"json result\") {\n\n    }\n  }\n\n  reloadLocations(res) {\n    this.locations = res;\n    this.refresh();\n  }\n\n  onPanelTeardown() {\n    if (this.map) delete this.map;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    if (!dataList) return;\n    if (this.dashboard.snapshot && this.locations) {\n      this.panel.snapshotLocationData = this.locations;\n    }\n    const data = [];\n    if (this.panel.locationData === \"geohash\") {\n      this.dataFormatter.setGeohashValues(dataList, data);\n    } else if (this.panel.locationData === \"table\") {\n      const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n      this.dataFormatter.setTableValues(tableData, data);\n    } else if (this.panel.locationData === \"json result\") {\n      this.series = dataList;\n      this.dataFormatter.setJsonValues(data);\n    } else {\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.dataFormatter.setValues(data);\n    }\n\n    this.data = data;\n    if (this.data.length) {\n      this.centerOnLastGeoHash();\n    } else {\n      this.render();\n    }\n  }\n\n  centerOnLastGeoHash() {\n    this.panel.mapCenters.splice(0, this.panel.mapCenters.length);\n    this.panel.markers.splice(0, this.panel.markers.length);\n    const markerList = {};\n    markerList.mapCenterLatitude = _.last(this.data).locationLatitude;\n    markerList.mapCenterLongitude = _.last(this.data).locationLongitude;\n    this.panel.mapCenters.push(markerList);\n\n    if(this.map){\n      this.addNode(this.BMap);\n    }else{\n      this.render();\n    }\n    //this.setNewMapCenter();\n  }\n\n  addMarker(point,BMap) {\n    const myIcon = new BMap.Icon(\"public/plugins/grafana-baidumap-panel/images/pins6-poi.png\", new BMap.Size(30, 30));\n    const marker = new BMap.Marker(point, { icon: myIcon });\n    this.panel.markers.push(marker);\n    const markerClusterer = new BMapLib.MarkerClusterer(this.map, {\n      markers: this.panel.markers\n    });\n    marker.enableDragging();\n\n    let scontent = \"\";\n    scontent += '<a href=\"\"><div class=\"infobox\" id=\"infobox\"><div class=\"infobox-content\" style=\"display:block\">';\n    scontent += '<div class=\"infobox-header\"><div class=\"infobox-header-icon\"><img src=\"public/plugins/grafana-baidumap-panel/images/pins6.png\"></div>';\n    scontent += '<div class=\"infobox-header-name\"><p>ffffff100000053c</p></div>';\n    scontent += '<div class=\"infobox-header-type\" style=\"min-width:250px\"><p>井盖</p></div></div>';\n    scontent += '<div class=\"infobox-footer\">在线时间：10分钟前</div>';\n    scontent += '<div class=\"infobox-footer-right\"></div></div><div class=\"arrow\"></div></div></a>';\n\n    const infoWindow = new BMap.InfoWindow(scontent); // 创建信息窗口对象\n    marker.addEventListener(\"click\", function() {\n      this.map.openInfoWindow(infoWindow, point); //开启信息窗口\n    });\n\n    this.map.addOverlay(marker);\n    marker.addEventListener(\"dragend\", function(e) {\n      //alert(\"当前位置：\" + e.point.lng + \", \" + e.point.lat);\n    });\n  }\n\n  addNode(BMap) {    \n    setTimeout(() => {\n      this.map.clearOverlays();\n      const list = this.panel.mapCenters;\n      for (const i in list) {\n        const point = new BMap.Point(list[i].mapCenterLongitude, list[i].mapCenterLatitude);\n        this.addMarker(point, BMap);\n      }\n    }, 500);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    \n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n  \n  setNewMapCenter() {\n    this.render();\n  }\n\n  setZoom() {\n    this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n  }\n\n  setStyle() {\n\t\tthis.map.setMapStyle({ style: this.panel.theme });\n\t}\n\n  setAK() {\n    let x = document.body;\n    let s = document.getElementsByTagName(\"script\");\n    let len = s.length;\n    x.removeChild(s[len - 1]);\n    delete this.map;\n    this.render();\n\t}\n\n  navigationControl() {\n    if (this.panel.navigation == true) {\n      this.map.addControl(this.navigationSwitch);\n    } else {\n      this.map.removeControl(this.navigationSwitch);\n    }\n  }\n\n  scaleControl() {\n    if (this.panel.scale == true) {\n      this.map.addControl(this.scaleSwitch);\n    } else {\n      this.map.removeControl(this.scaleSwitch);\n    }\n  }\n\n  overviewMapControl() {\n    if (this.panel.overviewMap == true) {\n      this.map.addControl(this.overviewMapSwitch);\n    } else {\n      this.map.removeControl(this.overviewMapSwitch);\n    }\n  }\n\n  mapTypeControl() {\n    if (this.panel.mapType == true) {\n      this.map.addControl(this.mapTypeSwitch);\n    } else {\n      this.map.removeControl(this.mapTypeSwitch);\n    }\n  }\n\n  resize() {\n    \n  }\n\n  toggleStickyLabels() {\n    console.log(this.panel.stickyLabels);\n  }\n\n  changeLocationData() {\n    if (this.panel.locationData === 'geohash') {\n      this.render();\n    }\n  }\n\n/* eslint class-methods-use-this: 0 */\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}