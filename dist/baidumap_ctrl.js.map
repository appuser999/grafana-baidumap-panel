{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["getColor","orginBili","alpha","bili","one","r","g","b","yellowValue","fullRedValue","darkRedWeight","parseInt","getFilterColor","originOption","styleOption","forEach","keyName","Object","assign","filterCtx","ctx","usePolyOption","sourceOption","getDefaultPolyOption","keyMap","sourceName","targetName","keyValue","getDotRect","mp","lng","lat","squareSize","isCenterPoint","standardLen","xScale","Math","cos","PI","lngDelta","latDelta","pixel","pointToPixel","window","BMap","Point","pixel2","x","y","w","h","strokeWeight","strokeOpacity","strokeColor","fillColor","fillOpacity","isPointInCircle","checkPixel","circlePixel","circleRadius","isPointInRect","sourceCheckRect","checkRect","isPointInPoly","polyPoints","inside","i","j","length","xi","yi","xj","yj","intersect","MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","decodeGeoHash","panelDefaults","ak","maxDataPoints","theme","initialZoom","valueName","locationData","gpsType","esMetric","decimals","navigation","scale","hideEmpty","overviewMap","hideZero","mapType","traffic","clusterPoint","globalConfig","enableMapClick","typeName","lngName","latName","posName","geohashName","configName","contentName","circleName","squareName","polygonName","polylineName","pointName","labelName","bdLabelName","bdPolylineName","bdPolygonName","bdCircleName","bdMarkerName","bdRidingRouteName","bdWalkingRouteName","bdDrivingRouteName","bdHeatRouteName","centerName","maskColor","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","markers","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","poiType","getPoiOption","poiConfig","defaultValue","typeOption","getPoiTypeConfig","poiOption","getPoiConfig","poiItem","configKey","extJson","JSON","parse","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","tableHandlers","datas","splice","addNode","render","clearOverlays","point","defaultContent","that","e","clickPoint","poiContent","getPoiContent","infoWindow","InfoWindow","openInfoWindow","markerOption","iconUrl","Number","isInteger","icon","Icon","Size","offset","imageOffset","imageSize","anchor","marker","Marker","pointLabel","label","Label","setLabel","push","enableDragging","addEventListener","getPoiInfoWindowHandler","addOverlay","setAnimation","BMAP_ANIMATION_BOUNCE","alert","poiList","clickHandler","console","log","getMapSourceId","sourceGps","sourceGpsId","translateOne","poiIndex","gpsIndex","gps","rawLength","setTimeout","translateCallback","sourcePointList","callbackList","myPoiIndex","myGpsIndex","myGps","translatedData","translatedItems","sort","a","translateIndex","pointTypeName","translatedItem","poiIndexKey","pointItem","shapeMap","shapeList","points","poiData","pointArray","v","pointCollection","PointCollection","getPoiTypeOption","heatPoiType","heatShapeList","heatmapOverlay","BMapLib","HeatmapOverlay","radius","count","setDataSet","max","labelTypeName","labelArray","labelText","labelItem","position","enableMassClear","setStyle","setTitle","markerTypeName","markerArray","addMarker","MarkerClusterer","poiTypeMap","item","pointIndex","driving","renderOptions","autoViewport","search","centerPointTotal","centerPoint","shape","labelPoiTypes","linePoiTypes","dotPoiTypes","canvasTypes","canvasLayerUpdater","canvasLayer","canvas","getContext","matchItems","save","clearRect","width","height","beginPath","fillStyle","fillRect","closePath","restore","isCircle","isPoint","layerItem","size","posRect","parseFloat","arc","rect","stroke","fill","startPoint","moveTo","linePoint","lineTo","globalAlpha","labelPoint","fillText","canvasLayerPointChecker","checkPoint","reverse","p","some","canvasType","CanvasLayer","paneName","zIndex","update","event","filter","matchItem","gpsItem","longitude","latitude","gpsList","split","gpsStr","items","trim","convertor","Convertor","groupSize","groupIndex","pointList","translate","result","status","index","error","o","isNil","value","snapshotData","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","setMapStyle","style","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","trafficSwitch","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"baidumap_ctrl.js","sourcesContent":["/* eslint-disable eqeqeq,id-length,no-inner-declarations,no-plusplus,no-mixed-operators,no-continue,no-nested-ternary */\n/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\n\nimport decodeGeoHash from './geohash';\n\nconst panelDefaults = {\n    ak: 'QKCqsdHBbGxBnNbvUwWdUEBjonk7jUj6',\n    maxDataPoints: 1,\n    theme: 'normal',\n    lat: 39.968539,\n    lng: 116.497856,\n    initialZoom: 14,\n    valueName: 'current',\n    locationData: 'json result',\n    gpsType: '百度坐标系',\n    esMetric: 'Count',\n    decimals: 0,\n    navigation: true,\n    scale: true,\n    hideEmpty: false,\n    overviewMap: false,\n    hideZero: false,\n    mapType: false,\n    traffic: false,\n    clusterPoint: false,\n    globalConfig: '',\n    enableMapClick: false,\n\n    typeName: 'type',\n    lngName: 'longitude',\n    latName: 'latitude',\n    posName: 'pos',\n    geohashName: 'geohash',\n    configName: 'config',\n    contentName: 'content',\n\n    circleName: 'circle',\n    squareName: 'square',\n    polygonName: 'polygon',\n    polylineName: 'polyline',\n    pointName: 'point',\n    labelName: 'label',\n    bdLabelName: 'Label',\n    bdPolylineName: 'Polyline',\n    bdPolygonName: 'Polygon',\n    bdCircleName: 'Circle',\n    bdMarkerName: 'Marker',\n    bdRidingRouteName: 'RidingRoute',\n    bdWalkingRouteName: 'WalkingRoute',\n    bdDrivingRouteName: 'DrivingRoute',\n    bdHeatRouteName: 'Heat',\n    centerName: 'center',\n    maskColor: ''\n};\n\n\nfunction getColor(orginBili, alpha) {\n    if ((typeof orginBili) !== 'number') {\n        return orginBili;\n    }\n    const bili = orginBili > 100 ? 100 : orginBili;\n    // 百分之一 = (单色值范围) / 50;  单颜色的变化范围只在50%之内\n    const one = (255 + 255) / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    const yellowValue = 50;\n    const fullRedValue = 95;\n    const darkRedWeight = 0.6;\n\n    if (bili <= yellowValue) {\n        // 比例小于yellowValue的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\n        r = one * bili / yellowValue * 50;\n        g = 255;\n    } else if (bili > yellowValue && bili <= fullRedValue) {\n        // 比例大于yellowValue的时候绿色是越来越少的,直到fullRedValue 变为纯红\n        g = 255 - ((bili - yellowValue) / (fullRedValue - yellowValue) * 50 * one);\n        r = 255;\n    } else {\n        // 比例大于fullRedValue 开始转为暗红\n        g = 0;\n        r = 255 * (1 - darkRedWeight * (bili - fullRedValue) / (100 - fullRedValue));\n    }\n    r = parseInt(r, 10);// 取整\n    g = parseInt(g, 10);// 取整\n    b = parseInt(b, 10);// 取整\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n}\n\nfunction getFilterColor(originOption) {\n    const styleOption = {};\n    ['fillColor', 'strokeColor'].forEach((keyName) => {\n        if (originOption[keyName]) {\n            styleOption[keyName] = getColor(originOption[keyName], 0.5);\n        }\n    });\n    return Object.assign({}, originOption, styleOption);\n}\n\nfunction filterCtx(ctx, originOption, usePolyOption = true) {\n    const sourceOption = Object.assign(usePolyOption ? getDefaultPolyOption() : {}, originOption);\n    const styleOption = getFilterColor(sourceOption);\n    [\n        ['strokeWeight', 'lineWidth'],\n        ['fillColor', 'fillStyle'],\n        ['strokeColor', 'strokeStyle'],\n        ['strokeOpacity', 'globalAlpha'],\n    ].forEach((keyMap) => {\n        const [sourceName, targetName] = keyMap;\n        const keyValue = styleOption[sourceName];\n        delete styleOption[sourceName];\n        styleOption[targetName] = keyValue;\n    });\n    Object.assign(ctx, styleOption);\n}\n\n// 获取色块对应的矩形相对于地图的像素值\nfunction getDotRect(mp, lng, lat, squareSize = 20, isCenterPoint = true) {\n    const standardLen = 111700;\n    const xScale = Math.cos(lat * Math.PI / 180);\n    const lngDelta = squareSize / (standardLen * xScale);\n    const latDelta = squareSize / (standardLen);\n\n    const pixel = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng - lngDelta / 2, lat - latDelta / 2) : new window.BMap.Point(lng, lat));\n    const pixel2 = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng + lngDelta / 2, lat + latDelta / 2) : new window.BMap.Point(lng + lngDelta, lat + latDelta));\n    return {\n        x: pixel.x,\n        y: pixel.y,\n        w: pixel2.x - pixel.x,\n        h: pixel2.y - pixel.y,\n    };\n}\n\n\nfunction getDefaultPolyOption() {\n    return {\n        strokeWeight: 3,\n        strokeOpacity: 0.6,\n        strokeColor: 'blue',\n        fillColor: 'red',\n        fillOpacity: 0.4\n    };\n}\n\nfunction isPointInCircle(checkPixel, circlePixel, circleRadius) {\n    return (checkPixel.x - circlePixel.x) * (checkPixel.x - circlePixel.x)\n        + (checkPixel.y - circlePixel.y) * (checkPixel.y - circlePixel.y)\n        <= circleRadius * circleRadius\n        ;\n}\n\nfunction isPointInRect(checkPixel, sourceCheckRect) {\n    const checkRect = Object.assign({}, sourceCheckRect);\n    if (checkRect.w < 0) {\n        checkRect.x += checkRect.w;\n        checkRect.w *= -1;\n    }\n    if (checkRect.h < 0) {\n        checkRect.y += checkRect.h;\n        checkRect.h *= -1;\n    }\n    return checkPixel.x >= checkRect.x\n        && checkPixel.x <= checkRect.x + checkRect.w\n        && checkPixel.y >= checkRect.y\n        && checkPixel.y <= checkRect.y + checkRect.h;\n}\n\nfunction isPointInPoly(checkPixel, polyPoints) {\n    const x = checkPixel.x;\n    const y = checkPixel.y;\n\n    let inside = false;\n    for (let i = 0, j = polyPoints.length - 1; i < polyPoints.length; j = i++) {\n        const xi = polyPoints[i].x;\n        const yi = polyPoints[i].y;\n        const xj = polyPoints[j].x;\n        const yj = polyPoints[j].y;\n\n        const intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n    return inside;\n}\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, contextSrv) {\n        super($scope, $injector);\n        this.setMapProvider(contextSrv);\n        _.defaults(this.panel, panelDefaults);\n\n        this.dataFormatter = new DataFormatter(this, kbn);\n        this.markers = [];\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n        // this.loadLocationDataFromFile();\n    }\n\n    getPoiTypeOption(poiType) {\n        return this.getPoiOption(poiType, null);\n    }\n\n    getPoiOption(poiType, poiConfig, defaultValue = {}) {\n        const configName = 'option';\n        const typeOption = this.getPoiTypeConfig(poiType, configName, {});\n        const poiOption = this.getPoiConfig(poiType, poiConfig, configName, {});\n        return Object.assign(defaultValue, typeOption, poiOption);\n    }\n\n    getPoiTypeConfig(poiType, configName, defaultValue = '') {\n        return this.getPoiConfig(poiType, null, configName, defaultValue);\n    }\n\n    getPoiContent(poiType, poiItem, defaultValue = '') {\n        const contentName = this.panel.contentName;\n        if (poiItem && contentName in poiItem && poiItem[contentName].length > 0) {\n            return poiItem[contentName];\n        }\n        return this.getPoiConfig(poiType, poiItem, contentName, defaultValue);\n    }\n\n    getPoiConfig(poiType, poiItem, configKey, defaultValue = '') {\n        if (!poiType) {\n            return defaultValue;\n        }\n        const configName = this.panel.configName;\n        if (poiItem && configName in poiItem && poiItem[configName].length > 0) {\n            const extJson = JSON.parse(poiItem[configName]);\n            if (configKey in extJson) {\n                return extJson[configKey];\n            }\n        }\n        if (this.panel.globalConfig && this.panel.globalConfig.length > 0) {\n            const globalConfig = JSON.parse(this.panel.globalConfig);\n            if (poiType in globalConfig && configKey in globalConfig[poiType]) {\n                return globalConfig[poiType][configKey];\n            }\n        }\n        return defaultValue;\n    }\n\n    setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        this.tileServer = 'CartoDB Positron';\n        this.setMapSaturationClass();\n    }\n\n    setMapSaturationClass() {\n        if (this.tileServer === 'CartoDB Dark') {\n            this.saturationClass = 'map-darken';\n        } else {\n            this.saturationClass = '';\n        }\n    }\n\n    loadLocationDataFromFile(reload) {\n        if (this.map && !reload) return;\n\n        if (this.panel.snapshotLocationData) {\n            this.locations = this.panel.snapshotLocationData;\n            return;\n        }\n\n        if (this.panel.locationData === 'jsonp endpoint') {\n\n        } else if (this.panel.locationData === 'json endpoint') {\n            if (!this.panel.jsonUrl) return;\n        } else if (this.panel.locationData === 'table') {\n            // .. Do nothing\n\n        } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n\n        }\n    }\n\n    reloadLocations(res) {\n        this.locations = res;\n        this.refresh();\n    }\n\n    onPanelTeardown() {\n        if (this.map) delete this.map;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList) return;\n        if (this.dashboard.snapshot && this.locations) {\n            this.panel.snapshotLocationData = this.locations;\n        }\n\n        const data = [];\n        if (this.panel.locationData === 'geohash') {\n            this.dataFormatter.setGeohashValues(dataList, data);\n        } else if (this.panel.locationData === 'table') {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else if (this.panel.locationData === 'json result') {\n            const tableData = dataList.map(DataFormatter.tableHandlers.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        }\n        // const datas = this.filterEmptyAndZeroValues(data);\n\n        const datas = data;\n        if (typeof this.data === 'object') this.data.splice(0, this.data.length);\n        this.markers.splice(0, this.markers.length);\n        if (datas.length) {\n            this.data = datas;\n            this.map ? this.addNode(this.BMap) : this.render();\n        } else {\n            if (this.map) this.map.clearOverlays();\n            this.render();\n        }\n    }\n\n    getPoiInfoWindowHandler(poiType, point, poiItem, defaultContent = '') {\n        const that = this;\n        return (e) => {\n            let clickPoint = point;\n            if (!clickPoint) {\n                clickPoint = e.point;\n            }\n            const poiContent = that.getPoiContent(poiType, poiItem, defaultContent);\n            if (!poiContent) {\n                return;\n            }\n            const infoWindow = new BMap.InfoWindow(poiContent,\n                that.getPoiConfig(poiType, poiItem, 'contentOption', {\n                    'title': that.getPoiConfig(poiType, poiItem, 'title', clickPoint.lng + '|' + clickPoint.lat)\n                })\n            ); // 创建信息窗口对象\n            that.map.openInfoWindow(infoWindow, clickPoint);\n        };\n    }\n\n    addMarker(poiType, point, BMap, data) {\n\n        // public/plugins/grafana-baidumap-panel/images/bike.png\n        const markerOption = this.getPoiOption(poiType, data);\n        const iconUrl = this.getPoiConfig(poiType, data, 'icon', '');\n        if (Number.isInteger(iconUrl)) {\n            markerOption.icon = new BMap.Icon('http://api.map.baidu.com/img/markers.png', new BMap.Size(23, 25), {\n                offset: new BMap.Size(10, 25), // 指定定位位置\n                imageOffset: new BMap.Size(0, 25 * (10 - (iconUrl % 10)) - 10 * 25) // 设置图片偏移\n            });\n        } else if (iconUrl.length > 0) {\n            markerOption.icon = new BMap.Icon(iconUrl, new window.BMap.Size(24, 28), {\n                imageSize: new window.BMap.Size(24, 28),\n                anchor: new window.BMap.Size(12, 28)\n            });\n        }\n        const marker = new BMap.Marker(point, markerOption);\n        const pointLabel = this.getPoiConfig(poiType, data, 'label', '');\n        if (pointLabel.length > 0) {\n            const label = new BMap.Label(pointLabel, {offset: new BMap.Size(20, -10)});\n            marker.setLabel(label);\n        }\n        this.markers.push(marker);\n\n        // this.map.setViewport(pointArray);\n        if (this.getPoiConfig(poiType, data, 'enableDragging', false)) {\n            marker.enableDragging();\n        }\n        marker.addEventListener('click', this.getPoiInfoWindowHandler(poiType, point, data));\n\n        this.map.addOverlay(marker);\n        if (this.getPoiConfig(poiType, data, 'animation', false)) {\n            marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\n        }\n        marker.addEventListener('dragend', function (e) {\n            alert('当前位置：' + e.point.lng + ', ' + e.point.lat);\n        });\n    }\n\n    addNode(BMap) {\n        const that = this;\n        const poiList = this.data;\n        this.map.clearOverlays();\n        this.clickHandler = [];\n        console.log(poiList);\n        if (poiList) {\n            const shapeMap = [];\n            const sourcePointList = [];\n            const callbackList = [];\n\n            let rawLength = 0;\n            const translatedItems = [];\n\n            for (let i = 0; i < poiList.length; i++) {\n                const poiIndex = i;\n                setTimeout(function () {\n                    if (poiList[poiIndex] && poiList[poiIndex][that.panel.lngName]\n                        && poiList[poiIndex][that.panel.latName]\n                        && poiList[poiIndex][that.panel.lngName] > 0\n                        && poiList[poiIndex][that.panel.latName] > 0\n                    ) {\n                        const gpsItem = Object.assign({}, poiList[poiIndex]);\n                        gpsItem.lng = parseFloat(poiList[poiIndex][that.panel.lngName]);\n                        gpsItem.lat = parseFloat(poiList[poiIndex][that.panel.latName]);\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.geohashName] && poiList[poiIndex][that.panel.geohashName].length > 0) {\n                        const {longitude: lng, latitude: lat} = decodeGeoHash(poiList[poiIndex][that.panel.geohashName]);\n                        const gpsItem = Object.assign({}, poiList[poiIndex], {lng, lat});\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.posName] && poiList[poiIndex][that.panel.posName].length > 0) {\n                        const gpsList = poiList[poiIndex][that.panel.posName].split(';');\n                        for (let gpsIndex = 0; gpsIndex < gpsList.length; gpsIndex++) {\n                            const gpsStr = gpsList[gpsIndex];\n                            let items = gpsStr.split('|');\n                            if (items.length === 1) {\n                                items = gpsStr.split(',');\n                            }\n                            const [lng, lat] = items;\n                            const gpsItem = Object.assign({}, poiList[poiIndex]);\n                            gpsItem.lng = parseFloat(lng.trim());\n                            gpsItem.lat = parseFloat(lat.trim());\n                            translateOne(poiIndex, gpsIndex, gpsItem, BMap);\n                        }\n                    }\n                    if (sourcePointList.length > 0) {\n                        const convertor = new BMap.Convertor();\n                        const groupSize = 10;\n                        for (let groupIndex = 0; groupIndex < sourcePointList.length; groupIndex += groupSize) {\n                            const pointList = [];\n                            for (let pointIndex = 0; pointIndex < groupSize && pointIndex + groupIndex < sourcePointList.length; pointIndex++) {\n                                pointList.push(sourcePointList[groupIndex + pointIndex]);\n                            }\n                            convertor.translate(pointList, getMapSourceId(), 5, (result) => {\n                                if (result.status === 0) {\n                                    for (let index = 0; index < result.points.length; index++) {\n                                        callbackList[groupIndex + index](result.points[index]);\n                                    }\n                                } else {\n                                    console.error('gps translate error', pointList);\n                                }\n                            });\n                        }\n                    }\n                }, 10);\n            }\n\n            function getMapSourceId() {\n                const sourceGps = that.panel.gpsType;\n                let sourceGpsId = 5;\n                if (sourceGps === 'WGS84') {\n                    sourceGpsId = 1;\n                } else if (sourceGps === 'GCJ02') {\n                    sourceGpsId = 3;\n                }\n                return sourceGpsId;\n            }\n\n            function translateOne(poiIndex, gpsIndex, gps) {\n                rawLength += 1;\n                // 转换坐标\n                const sourceGpsId = getMapSourceId();\n                if (sourceGpsId === 5) {\n                    setTimeout(function () {\n                        translateCallback(poiIndex, gpsIndex, gps, {lng: gps.lng, lat: gps.lat});\n                    }, 1);\n                } else {\n                    const point = new BMap.Point(gps.lng, gps.lat);\n                    sourcePointList.push(point);\n                    callbackList.push(translateCallback.bind(this, poiIndex, gpsIndex, gps));\n                }\n            }\n\n            function translateCallback(myPoiIndex, myGpsIndex, myGps, translatedData) {\n                const {lng, lat} = translatedData;\n                translatedItems.push({\n                    poiIndex: myPoiIndex,\n                    gpsIndex: myGpsIndex,\n                    point: new BMap.Point(lng, lat),\n                    gps: myGps,\n                });\n\n                if (translatedItems.length === rawLength) {\n                    translatedItems.sort(function (a, b) {\n                        return ((a.poiIndex - b.poiIndex) * 1000000) + (a.gpsIndex - b.gpsIndex);\n                    });\n                    for (let translateIndex = 0; translateIndex < translatedItems.length; translateIndex++) {\n                        const pointTypeName = that.panel.pointName;\n\n                        const translatedItem = translatedItems[translateIndex];\n                        const poiType = translatedItem.gps[that.panel.typeName] || pointTypeName;\n\n                        const poiIndexKey = 'key_' + translatedItem.poiIndex;\n                        const pointItem = translatedItem.point;\n                        if (!(poiType in shapeMap)) {\n                            shapeMap[poiType] = [];\n                        }\n                        const shapeList = shapeMap[poiType];\n                        if (shapeList.length > 0 && shapeList[shapeList.length - 1].poiIndexKey === poiIndexKey) {\n                            shapeList[shapeList.length - 1].points.push(pointItem);\n                        } else {\n                            shapeList.push({\n                                poiIndexKey: poiIndexKey,\n                                poiType: poiType,\n                                poiData: translatedItem.gps,\n                                points: [pointItem]\n                            });\n                        }\n                    }\n                    console.log('shapeMap', shapeMap);\n\n                    const pointTypeName = 'Point';\n                    if (shapeMap[pointTypeName]) {\n                        const pointArray = shapeMap[pointTypeName];\n                        const points = [];\n                        pointArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                point.poiData = v.poiData;\n                                points.push(point);\n                            });\n                        });\n                        const pointCollection = new BMap.PointCollection(points, getFilterColor(that.getPoiTypeOption(pointTypeName)));\n                        pointCollection.addEventListener('click', (e) => {\n                            const poiData = e.point.poiData;\n                            delete e.point[poiData];\n                            that.getPoiInfoWindowHandler(pointTypeName, e.point, poiData)(e);\n                        });\n                        that.map.addOverlay(pointCollection);\n                    }\n\n                    const heatPoiType = that.panel.bdHeatRouteName;\n                    if (shapeMap[heatPoiType]) {\n                        const heatShapeList = shapeMap[heatPoiType];\n                        const heatmapOverlay = new BMapLib.HeatmapOverlay(\n                            Object.assign(\n                                {\n                                    radius: 20,\n                                },\n                                that.getPoiTypeOption(heatPoiType)\n                            ));\n                        that.map.addOverlay(heatmapOverlay);\n                        const dataList = [];\n                        heatShapeList.forEach((v) => {\n                            v.points.forEach((point) => {\n                                dataList.push(({\n                                    lng: point.lng,\n                                    lat: point.lat,\n                                    count: that.getPoiConfig(heatPoiType, v.poiData, 'count', 1)\n                                }));\n                            });\n                        });\n                        heatmapOverlay.setDataSet({\n                            data: dataList,\n                            max: that.getPoiTypeConfig(heatPoiType, 'max', 100)\n                        });\n                    }\n\n                    const labelTypeName = that.panel.bdLabelName;\n                    if (shapeMap[labelTypeName]) {\n                        const labelArray = shapeMap[labelTypeName];\n                        labelArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                const labelText = that.getPoiContent(labelTypeName, v.poiData);\n                                const labelItem = new BMap.Label(labelText, {\n                                    position: point,\n                                    enableMassClear: that.getPoiConfig(labelTypeName, v.poiData, 'enableMassClear', true)\n                                });\n                                that.map.addOverlay(labelItem);\n                                labelItem.setStyle(that.getPoiConfig(labelTypeName, v.poiData, 'style', {}));\n                                labelItem.setTitle(that.getPoiConfig(labelTypeName, v.poiData, 'title', ''));\n                                labelItem.addEventListener('click', that.getPoiInfoWindowHandler(labelTypeName, point, v.poiData));\n                                // that.addlabel(labelTypeName, label, BMap, v.poiData);\n                            });\n                        });\n                    }\n                    const markerTypeName = that.panel.bdMarkerName;\n                    if (shapeMap[markerTypeName]) {\n                        const markerArray = shapeMap[markerTypeName];\n                        markerArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                that.addMarker(markerTypeName, point, BMap, v.poiData);\n                            });\n                        });\n                        if (that.panel.clusterPoint) {\n                            new BMapLib.MarkerClusterer(that.map, {\n                                markers: that.markers\n                            });\n                        }\n                    }\n\n                    [that.panel.bdRidingRouteName, that.panel.bdDrivingRouteName, that.panel.bdWalkingRouteName].forEach((poiType) => {\n                        if (poiType in shapeMap) {\n                            const poiTypeMap = {};\n                            poiTypeMap[that.panel.bdRidingRouteName] = 'RidingRoute';\n                            poiTypeMap[that.panel.bdDrivingRouteName] = 'DrivingRoute';\n                            poiTypeMap[that.panel.bdWalkingRouteName] = 'WalkingRoute';\n                            shapeMap[poiType].forEach((item) => {\n                                const points = item.points;\n                                for (let pointIndex = 0; pointIndex < points.length - 1; pointIndex++) {\n                                    const driving = new BMap[poiTypeMap[poiType]](that.map, {\n                                        renderOptions: {\n                                            map: that.map,\n                                            autoViewport: false\n                                        }\n                                    });\n                                    driving.search(points[pointIndex], points[pointIndex + 1]);\n                                }\n                            });\n                        }\n                    });\n                    const centerPointTotal = [0, 0, 0];\n                    [that.panel.centerName].forEach((poiType) => {\n                        if (poiType in shapeMap) {\n                            shapeMap[poiType].forEach((item) => {\n                                item.points.forEach((point) => {\n                                    centerPointTotal[0] += 1;\n                                    centerPointTotal[1] += point.lng;\n                                    centerPointTotal[2] += point.lat;\n                                });\n                            });\n                        }\n                    });\n                    if (centerPointTotal[0] > 0) {\n                        that.centerPoint = new BMap.Point(\n                            centerPointTotal[1] / centerPointTotal[0],\n                            centerPointTotal[2] / centerPointTotal[0],\n                        );\n                    } else {\n                        that.centerPoint = null;\n                    }\n                    [that.panel.bdPolylineName, that.panel.bdPolygonName, that.panel.bdCircleName].forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            const poiTypeMap = {};\n                            poiTypeMap[that.panel.bdPolylineName] = 'Polyline';\n                            poiTypeMap[that.panel.bdPolygonName] = 'Polygon';\n                            poiTypeMap[that.panel.bdCircleName] = 'Circle';\n                            shapeMap[poiType].forEach((item) => {\n                                const poiOption = Object.assign(\n                                    getDefaultPolyOption(),\n                                    getFilterColor(that.getPoiOption(item.poiType, item.poiData))\n                                );\n                                const circleRadius = that.getPoiConfig(item.poiType, item.poiData, 'radius', 20);\n                                if (poiType === that.panel.bdCircleName) {\n                                    item.points.forEach((point) => {\n                                        const shape = new BMap[poiTypeMap[poiType]](point, circleRadius, poiOption);\n                                        that.map.addOverlay(shape);\n                                        shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, point, item.poiData));\n                                    });\n                                } else {\n                                    const shape = new BMap[poiType](item.points, poiOption);\n                                    that.map.addOverlay(shape);\n                                    shape.addEventListener('click', that.getPoiInfoWindowHandler(poiType, null, item.poiData));\n                                }\n                            });\n                        }\n                    });\n                    const labelPoiTypes = [that.panel.labelName];\n                    const linePoiTypes = [that.panel.polylineName, that.panel.polygonName];\n                    const dotPoiTypes = [that.panel.circleName, that.panel.squareName, that.panel.pointName];\n                    const canvasTypes = [...labelPoiTypes, ...dotPoiTypes, ...linePoiTypes];\n\n                    const canvasLayerUpdater = (canvasLayer) => {\n                        const ctx = canvasLayer.canvas.getContext('2d');\n                        if (!ctx) {\n                            return [];\n                        }\n                        const matchItems = [];\n                        ctx.save();\n                        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                        if (that.panel.maskColor) {\n                            ctx.beginPath();\n                            ctx.fillStyle = that.panel.maskColor;\n                            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                            ctx.closePath();\n                        }\n                        ctx.restore();\n                        dotPoiTypes.forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    item.points.forEach((point) => {\n                                        ctx.save();\n                                        const isCircle = poiType === that.panel.circleName;\n                                        const isPoint = poiType === that.panel.pointName;\n                                        const layerItem = {\n                                            lng: point.lng,\n                                            lat: point.lat,\n                                            size: that.getPoiConfig(poiType, item.poiData, isCircle ? 'radius' :\n                                                (isPoint ? 'size' : 'length'), isCircle ? 10 :\n                                                (isPoint ? 5 : 20)),\n                                        };\n                                        ctx.beginPath();\n                                        filterCtx(ctx, that.getPoiOption(poiType, item.poiData, isPoint ? {\n                                            'fillColor': getColor(that.getPoiConfig(poiType, item.poiData, 'color', 'blue'), 0.4)\n                                        } : {}));\n                                        const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                            parseFloat(layerItem.lat), layerItem.size, !isCircle);\n                                        if (isPoint) {\n                                            ctx.arc(posRect.x, posRect.y, layerItem.size, 0, 2 * Math.PI);\n                                        } else if (isCircle) {\n                                            ctx.arc(posRect.x, posRect.y, posRect.w, 0, 2 * Math.PI);\n                                        } else {\n                                            ctx.rect(posRect.x, posRect.y, posRect.w, posRect.h);\n                                        }\n                                        ctx.closePath();\n                                        if (!isPoint) {\n                                            ctx.stroke();\n                                        }\n                                        ctx.fill();\n                                        ctx.restore();\n                                    });\n                                });\n                            }\n                        });\n                        linePoiTypes.forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    ctx.save();\n                                    ctx.beginPath();\n                                    const poiOption = that.getPoiOption(poiType, item.poiData);\n                                    filterCtx(ctx, poiOption);\n                                    const startPoint = that.map.pointToPixel(item.points[0]);\n                                    ctx.moveTo(startPoint.x, startPoint.y);\n                                    for (let pointIndex = 1; pointIndex < item.points.length; pointIndex++) {\n                                        const linePoint = that.map.pointToPixel(item.points[pointIndex]);\n                                        ctx.lineTo(linePoint.x, linePoint.y);\n                                    }\n                                    if (poiType === that.panel.polylineName) {\n                                        ctx.stroke();\n                                    } else if (poiType === that.panel.polygonName) {\n                                        ctx.closePath();\n                                        ctx.stroke();\n                                        if (poiOption.fillOpacity) {\n                                            ctx.globalAlpha = poiOption.fillOpacity;\n                                        }\n                                        ctx.fill();\n                                    }\n                                    ctx.restore();\n                                });\n                            }\n                        });\n                        labelPoiTypes.forEach((poiType) => {\n                            if (shapeMap[poiType]) {\n                                shapeMap[poiType].forEach((item) => {\n                                    ctx.save();\n                                    ctx.beginPath();\n                                    const labelText = that.getPoiContent(poiType, item.poiData);\n                                    const poiOption = that.getPoiOption(poiType, item.poiData);\n                                    filterCtx(ctx, poiOption, false);\n                                    for (let pointIndex = 0; pointIndex < item.points.length; pointIndex++) {\n                                        ctx.beginPath();\n                                        const labelPoint = that.map.pointToPixel(item.points[pointIndex]);\n                                        ctx.fillText(labelText, labelPoint.x, labelPoint.y);\n                                    }\n                                    ctx.restore();\n                                });\n                            }\n                        });\n                        return matchItems;\n                    };\n\n                    const canvasLayerPointChecker = (checkPoint) => {\n                        const checkPixel = that.map.pointToPixel(checkPoint);\n                        const matchItems = [];\n                        dotPoiTypes.reverse()\n                            .forEach((poiType) => {\n                                if (shapeMap[poiType]) {\n                                    shapeMap[poiType].forEach((item) => {\n                                        item.points.forEach((point) => {\n                                            const isCircle = poiType === that.panel.circleName;\n                                            const isPoint = poiType === that.panel.pointName;\n                                            const layerItem = {\n                                                lng: point.lng,\n                                                lat: point.lat,\n                                                size: that.getPoiConfig(poiType, item.poiData, isCircle ? 'radius' :\n                                                    (isPoint ? 'size' : 'length'), isCircle ? 10 :\n                                                    (isPoint ? 5 : 20)),\n                                            };\n                                            const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                                parseFloat(layerItem.lat), layerItem.size, !isCircle);\n                                            if (isPoint) {\n                                                if (isPointInCircle(checkPixel, posRect, layerItem.size)) {\n                                                    matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                                }\n                                            } else if (isCircle) {\n                                                if (isPointInCircle(checkPixel, posRect, posRect.w)) {\n                                                    matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                                }\n                                            } else if (isPointInRect(checkPixel, posRect)) {\n                                                matchItems.push([checkPoint, poiType, item.poiData, point]);\n                                            }\n                                        });\n                                    });\n                                }\n                            });\n                        linePoiTypes.reverse()\n                            .forEach((poiType) => {\n                                if (shapeMap[poiType]) {\n                                    shapeMap[poiType].forEach((item) => {\n                                        if (poiType === that.panel.polygonName\n                                            && isPointInPoly(checkPixel, item.points.map(p => that.map.pointToPixel(p)))\n                                        ) {\n                                            matchItems.push([checkPoint, poiType, item.poiData, item.points]);\n                                        }\n                                    });\n                                }\n                            });\n                        return matchItems;\n                    };\n\n                    if (canvasTypes.some(canvasType => shapeMap[canvasType]) || that.panel.maskColor) {\n                        const canvasLayer = new BMap.CanvasLayer({\n                            paneName: 'mapPane',\n                            zIndex: -999,\n                            update: function () {\n                                canvasLayerUpdater(this);\n                            }\n                        });\n                        that.map.addOverlay(canvasLayer);\n                        that.clickHandler.push((event) => {\n                            let matchItems = canvasLayerPointChecker(event.point);\n                            matchItems = matchItems.filter(matchItem => that.getPoiContent(matchItem[1], matchItem[2]));\n                            if (matchItems.length > 0) {\n                                const matchItem = matchItems[0];\n                                that.getPoiInfoWindowHandler(matchItem[1], event.point, matchItem[2])(event);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.panel.hideEmpty && _.isNil(o.value)) && !(this.panel.hideZero && o.value === 0);\n        });\n    }\n\n    onDataSnapshotLoad(snapshotData) {\n        this.onDataReceived(snapshotData);\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target,\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    setNewMapCenter() {\n        this.render();\n    }\n\n    setZoom() {\n        this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n    }\n\n    setStyle() {\n        this.map.setMapStyle({style: this.panel.theme});\n    }\n\n    setAK() {\n        const x = document.body;\n        const s = document.getElementsByTagName('script');\n        const len = s.length;\n        x.removeChild(s[len - 1]);\n        delete this.map;\n        this.render();\n    }\n\n    navigationControl() {\n        if (this.panel.navigation == true) {\n            this.map.addControl(this.navigationSwitch);\n        } else {\n            this.map.removeControl(this.navigationSwitch);\n        }\n    }\n\n    scaleControl() {\n        if (this.panel.scale == true) {\n            this.map.addControl(this.scaleSwitch);\n        } else {\n            this.map.removeControl(this.scaleSwitch);\n        }\n    }\n\n    overviewMapControl() {\n        if (this.panel.overviewMap === true) {\n            this.map.addControl(this.overviewMapSwitch);\n        } else {\n            this.map.removeControl(this.overviewMapSwitch);\n        }\n    }\n\n    mapTypeControl() {\n        if (this.panel.mapType === true) {\n            this.map.addControl(this.mapTypeSwitch);\n        } else {\n            this.map.removeControl(this.mapTypeSwitch);\n        }\n    }\n\n    trafficControl() {\n        if (this.panel.traffic === true) {\n            this.map.addControl(this.trafficSwitch);\n        } else {\n            this.map.removeControl(this.trafficSwitch);\n        }\n    }\n\n    resize() {\n\n    }\n\n    toggleStickyLabels() {\n        console.log(this.panel.stickyLabels);\n    }\n\n    changeLocationData() {\n        if (this.panel.locationData === 'geohash') {\n            this.render();\n        }\n    }\n\n    /* eslint class-methods-use-this: 0 */\n    link(scope, elem, attrs, ctrl) {\n        mapRenderer(scope, elem, attrs, ctrl);\n    }\n\n\n// 如果要调试事件接口，请打开下方屏蔽代码，\n// 在firefox或者chrome下查看调试信息\n\n    // distanceTool.addEventListener('drawend', function (e) {\n    //     console.log('drawend');\n    //     console.log(e.points);\n    //     console.log(e.overlays);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('addpoint', function (e) {\n    //     console.log('addpoint');\n    //     console.log(e.point);\n    //     console.log(e.pixel);\n    //     console.log(e.index);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('removepolyline', function (e) {\n    //     console.log('removepolyline');\n    //     console.log(e);\n    // });\n\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}