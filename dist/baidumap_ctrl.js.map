{"version":3,"sources":["../src/baidumap_ctrl.js"],"names":["getColor","orginBili","alpha","bili","one","r","g","b","yellowValue","fullRedValue","darkRedWeight","parseInt","filterCtx","ctx","originOption","styleOption","Object","assign","getDefaultPolyOption","forEach","keyName","keyMap","sourceName","targetName","keyValue","getDotRect","mp","lng","lat","squareSize","isCenterPoint","standardLen","xScale","Math","cos","PI","lngDelta","latDelta","pixel","pointToPixel","window","BMap","Point","pixel2","x","y","w","h","enableEditing","enableClicking","strokeWeight","strokeOpacity","strokeColor","MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","decodeGeoHash","panelDefaults","ak","maxDataPoints","theme","initialZoom","valueName","locationData","gpsType","esMetric","decimals","navigation","scale","hideEmpty","overviewMap","hideZero","mapType","traffic","clusterPoint","globalConfig","typeName","lngName","latName","posName","geohashName","extName","BaidumapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","markers","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","poiType","getPoiOption","poiConfig","configName","typeOption","getPoiTypeExt","poiOption","getPoiExt","defaultValue","length","extJson","JSON","parse","tileServer","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonUrl","res","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","tableHandlers","datas","splice","addNode","render","clearOverlays","point","markerOption","iconUrl","Number","isInteger","icon","Icon","Size","offset","imageOffset","imageSize","anchor","marker","Marker","pointLabel","label","Label","setLabel","push","enableDragging","scontent","detailImage","infoWindow","InfoWindow","addEventListener","openInfoWindow","addOverlay","setAnimation","BMAP_ANIMATION_BOUNCE","e","alert","that","poiList","console","log","getMapSourceId","sourceGps","sourceGpsId","translateOne","poiIndex","gpsIndex","gps","rawLength","setTimeout","translateCallback","sourcePointList","callbackList","myPoiIndex","myGpsIndex","myGps","translatedData","translatedItems","sort","a","translateIndex","translatedItem","poiIndexKey","pointItem","shapeMap","shapeList","points","poiData","heatPoiType","heatShapeList","heatmapOverlay","BMapLib","HeatmapOverlay","radius","getPoiTypeOption","v","count","setDataSet","max","markerTypeName","markerArray","addMarker","MarkerClusterer","item","pointIndex","driving","renderOptions","autoViewport","search","polyline","linePoiTypes","dotPoiTypes","canvasTypes","some","canvasType","CanvasLayer","paneName","zIndex","update","canvas","getContext","save","clearRect","width","height","fillStyle","beginPath","fillRect","closePath","layerItem","size","isPie","posRect","parseFloat","ellipse","fill","restore","linePoiType","startPoint","moveTo","linePoint","lineTo","stroke","fillOpacity","globalAlpha","i","gpsItem","longitude","latitude","gpsList","split","gpsStr","convertor","Convertor","groupSize","groupIndex","pointList","translate","result","status","index","error","filter","o","isNil","value","snapshotData","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","setMapStyle","style","document","body","s","getElementsByTagName","len","removeChild","addControl","navigationSwitch","removeControl","scaleSwitch","overviewMapSwitch","mapTypeSwitch","trafficSwitch","stickyLabels","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"baidumap_ctrl.js","sourcesContent":["/* eslint-disable eqeqeq,id-length,no-inner-declarations,no-plusplus,no-mixed-operators,no-continue */\n/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\n\nimport decodeGeoHash from './geohash';\n\nconst panelDefaults = {\n    ak: 'QKCqsdHBbGxBnNbvUwWdUEBjonk7jUj6',\n    maxDataPoints: 1,\n    theme: 'normal',\n    lat: 39.968539,\n    lng: 116.497856,\n    initialZoom: 14,\n    valueName: 'current',\n    locationData: 'json result',\n    gpsType: '百度坐标系',\n    esMetric: 'Count',\n    decimals: 0,\n    navigation: true,\n    scale: true,\n    hideEmpty: false,\n    overviewMap: false,\n    hideZero: false,\n    mapType: false,\n    traffic: false,\n    clusterPoint: false,\n    globalConfig: '',\n    typeName: 'type',\n    lngName: 'longitude',\n    latName: 'latitude',\n    posName: 'pos',\n    geohashName: 'geohash',\n    extName: 'config'\n};\n\n\nfunction getColor(orginBili, alpha) {\n    if ((typeof orginBili) !== 'number') {\n        return orginBili;\n    }\n    const bili = orginBili > 100 ? 100 : orginBili;\n    // 百分之一 = (单色值范围) / 50;  单颜色的变化范围只在50%之内\n    const one = (255 + 255) / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    const yellowValue = 50;\n    const fullRedValue = 95;\n    const darkRedWeight = 0.6;\n\n    if (bili <= yellowValue) {\n        // 比例小于yellowValue的时候红色是越来越多的,直到红色为255时(红+绿)变为黄色.\n        r = one * bili / yellowValue * 50;\n        g = 255;\n    } else if (bili > yellowValue && bili <= fullRedValue) {\n        // 比例大于yellowValue的时候绿色是越来越少的,直到fullRedValue 变为纯红\n        g = 255 - ((bili - yellowValue) / (fullRedValue - yellowValue) * 50 * one);\n        r = 255;\n    } else {\n        // 比例大于fullRedValue 开始转为暗红\n        g = 0;\n        r = 255 * (1 - darkRedWeight * (bili - fullRedValue) / (100 - fullRedValue));\n    }\n    r = parseInt(r, 10);// 取整\n    g = parseInt(g, 10);// 取整\n    b = parseInt(b, 10);// 取整\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n}\n\nfunction filterCtx(ctx, originOption) {\n    const styleOption = Object.assign(getDefaultPolyOption(), originOption);\n    ['fillColor', 'strokeColor'].forEach((keyName) => {\n        if (styleOption[keyName]) {\n            styleOption[keyName] = getColor(styleOption[keyName], 0.5);\n        }\n    });\n    [\n        ['strokeWeight', 'lineWidth'],\n        ['fillColor', 'fillStyle'],\n        ['strokeColor', 'strokeStyle'],\n        ['strokeOpacity', 'globalAlpha'],\n    ].forEach((keyMap) => {\n        const [sourceName, targetName] = keyMap;\n        const keyValue = styleOption[sourceName];\n        delete styleOption[sourceName];\n        styleOption[targetName] = keyValue;\n    });\n    Object.assign(ctx, styleOption);\n}\n\n// 获取色块对应的矩形相对于地图的像素值\nfunction getDotRect(mp, lng, lat, squareSize = 20, isCenterPoint = true) {\n    const standardLen = 111700;\n    const xScale = Math.cos(lat * Math.PI / 180);\n    const lngDelta = squareSize / (standardLen * xScale);\n    const latDelta = squareSize / (standardLen);\n\n    const pixel = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng - lngDelta / 2, lat - latDelta / 2) : new window.BMap.Point(lng, lat));\n    const pixel2 = mp.pointToPixel(isCenterPoint ? new window.BMap.Point(lng + lngDelta / 2, lat + latDelta / 2) : new window.BMap.Point(lng + lngDelta, lat + latDelta));\n    return {\n        x: pixel.x,\n        y: pixel.y,\n        w: pixel2.x - pixel.x,\n        h: pixel2.y - pixel.y,\n    };\n}\n\n\nfunction getDefaultPolyOption() {\n    return {\n        enableEditing: false,\n        enableClicking: true,\n        strokeWeight: 4,\n        strokeOpacity: 0.5,\n        strokeColor: 'blue',\n    };\n}\n\nexport default class BaidumapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, contextSrv) {\n        super($scope, $injector);\n        this.setMapProvider(contextSrv);\n        _.defaults(this.panel, panelDefaults);\n\n        this.dataFormatter = new DataFormatter(this, kbn);\n        this.markers = [];\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n        // this.loadLocationDataFromFile();\n    }\n\n    getPoiTypeOption(poiType) {\n        return this.getPoiOption(poiType, null);\n    }\n\n    getPoiOption(poiType, poiConfig) {\n        const configName = 'option';\n        const typeOption = this.getPoiTypeExt(poiType, configName, {});\n        const poiOption = this.getPoiExt(poiType, poiConfig, configName, {});\n        return Object.assign({}, typeOption, poiOption);\n    }\n\n    getPoiTypeExt(poiType, configName, defaultValue = '') {\n        return this.getPoiExt(poiType, null, configName, defaultValue);\n    }\n\n    getPoiExt(poiType, poiConfig, configName, defaultValue = '') {\n        const extName = this.panel.extName;\n        if (poiConfig && extName in poiConfig && poiConfig[extName].length > 0) {\n            const extJson = JSON.parse(poiConfig[extName]);\n            if (configName in extJson) {\n                return extJson[configName];\n            }\n        }\n        if (this.panel.globalConfig && this.panel.globalConfig.length > 0) {\n            const globalConfig = JSON.parse(this.panel.globalConfig);\n            if (poiType in globalConfig && configName in globalConfig[poiType]) {\n                return globalConfig[poiType][configName];\n            }\n        }\n        return defaultValue;\n    }\n\n    setMapProvider(contextSrv) {\n//    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        this.tileServer = 'CartoDB Positron';\n        this.setMapSaturationClass();\n    }\n\n    setMapSaturationClass() {\n        if (this.tileServer === 'CartoDB Dark') {\n            this.saturationClass = 'map-darken';\n        } else {\n            this.saturationClass = '';\n        }\n    }\n\n    loadLocationDataFromFile(reload) {\n        if (this.map && !reload) return;\n\n        if (this.panel.snapshotLocationData) {\n            this.locations = this.panel.snapshotLocationData;\n            return;\n        }\n\n        if (this.panel.locationData === 'jsonp endpoint') {\n\n        } else if (this.panel.locationData === 'json endpoint') {\n            if (!this.panel.jsonUrl) return;\n        } else if (this.panel.locationData === 'table') {\n            // .. Do nothing\n\n        } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n\n        }\n    }\n\n    reloadLocations(res) {\n        this.locations = res;\n        this.refresh();\n    }\n\n    onPanelTeardown() {\n        if (this.map) delete this.map;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Baidumap', 'public/plugins/grafana-baidumap-panel/partials/editor.html', 2);\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList) return;\n        if (this.dashboard.snapshot && this.locations) {\n            this.panel.snapshotLocationData = this.locations;\n        }\n\n        const data = [];\n        if (this.panel.locationData === 'geohash') {\n            this.dataFormatter.setGeohashValues(dataList, data);\n        } else if (this.panel.locationData === 'table') {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else if (this.panel.locationData === 'json result') {\n            const tableData = dataList.map(DataFormatter.tableHandlers.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        } else {\n            const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n            this.dataFormatter.setTableValues(tableData, data);\n        }\n        // const datas = this.filterEmptyAndZeroValues(data);\n\n        const datas = data;\n        if (typeof this.data === 'object') this.data.splice(0, this.data.length);\n        this.markers.splice(0, this.markers.length);\n        if (datas.length) {\n            this.data = datas;\n\n            this.map ? this.addNode(this.BMap) : this.render();\n        } else {\n            if (this.map) this.map.clearOverlays();\n            this.render();\n        }\n    }\n\n    addMarker(poiType, point, BMap, data) {\n        // public/plugins/grafana-baidumap-panel/images/bike.png\n        const markerOption = this.getPoiOption(poiType, data);\n        const iconUrl = this.getPoiExt(poiType, data, 'icon', '');\n        if (Number.isInteger(iconUrl)) {\n            markerOption.icon = new BMap.Icon('http://api.map.baidu.com/img/markers.png', new BMap.Size(23, 25), {\n                offset: new BMap.Size(10, 25), // 指定定位位置\n                imageOffset: new BMap.Size(0, 25 * (10 - (iconUrl % 10)) - 10 * 25) // 设置图片偏移\n            });\n        } else if (iconUrl.length > 0) {\n            markerOption.icon = new BMap.Icon(iconUrl, new window.BMap.Size(24, 28), {\n                imageSize: new window.BMap.Size(24, 28),\n                anchor: new window.BMap.Size(12, 28)\n            });\n        }\n        const marker = new BMap.Marker(point, markerOption);\n        const pointLabel = this.getPoiExt(poiType, data, 'label', '');\n        if (pointLabel.length > 0) {\n            const label = new BMap.Label(pointLabel, {offset: new BMap.Size(20, -10)});\n            marker.setLabel(label);\n        }\n        this.markers.push(marker);\n\n        // this.map.setViewport(pointArray);\n        if (this.getPoiExt(poiType, data, 'enableDragging', false)) {\n            marker.enableDragging();\n        }\n        let scontent = '';\n        scontent += '<a href=\"\"><div class=\"infobox\" id=\"infobox\"><div class=\"infobox-content\" style=\"display:block\">';\n\n        const detailImage = this.getPoiExt(poiType, data, 'detailIcon', '');\n        if (detailImage.length > 0) {\n            scontent += '<div class=\"infobox-header\"><div class=\"infobox-header-icon\"><img src=\"' + detailImage + '\"></div>';\n        }\n        scontent += '<div class=\"infobox-header-name\"><p>' + this.getPoiExt(poiType, data, 'name') + '</p></div>';\n        scontent += '<div class=\"infobox-header-type\" style=\"min-width:250px\"><p>' + this.getPoiExt(poiType, data, 'type') + '</p></div></div>';\n        scontent += '<div class=\"infobox-footer\">' + this.getPoiExt(poiType, data, 'desc') + '</div>';\n        scontent += '<div class=\"infobox-footer-right\"></div></div><div class=\"arrow\"></div></div></a>';\n\n        const infoWindow = new BMap.InfoWindow(scontent); // 创建信息窗口对象\n        marker.addEventListener('click', function () {\n            this.map.openInfoWindow(infoWindow, point); // 开启信息窗口\n        });\n\n        this.map.addOverlay(marker);\n        if (this.getPoiExt(poiType, data, 'animation', false)) {\n            marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\n        }\n        marker.addEventListener('dragend', function (e) {\n            point = new BMap.Point(e.point.lng, e.point.lat);\n            alert('当前位置：' + e.point.lng + ', ' + e.point.lat);\n        });\n    }\n\n    addNode(BMap) {\n        const that = this;\n        const poiList = this.data;\n        this.map.clearOverlays();\n        console.log(poiList);\n        if (poiList) {\n            const shapeMap = [];\n            const sourcePointList = [];\n            const callbackList = [];\n\n            let rawLength = 0;\n            const translatedItems = [];\n\n            for (let i = 0; i < poiList.length; i++) {\n                const poiIndex = i;\n                setTimeout(function () {\n                    if (poiList[poiIndex] && poiList[poiIndex][that.panel.lngName]\n                        && poiList[poiIndex][that.panel.latName]\n                        && poiList[poiIndex][that.panel.lngName] > 0\n                        && poiList[poiIndex][that.panel.latName] > 0\n                    ) {\n                        const gpsItem = Object.assign({}, poiList[poiIndex]);\n                        gpsItem.lng = parseFloat(poiList[poiIndex][that.panel.lngName]);\n                        gpsItem.lat = parseFloat(poiList[poiIndex][that.panel.latName]);\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.geohashName] && poiList[poiIndex][that.panel.geohashName].length > 0) {\n                        const {longitude: lng, latitude: lat} = decodeGeoHash(poiList[poiIndex][that.panel.geohashName]);\n                        const gpsItem = Object.assign({}, poiList[poiIndex], {lng, lat});\n                        translateOne(poiIndex, 0, gpsItem, BMap);\n                    } else if (poiList[poiIndex][that.panel.posName] && poiList[poiIndex][that.panel.posName].length > 0) {\n                        const gpsList = poiList[poiIndex][that.panel.posName].split(';');\n                        for (let gpsIndex = 0; gpsIndex < gpsList.length; gpsIndex++) {\n                            const gpsStr = gpsList[gpsIndex];\n                            const [lng, lat] = gpsStr.split('|');\n                            const gpsItem = Object.assign({}, poiList[poiIndex]);\n                            gpsItem.lng = parseFloat(lng);\n                            gpsItem.lat = parseFloat(lat);\n                            translateOne(poiIndex, gpsIndex, gpsItem, BMap);\n                        }\n                    }\n                    if (sourcePointList.length > 0) {\n                        const convertor = new BMap.Convertor();\n                        const groupSize = 10;\n                        for (let groupIndex = 0; groupIndex < sourcePointList.length; groupIndex += groupSize) {\n                            const pointList = [];\n                            for (let pointIndex = 0; pointIndex < groupSize && pointIndex + groupIndex < sourcePointList.length; pointIndex++) {\n                                pointList.push(sourcePointList[groupIndex + pointIndex]);\n                            }\n                            convertor.translate(pointList, getMapSourceId(), 5, (result) => {\n                                if (result.status === 0) {\n                                    for (let index = 0; index < result.points.length; index++) {\n                                        callbackList[groupIndex + index](result.points[index]);\n                                    }\n                                } else {\n                                    console.error('gps translate error', pointList);\n                                }\n                            });\n                        }\n                    }\n                }, 10);\n            }\n\n            function getMapSourceId() {\n                const sourceGps = that.panel.gpsType;\n                let sourceGpsId = 5;\n                if (sourceGps === 'WGS84') {\n                    sourceGpsId = 1;\n                } else if (sourceGps === 'GCJ02') {\n                    sourceGpsId = 3;\n                }\n                return sourceGpsId;\n            }\n\n            function translateOne(poiIndex, gpsIndex, gps) {\n                rawLength += 1;\n                // 转换坐标\n                const sourceGpsId = getMapSourceId();\n                if (sourceGpsId === 5) {\n                    setTimeout(function () {\n                        translateCallback(poiIndex, gpsIndex, gps, {lng: gps.lng, lat: gps.lat});\n                    }, 1);\n                } else {\n                    const point = new BMap.Point(gps.lng, gps.lat);\n                    sourcePointList.push(point);\n                    callbackList.push(translateCallback.bind(this, poiIndex, gpsIndex, gps));\n                }\n            }\n\n            function translateCallback(myPoiIndex, myGpsIndex, myGps, translatedData) {\n                const {lng, lat} = translatedData;\n                translatedItems.push({\n                    poiIndex: myPoiIndex,\n                    gpsIndex: myGpsIndex,\n                    point: new BMap.Point(lng, lat),\n                    gps: myGps,\n                });\n\n                if (translatedItems.length === rawLength) {\n                    translatedItems.sort(function (a, b) {\n                        return ((a.poiIndex - b.poiIndex) * 1000000) + (a.gpsIndex - b.gpsIndex);\n                    });\n                    for (let translateIndex = 0; translateIndex < translatedItems.length; translateIndex++) {\n                        const translatedItem = translatedItems[translateIndex];\n                        const poiType = translatedItem.gps[that.panel.typeName];\n                        const poiIndexKey = 'key_' + translatedItem.poiIndex;\n                        const pointItem = translatedItem.point;\n                        if (!(poiType in shapeMap)) {\n                            shapeMap[poiType] = [];\n                        }\n                        const shapeList = shapeMap[poiType];\n                        if (shapeList.length > 0 && shapeList[shapeList.length - 1].poiIndexKey === poiIndexKey) {\n                            shapeList[shapeList.length - 1].points.push(pointItem);\n                        } else {\n                            shapeList.push({\n                                poiIndexKey: poiIndexKey,\n                                poiType: poiType,\n                                poiData: translatedItem.gps,\n                                points: [pointItem]\n                            });\n                        }\n                    }\n                    console.log('shapeMap', shapeMap);\n                    const heatPoiType = 'heat';\n                    if (shapeMap[heatPoiType]) {\n                        const heatShapeList = shapeMap[heatPoiType];\n                        const heatmapOverlay = new BMapLib.HeatmapOverlay(\n                            Object.assign(\n                                {\n                                    radius: 20,\n                                },\n                                that.getPoiTypeOption('heat')\n                            ));\n                        that.map.addOverlay(heatmapOverlay);\n                        const dataList = [];\n                        heatShapeList.forEach((v) => {\n                            v.points.forEach((point) => {\n                                dataList.push(({\n                                    lng: point.lng,\n                                    lat: point.lat,\n                                    count: that.getPoiExt(heatPoiType, v.poiData, 'count', 1)\n                                }));\n                            });\n                        });\n                        heatmapOverlay.setDataSet({\n                            data: dataList,\n                            max: that.getPoiTypeExt(heatPoiType, 'max', 100)\n                        });\n                    }\n                    const markerTypeName = 'Marker';\n                    if (shapeMap[markerTypeName]) {\n                        const markerArray = shapeMap[markerTypeName];\n                        markerArray.forEach((v) => {\n                            v.points.forEach((point) => {\n                                that.addMarker(markerTypeName, point, BMap, v.poiData);\n                            });\n                        });\n                        if (that.panel.clusterPoint) {\n                            new BMapLib.MarkerClusterer(that.map, {\n                                markers: that.markers\n                            });\n                        }\n                    }\n                    ['RidingRoute', 'DrivingRoute', 'WalkingRoute'].forEach((poiType) => {\n                        if (poiType in shapeMap) {\n                            shapeMap[poiType].forEach((item) => {\n                                const points = item.points;\n                                for (let pointIndex = 0; pointIndex < points.length - 1; pointIndex++) {\n                                    const driving = new BMap[poiType](that.map, {\n                                        renderOptions: {\n                                            map: that.map,\n                                            autoViewport: false\n                                        }\n                                    });\n                                    driving.search(points[pointIndex], points[pointIndex + 1]);\n                                }\n                            });\n                        }\n                    });\n                    ['Polyline', 'Polygon'].forEach((poiType) => {\n                        if (shapeMap[poiType]) {\n                            shapeMap[poiType].forEach((item) => {\n                                const polyline = new BMap[poiType](item.points, Object.assign(\n                                    getDefaultPolyOption(),\n                                    that.getPoiOption(item.poiType, item.poiData)\n                                ));\n                                that.map.addOverlay(polyline);\n                            });\n                        }\n                    });\n                    const linePoiTypes = ['polyline', 'polygon'];\n                    const dotPoiTypes = ['Pie', 'Square'];\n                    const canvasTypes = [...dotPoiTypes, ...linePoiTypes];\n                    if (canvasTypes.some(canvasType => shapeMap[canvasType])) {\n                        that.map.addOverlay(new BMap.CanvasLayer({\n                            paneName: 'vertexPane',\n                            zIndex: -1,\n                            update: function () {\n                                const ctx = this.canvas.getContext('2d');\n                                if (!ctx) {\n                                    return;\n                                }\n                                ctx.save();\n                                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                                ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\n                                ctx.beginPath();\n                                ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                                ctx.closePath();\n                                dotPoiTypes.forEach((poiType) => {\n                                    if (shapeMap[poiType]) {\n                                        shapeMap[poiType].forEach((item) => {\n                                            item.points.forEach((point) => {\n                                                ctx.save();\n                                                const layerItem = {\n                                                    lng: point.lng,\n                                                    lat: point.lat,\n                                                    size: that.getPoiExt(poiType, item.poiData, 'size', 20),\n                                                };\n                                                ctx.beginPath();\n                                                filterCtx(ctx, that.getPoiOption(poiType, item.poiData));\n                                                const isPie = poiType === 'Pie';\n                                                const posRect = getDotRect(that.map, parseFloat(layerItem.lng),\n                                                    parseFloat(layerItem.lat), layerItem.size, !isPie);\n                                                if (isPie) {\n                                                    ctx.ellipse(posRect.x, posRect.y, posRect.w, -posRect.h, 0, 0, 2 * Math.PI);\n                                                    ctx.fill();\n                                                } else {\n                                                    ctx.fillRect(posRect.x, posRect.y, posRect.w, posRect.h);\n                                                }\n                                                ctx.closePath();\n                                                ctx.restore();\n                                            });\n                                        });\n                                    }\n                                });\n                                linePoiTypes.forEach((linePoiType) => {\n                                    if (shapeMap[linePoiType]) {\n                                        shapeMap[linePoiType].forEach((item) => {\n                                            ctx.save();\n                                            ctx.beginPath();\n                                            const poiOption = that.getPoiOption(linePoiType, item.poiData);\n                                            filterCtx(ctx, poiOption);\n                                            const startPoint = that.map.pointToPixel(item.points[0]);\n                                            ctx.moveTo(startPoint.x, startPoint.y);\n                                            for (let pointIndex = 1; pointIndex < item.points.length; pointIndex++) {\n                                                const linePoint = that.map.pointToPixel(item.points[pointIndex]);\n                                                ctx.lineTo(linePoint.x, linePoint.y);\n                                            }\n                                            if (linePoiType === 'polyline') {\n                                                ctx.stroke();\n                                            } else if (linePoiType === 'polygon') {\n                                                ctx.closePath();\n                                                ctx.stroke();\n                                                if (poiOption.fillOpacity) {\n                                                    ctx.globalAlpha = poiOption.fillOpacity;\n                                                }\n                                                ctx.fill();\n                                            }\n                                            ctx.restore();\n                                        });\n                                    }\n                                });\n                                ctx.restore();\n                            }\n                        }));\n                    }\n                }\n            }\n        }\n    }\n\n    filterEmptyAndZeroValues(data) {\n        return _.filter(data, (o) => {\n            return !(this.panel.hideEmpty && _.isNil(o.value)) && !(this.panel.hideZero && o.value === 0);\n        });\n    }\n\n    onDataSnapshotLoad(snapshotData) {\n        this.onDataReceived(snapshotData);\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target,\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    setNewMapCenter() {\n        this.render();\n    }\n\n    setZoom() {\n        this.map.setZoom(parseInt(this.panel.initialZoom, 10) || 1);\n    }\n\n    setStyle() {\n        this.map.setMapStyle({style: this.panel.theme});\n    }\n\n    setAK() {\n        const x = document.body;\n        const s = document.getElementsByTagName('script');\n        const len = s.length;\n        x.removeChild(s[len - 1]);\n        delete this.map;\n        this.render();\n    }\n\n    navigationControl() {\n        if (this.panel.navigation == true) {\n            this.map.addControl(this.navigationSwitch);\n        } else {\n            this.map.removeControl(this.navigationSwitch);\n        }\n    }\n\n    scaleControl() {\n        if (this.panel.scale == true) {\n            this.map.addControl(this.scaleSwitch);\n        } else {\n            this.map.removeControl(this.scaleSwitch);\n        }\n    }\n\n    overviewMapControl() {\n        if (this.panel.overviewMap === true) {\n            this.map.addControl(this.overviewMapSwitch);\n        } else {\n            this.map.removeControl(this.overviewMapSwitch);\n        }\n    }\n\n    mapTypeControl() {\n        if (this.panel.mapType === true) {\n            this.map.addControl(this.mapTypeSwitch);\n        } else {\n            this.map.removeControl(this.mapTypeSwitch);\n        }\n    }\n\n    trafficControl() {\n        if (this.panel.traffic === true) {\n            this.map.addControl(this.trafficSwitch);\n        } else {\n            this.map.removeControl(this.trafficSwitch);\n        }\n    }\n\n    resize() {\n\n    }\n\n    toggleStickyLabels() {\n        console.log(this.panel.stickyLabels);\n    }\n\n    changeLocationData() {\n        if (this.panel.locationData === 'geohash') {\n            this.render();\n        }\n    }\n\n    /* eslint class-methods-use-this: 0 */\n    link(scope, elem, attrs, ctrl) {\n        mapRenderer(scope, elem, attrs, ctrl);\n    }\n\n\n// 如果要调试事件接口，请打开下方屏蔽代码，\n// 在firefox或者chrome下查看调试信息\n\n    // distanceTool.addEventListener('drawend', function (e) {\n    //     console.log('drawend');\n    //     console.log(e.points);\n    //     console.log(e.overlays);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('addpoint', function (e) {\n    //     console.log('addpoint');\n    //     console.log(e.point);\n    //     console.log(e.pixel);\n    //     console.log(e.index);\n    //     console.log(e.distance);\n    // });\n    //\n    // distanceTool.addEventListener('removepolyline', function (e) {\n    //     console.log('removepolyline');\n    //     console.log(e);\n    // });\n\n}\n\nBaidumapCtrl.templateUrl = 'module.html';\n"]}